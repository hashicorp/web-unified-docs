{
  "swagger": "2.0",
  "info": {
    "title": "HashiCorp Cloud Platform Billing",
    "description": "API for managing HCP Billing Accounts.",
    "version": "2020-11-05"
  },
  "tags": [
    {
      "name": "ActivationService"
    },
    {
      "name": "BillingAccountService"
    },
    {
      "name": "ContractService"
    },
    {
      "name": "FCPManagementService"
    },
    {
      "name": "InvoiceService"
    },
    {
      "name": "ProductService"
    },
    {
      "name": "StatementService"
    }
  ],
  "host": "api.cloud.hashicorp.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/billing/2020-11-05/activations/{activation_code}": {
      "get": {
        "summary": "GetActivationDetails returns contract activation details associated with an activation code.",
        "operationId": "ActivationService_GetActivationDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetActivationDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "activation_code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ActivationService"
        ]
      },
      "post": {
        "summary": "Activate is called by the front end to redeem the given activation code.",
        "operationId": "ActivationService_Activate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105ActivateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "activation_code",
            "description": "activation_code is the activation code being redeemed.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivationServiceActivateBody"
            }
          }
        ],
        "tags": [
          "ActivationService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts": {
      "post": {
        "summary": "Create a new Billing Account for the organization.",
        "description": "This endpoint is idempotent and it is expected that clients will retry\ntheir requests on server-side failure.",
        "operationId": "BillingAccountService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105CreateBillingAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BillingAccountServiceCreateBody"
            }
          }
        ],
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/contracts": {
      "get": {
        "summary": "ListContracts returns a list of a billing account's contracts, optionally filtered.",
        "operationId": "ContractService_ListContracts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105ListContractsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization where list of contracts' billing account belongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "blling_account_id is the identifier of the list of contracts' billing account.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "by_status",
            "description": "Query param filter: `by_status` filters by contract status/",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "UNSET",
                "ACTIVE",
                "UPCOMING",
                "EXPIRED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "by_active_from",
            "description": "Query param filter: `by_active_from` filters by the date the contract starts.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "by_active_until",
            "description": "Query param filter: `by_active_until` filters by the date the contract ends.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "ContractService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/contracts/{contract_id}": {
      "get": {
        "summary": "GetContract returns a contract by its public ID.",
        "operationId": "ContractService_GetContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetContractResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization where the contract's billing account belongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "blling_account_id is the identifier of the contract's billing account.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contract_id",
            "description": "contract_id is the public identifier for the requested contract.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ContractService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/fcp-consumption-pools": {
      "get": {
        "summary": "ListConsumptionPools returns all consumption pools for a billing account",
        "operationId": "FCPManagementService_ListConsumptionPools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105ListConsumptionPoolsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization where the billing account belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "billing_account_id is the billing account to fetch consumption pools for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FCPManagementService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/fcp-consumption-pools/{consumption_pool_id}": {
      "get": {
        "summary": "GetConsumptionPool returns a consumption pool with a specific id",
        "operationId": "FCPManagementService_GetConsumptionPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetConsumptionPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization where the billing account belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "billing_account_id is the billing account to fetch consumption pools for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "consumption_pool_id",
            "description": "consumption_pool_id is the id of the specific consumption pool to return",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FCPManagementService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/pricing-model-transitions": {
      "get": {
        "summary": "GetPricingModelTransitions gets the pricing model transitions for the given billing account.\nIf no start is specified, it will default to 1/1/1 00:00:00.000000000 UTC.\nIf no end date is specified, it will default to 12/31/9999 11:59:59.000000000 UTC.",
        "operationId": "BillingAccountService_GetPricingModelTransitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetPricingModelTransitionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the billing account belongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "billing_account_id is the public ID of the billing account.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "description": "start is the inclusive lower bound timestamp for which to get pricing model transitions.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end",
            "description": "end is the exclusive upper bound timestamp for which to get pricing model transitions.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/running-statement": {
      "get": {
        "summary": "GetRunningStatement returns a billing account's running statement.",
        "operationId": "StatementService_GetRunningStatement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetRunningStatementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "id is the user-settable ID that uniquely identifies the Billing Account\nwithin the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StatementService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/statements": {
      "get": {
        "summary": "ListStatements returns a billing account's current and historical monthly statements.",
        "operationId": "StatementService_ListStatements",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105ListStatementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "id is the user-settable ID that uniquely identifies the Billing Account\nwithin the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StatementService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/statements/{statement_id}": {
      "get": {
        "summary": "GetStatement returns a billing account's monthly statement by ID.",
        "operationId": "StatementService_GetStatement",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetStatementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "id is the user-settable ID that uniquely identifies the Billing Account\nwithin the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "statement_id",
            "description": "id is the ID that uniquely identifies the monthly statement",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StatementService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/statements/{statement_id}/csv": {
      "get": {
        "operationId": "StatementService_GetStatementCSV",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetStatementCSVResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "id is the user-settable ID that uniquely identifies the Billing Account\nwithin the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "statement_id",
            "description": "id is the ID that uniquely identifies the monthly statement",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StatementService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{billing_account_id}/usage": {
      "get": {
        "summary": "GetUsage returns the current billing period's usage. Usage information is\nnot calculated on demand, but the response explicitly specifies the\nconsidered billing period.",
        "operationId": "InvoiceService_GetUsage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetUsageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "description": "id is the user-settable ID that uniquely identifies the Billing Account\nwithin the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InvoiceService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/accounts/{id}": {
      "get": {
        "summary": "Get a Billing Account by ID.",
        "operationId": "BillingAccountService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetBillingAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "id is the user-settable ID that uniquely identifies the Billing Account\nwithin the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BillingAccountService"
        ]
      },
      "put": {
        "summary": "Update a Billing Account's settings.",
        "operationId": "BillingAccountService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105UpdateBillingAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "id is the user-settable ID that uniquely identifies the Billing Account\nwithin the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BillingAccountServiceUpdateBody"
            }
          }
        ],
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/billing_accounts/{billing_account_id}/on_demand_payment_method": {
      "delete": {
        "operationId": "BillingAccountService_RemoveOnDemandPaymentMethod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105RemoveOnDemandPaymentMethodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billing_account_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/estimateCost": {
      "put": {
        "summary": "EstimateCost returns hourly and monthly pricing information for a given package for the given resource type.",
        "operationId": "ProductService_EstimateCost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105EstimateCostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization ID used to scope the request for the package.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductServiceEstimateCostBody"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/projects/{project_id}/account": {
      "get": {
        "summary": "GetByProject returns the billing account associated with the given project.\nIf no billing account is set for the project, NotFound is returned.",
        "operationId": "BillingAccountService_GetByProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105GetBillingAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization to which the project belongs.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "description": "project_id is the project ID for which the Billing Account is being\nretrieved.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/billing/2020-11-05/organizations/{organization_id}/setup-intents": {
      "post": {
        "summary": "CreateSetupIntent creates a Setup Intent, used to collect payment details\nwith Stripe.js (and perform any necessary checks e.g. 3D-Secure).",
        "description": "https://stripe.com/docs/payments/setup-intents",
        "operationId": "BillingAccountService_CreateSetupIntent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105CreateSetupIntentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization for which the client will\ncollect payment details.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/billing/2020-11-05/packages": {
      "get": {
        "operationId": "ProductService_ListAvailablePackages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billing_20201105ListAvailablePackagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization ID used to scope the request for available packages.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project_id",
            "description": "project_id the project ID used to scope the request for available packages.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resource_type",
            "description": "resource_type is the resource to retrieve available packages for.\n\ne.g. hashicorp.consul.cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region.provider",
            "description": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region.region",
            "description": "region is the cloud region (\"us-west1\", \"us-east1\")",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    }
  },
  "definitions": {
    "ActivationServiceActivateBody": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "organization_id is the HCP org to use the activation code on."
        },
        "billing_account_id": {
          "type": "string",
          "description": "billing_account_id is the billing account to use the activation code on."
        }
      },
      "description": "ActivateRequest is used to redeem a given activation code on the specified HCP org and billing account ID."
    },
    "BillingAccountOnDemandStatus": {
      "type": "string",
      "enum": [
        "ON_DEMAND_INVALID",
        "ON_DEMAND_UNSET",
        "ON_DEMAND_ACTIVE",
        "ON_DEMAND_DELETING"
      ],
      "default": "ON_DEMAND_INVALID",
      "description": "OnDemandStatus represents the status of the on-demand payment method for a\ngiven BillingAccount."
    },
    "BillingAccountServiceCreateBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the user-settable ID for this Billing Account. It must be unique\nwithin the organization."
        },
        "name": {
          "type": "string",
          "description": "name is the Billing Account's user-defined name."
        },
        "project_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "project_ids is the list of IDs of all projects associated with the Billing\nAccount. Projects can be linked to *at most* one Billing Account."
        },
        "on_demand_billing_method": {
          "$ref": "#/definitions/billing_20201105OnDemandBillingMethod",
          "description": "on_demand_billing_method configures the on-demand billing method for the\nbilling account. This billing method is expected to be charged with\non-demand cost that isn't covered by a contract or through a positive\naccount balance."
        },
        "country": {
          "$ref": "#/definitions/billing_20201105Country",
          "description": "country is the billing account's country which is used for selecting\ncountry-specific prices and for invoicing."
        }
      },
      "description": "CreateBillingAccountRequest is the request to add a new Billing Account for\nan organization."
    },
    "BillingAccountServiceUpdateBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the Billing Account's user-defined name."
        },
        "project_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "project_ids is the list of IDs of all projects associated with the Billing\nAccount. Projects can be linked to *at most* one Billing Account."
        },
        "on_demand_billing_method": {
          "$ref": "#/definitions/billing_20201105OnDemandBillingMethod",
          "description": "on_demand_billing_method configures the on-demand billing method for the\nbilling account. This billing method is expected to be charged with\non-demand cost that isn't covered by a contract or through a positive\naccount balance."
        },
        "country": {
          "$ref": "#/definitions/billing_20201105Country",
          "description": "country is the billing account's country which is used for selecting\ncountry-specific prices and for invoicing."
        }
      },
      "description": "UpdateBillingAccountRequest is the request to update a Billing Account."
    },
    "CardDetailsBrand": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "AMERICAN_EXPRESS",
        "DINERS_CLUB",
        "DISCOVER",
        "JCB",
        "MASTERCARD",
        "UNION_PAY",
        "VISA"
      ],
      "default": "UNKNOWN"
    },
    "ContractEntitlementDetails": {
      "type": "object",
      "description": "Entitlement contains all information related to the entitlement contract."
    },
    "ContractFlexDetails": {
      "type": "object",
      "properties": {
        "initial_amount": {
          "type": "string",
          "description": "initial_amount is the initial amount on the consumption pool in USD."
        },
        "recognized_balance": {
          "type": "string",
          "description": "recognized_balance is the official remaining balance of the flex consumption pool in USD\nas of the last recognition event."
        },
        "running_total": {
          "type": "string",
          "description": "running_total is a running usage estimate since the last recognition event.\nThis number will be increased after each new running transaction and\nzeroed after a recognition event (if recognition event covered all available running\ntransactions)."
        },
        "roll_in_percentage": {
          "type": "string",
          "description": "roll_in_percentage is the percentage of a remaining balance an account is allowed to rolled in to\nthis renewal consumption pool. This percentage will be set in the renewal sales order, the actual balance\nwill be calculated at the start date of this consumption pool.\nIn case of new or add-on sales order it will be empty.\nMust be between 0 and 100."
        },
        "support_level": {
          "type": "string",
          "description": "support_level applied at the level of the flex contract."
        },
        "support_levels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ContractProductSupportLevel"
          },
          "description": "support_levels applied at the product level."
        },
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105ContractDiscount"
          },
          "description": "discounts represents all discounts under a contract."
        }
      },
      "description": "Flex contains all information related to the flex consumption contract."
    },
    "ContractProductSupportLevel": {
      "type": "object",
      "properties": {
        "support_level": {
          "type": "string",
          "description": "support_level is the support level for the product_type."
        },
        "product_type": {
          "type": "string",
          "description": "product_type is the product type this support level is for."
        }
      },
      "description": "ProductSupportLevel represents the support level associated with a product type."
    },
    "GetPricingModelTransitionsResponseTransition": {
      "type": "object",
      "properties": {
        "pricing_model": {
          "$ref": "#/definitions/billing_20201105PricingModel",
          "description": "pricing_model is the value of the pricing model for the transition."
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "start is the inclusive upper bound timestamp of this transition.\nThe value is always rounded up to the start of the hour starting the transition."
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "end is the exclusive upper bound timestamp of this transition.\nThe value is always rounded up to the start of the hour that follows the transition."
        }
      },
      "description": "Transition represent a pricing model transition where the pricing_model is the value of the pricing model\nbetween the start (inclusive) and end (exclusively) date.\nExample using [12:00, 13:00) [start, end)\n  - 12:00 to 13:59:59 is part of the transition.\n  - 13:00 and up is not part of the transition."
    },
    "PackageOptionDependency": {
      "type": "object",
      "properties": {
        "item_key": {
          "type": "string"
        },
        "option_key": {
          "type": "string"
        }
      },
      "description": "Dependency describes a dependency with a Package option."
    },
    "ProductServiceEstimateCostBody": {
      "type": "object",
      "properties": {
        "project_id": {
          "type": "string",
          "description": "project_id the project ID used to scope the request for the package."
        },
        "region": {
          "$ref": "#/definitions/locationRegion",
          "description": "region is the cloud provider \u0026 region to scope the request."
        },
        "package_item_selection": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105PackageItemSelection"
          },
          "description": "package_item_selection is the item/option selections that cost will be estimated for."
        },
        "package_key": {
          "type": "string",
          "description": "package_key is the key of the package being retrieved."
        },
        "customized_input": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105CustomizedInput"
          },
          "description": "customized_input allows the quantity of dependent products (i.e. number of Vault Clients for a Vault Cluster) to be specified for the cost estimation."
        }
      },
      "description": "EstimateCostRequest returns hourly and monthly pricing information for a given package for the given resource type."
    },
    "StatementResourceFlexibleConsumptionMetadata": {
      "type": "object",
      "properties": {
        "support_level": {
          "type": "string",
          "description": "support_level is the contract support level of the given resource."
        }
      },
      "title": "FlexibleConsumptionUsage contains Flexible Consumption specific properties"
    },
    "StatementResourceLineItem": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "description is the name of the product associated with this line item."
        },
        "amount": {
          "type": "string",
          "description": "amount is cost of this line item in USD."
        },
        "unit_price": {
          "type": "string",
          "description": "unit_price is the price per unit of the product associated.\nTODO: Use existing enum."
        },
        "quantity": {
          "type": "string",
          "description": "quantity is how many units of this product this item contains."
        },
        "unit_display_key": {
          "type": "string",
          "description": "unit_display_key is the human representation label of the unit that was used in this product."
        },
        "average_quantity": {
          "type": "string",
          "description": "average_quantity is the average units of this product for the time the line item was active."
        },
        "average_unit_display_key": {
          "type": "string",
          "description": "average_unit_display_key is human representation label of the average quantity for this product."
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "description": "started_at indicates when usage for the line item started."
        },
        "ended_at": {
          "type": "string",
          "format": "date-time",
          "description": "ended_at indicates when usage for the line item ended."
        }
      },
      "description": "LineItem represents a line item on an invoice."
    },
    "StatementStatementMetadata": {
      "type": "object",
      "properties": {
        "previous_statement": {
          "$ref": "#/definitions/billing_20201105StatementOverview",
          "description": "previous_statement is the summary of the previous month's statement."
        },
        "next_statement": {
          "$ref": "#/definitions/billing_20201105StatementOverview",
          "description": "next_statement is the summary of the next month's statement."
        }
      },
      "description": "StatementMetadata contains metadata for the statement."
    },
    "TaxSettingsExemptionStatus": {
      "type": "string",
      "enum": [
        "NONE",
        "EXEMPT",
        "REVERSE"
      ],
      "default": "NONE"
    },
    "TaxSettingsIdType": {
      "type": "string",
      "enum": [
        "UNSET",
        "AE_TRN",
        "AU_ABN",
        "BR_CNPJ",
        "BR_CPF",
        "CA_BN",
        "CA_QST",
        "CH_VAT",
        "CL_TIN",
        "ES_CIF",
        "EU_VAT",
        "HK_BR",
        "ID_NPWP",
        "IN_GST",
        "JP_CN",
        "KR_BRN",
        "LI_UID",
        "MX_RFC",
        "MY_FRP",
        "MY_ITN",
        "MY_SST",
        "NO_VAT",
        "NZ_GST",
        "RU_INN",
        "SA_VAT",
        "SG_GST",
        "SG_UEN",
        "TH_VAT",
        "TW_VAT",
        "US_EIN",
        "ZA_VAT",
        "GB_VAT"
      ],
      "default": "UNSET"
    },
    "billing_20201105ActivateResponse": {
      "type": "object",
      "description": "ActivateResponse is an empty placeholder for the response from the Activate endpoint."
    },
    "billing_20201105Address": {
      "type": "object",
      "properties": {
        "line1": {
          "type": "string",
          "description": "line1 is the street, PO Box, or company name."
        },
        "city": {
          "type": "string",
          "description": "city is a city, district, suburb, town, or village."
        },
        "line2": {
          "type": "string",
          "description": "line2 is the apartment, suite, unit, or building."
        },
        "postal_code": {
          "type": "string",
          "description": "postal_code is the ZIP or postal code."
        },
        "state": {
          "type": "string",
          "description": "state is a state, county, province, or region."
        }
      },
      "description": "Address is a physical postal address."
    },
    "billing_20201105AvailablePackage": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the Package's identifier."
        },
        "resource_type": {
          "type": "string",
          "description": "resource_type is the identifier for the resource this package represents an offering for."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105PackageItem"
          },
          "description": "items represents the contents of the package as a collection of PackageItem."
        }
      },
      "description": "Package represents a set of product offerings an end user could sign-up for."
    },
    "billing_20201105BillingAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the user-settable ID for this Billing Account. It is unique within\nthe organization."
        },
        "organization_id": {
          "type": "string",
          "description": "organization_id is the ID of the organization to which the Billing Account\nbelongs."
        },
        "name": {
          "type": "string",
          "description": "name is the Billing Account's user-defined name."
        },
        "project_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "project_ids is the list of IDs of all projects associated with the Billing\nAccount. Projects can be linked to *at most* one Billing Account."
        },
        "status": {
          "$ref": "#/definitions/billing_20201105BillingAccountStatus",
          "description": "status of the billing account (e.g. active, canceled)."
        },
        "balance": {
          "type": "string",
          "description": "balance is the account's current credit balance. Credit is added to an\naccount's balance for example when it is eligible for a free trial."
        },
        "country": {
          "$ref": "#/definitions/billing_20201105Country",
          "description": "country is the billing account's country that is used both in the billing\naddress and for selecting regional prices."
        },
        "on_demand_status": {
          "$ref": "#/definitions/BillingAccountOnDemandStatus",
          "description": "on_demand_status represents the status of the on-demand payment method."
        },
        "pricing_model": {
          "$ref": "#/definitions/billing_20201105PricingModel",
          "description": "pricing_model is the value of the current pricing model for the billing account."
        }
      },
      "description": "BillingAccount is the user-facing object in HCP that defines how an\norganization will be billed for the resources used in their projects."
    },
    "billing_20201105BillingAccountStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "DELETING",
        "DELINQUENT",
        "INCOMPLETE",
        "TRIAL"
      ],
      "default": "ACTIVE",
      "description": "BillingAccountStatus is the status of the billing account (e.g. active,\ncanceled)."
    },
    "billing_20201105BillingAccountUsage": {
      "type": "object",
      "properties": {
        "billing_period_start": {
          "type": "string",
          "format": "date-time",
          "description": "billing_period_start is the start time of the period that was considered\nfor this usage calculation."
        },
        "billing_period_end": {
          "type": "string",
          "format": "date-time",
          "description": "billing_period_end is the end time of the period that was considered for\nthis usage calculation."
        },
        "total_cost": {
          "type": "string",
          "description": "total_cost is the cost produced within this billing period minus any\ndiscount that is granted because of a positive account balance. This\nshould be considered an estimate because not all information required to\nissue an invoice might have been taken into consideration (e.g. billing\naddress country and tax might not be reflected in this value)."
        },
        "remaining_balance": {
          "type": "string",
          "description": "remaining_balance is the account balance remaining after deducting the\ncalculated usage's subtotal_cost. This should be considered as an estimate\nand understood as the potential new account balance if an invoice was\ngenerated at the end of the billing period covered by this usage."
        },
        "subtotal_cost": {
          "type": "string",
          "description": "subtotal_cost is the cost produced within this billing period. It's the sum\nof all calculated line items' amounts."
        },
        "resource_usages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105ResourceUsage"
          },
          "description": "resource_usages has information about each resource that is part of this calculation."
        },
        "discount": {
          "type": "string",
          "description": "discount is the amount of credits that would be deducted from the subtotal\nif an invoice would be generated."
        }
      },
      "description": "BillingAccountUsage describes the usage that accrued during a specific\nbilling period."
    },
    "billing_20201105CardDetails": {
      "type": "object",
      "properties": {
        "brand": {
          "$ref": "#/definitions/CardDetailsBrand",
          "description": "brand of the card."
        },
        "last4": {
          "type": "string",
          "description": "last4 is the last four digits of the card's PAN (long number)."
        },
        "exp_month": {
          "type": "integer",
          "format": "int32",
          "description": "exp_month is the two-digit month part of the card's expiration date."
        },
        "exp_year": {
          "type": "integer",
          "format": "int32",
          "description": "exp_year is the four-digit year part of the card's expiration date."
        }
      },
      "description": "CardDetails contains credit/debit card details."
    },
    "billing_20201105ConsumptionPool": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "organization_id is the organization where the billing account belongs to."
        },
        "billing_account_id": {
          "type": "string",
          "description": "billing_account_id is the slug ID of the Billing Account this\nconsumption pool is belongs to."
        },
        "active_from": {
          "type": "string",
          "format": "date-time",
          "description": "active_from is the timestamp of when the consumption pool became active."
        },
        "active_until": {
          "type": "string",
          "format": "date-time",
          "description": "active_until is the timestamp of when the consumption pool became inactive."
        },
        "initial_amount": {
          "type": "string",
          "description": "initial_amount is the initial amount on the consumption pool in USD."
        },
        "recognized_balance": {
          "type": "string",
          "description": "recognized_balance is the official remaining balance of this consumption pool in USD\nas of the last recognition event."
        },
        "running_total": {
          "type": "string",
          "title": "running_total is a running usage estimate since the last recognition event.\nThis number will be increased after each new running transaction and\nzeroed after a recognition event (if recognition event covered all available running\ntransactions)"
        },
        "support_level": {
          "type": "string",
          "description": "support_level is the support level associated with the consumption pool."
        },
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cloudbilling_20201105Discount"
          },
          "description": "discounts is the list of discounts associated with the consumption pool."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is the time when consumption pool has been created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "updated_at is the last time the consumption pool has been updated."
        },
        "id": {
          "type": "string",
          "description": "id is the id associated with the consumption pool."
        },
        "status": {
          "$ref": "#/definitions/billing_20201105ConsumptionPoolStatus",
          "description": "status is the current status of the consumption pool (ex. active, upcoming, rolled over, expired)."
        },
        "support_levels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105SupportLevel"
          },
          "title": "support_levels is the list of products and their corresponding support levels for the associated consumption pool"
        },
        "roll_in_percentage": {
          "type": "string",
          "description": "roll_in_percentage is the percentage of a remaining balance an account is allowed to rolled in to\nthis renewal consumption pool.\nFor renewal consumption pools, must be between 0 and 100.\nFor non-renewal consumption it will always be 0."
        }
      },
      "title": "ConsumptionPool represents a FCP Consumption Pool"
    },
    "billing_20201105ConsumptionPoolStatus": {
      "type": "string",
      "enum": [
        "UNSET",
        "ACTIVE"
      ],
      "default": "UNSET",
      "description": "Status represents the status of a given consumption pool.\n\n - ACTIVE: UPCOMING = 2;\n    ROLLOVER = 3;\n    NEGATIVE = 4;\n    EXPIRED = 5;"
    },
    "billing_20201105ConsumptionPoolUpdateInfo": {
      "type": "object",
      "properties": {
        "update_date": {
          "type": "string",
          "format": "date-time",
          "description": "update_date is the timestamp of when the consumption pool was updated."
        },
        "updated_field": {
          "type": "string",
          "description": "updated_field is the field of the consumption pool that was updated."
        },
        "updated_product": {
          "type": "string",
          "title": "updated_product is the product that was updated if product-specific support or discount levels were updated"
        },
        "prev_state": {
          "type": "string",
          "description": "prev_state is the previous state of the consumption pool field before it was updated."
        },
        "new_state": {
          "type": "string",
          "description": "new_state is the current state of the consumption pool field after the update."
        },
        "update_cause": {
          "$ref": "#/definitions/billing_20201105ConsumptionPoolUpdateInfoUpdateCause",
          "title": "update_cause is the reason for the update to the consumption pool (ex. addon, rollover)"
        },
        "update_effective_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is the time when consumption pool update has been created."
        }
      },
      "title": "ConsumptionPoolUpdateInfo represents information about any updates made to the consumption pool"
    },
    "billing_20201105ConsumptionPoolUpdateInfoUpdateCause": {
      "type": "string",
      "enum": [
        "ADDON",
        "EARLY_RENEWAL"
      ],
      "default": "ADDON",
      "title": "update_cause defines possible reasons for the update to the consumption pool"
    },
    "billing_20201105ConsumptionPoolsSummary": {
      "type": "object",
      "properties": {
        "initial_amount": {
          "type": "string",
          "description": "initial_amount is the total initial amount of all active consumption pools in USD."
        },
        "estimated_remaining_balance": {
          "type": "string",
          "description": "estimated_remaining_balance is the total estimated remaining balance.\nof all the active consumption pools in USD."
        },
        "active_from": {
          "type": "string",
          "format": "date-time",
          "description": "active_from is the timestamp of when the earliest of active consumption pools became active."
        },
        "active_until": {
          "type": "string",
          "format": "date-time",
          "description": "active_until is the timestamp of when the the latest of active consumption pools became inactive."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "updated_at is the last time the any of active consumption pools has been updated."
        }
      },
      "title": "ConsumptionPoolsSummary is a summary/overview info of consumption pools of a\nsingle billing account"
    },
    "billing_20201105Contract": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the public identifier of the flex consumption pool or entitlement contract."
        },
        "organization_id": {
          "type": "string",
          "description": "organization_id is the organization where the billing account belongs to."
        },
        "billing_account_id": {
          "type": "string",
          "description": "billing_account_id is the public ID of the billing account this\ncontract is belongs to."
        },
        "active_from": {
          "type": "string",
          "format": "date-time",
          "description": "active_from is the timestamp of when the contract became active."
        },
        "active_until": {
          "type": "string",
          "format": "date-time",
          "description": "active_until is the timestamp of when the contract became inactive."
        },
        "status": {
          "$ref": "#/definitions/billing_20201105ContractStatus",
          "description": "status represents the status of a given contract."
        },
        "updates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105ContractUpdate"
          },
          "description": "updates contain a list of any updates made to the contract."
        },
        "flex_details": {
          "$ref": "#/definitions/ContractFlexDetails",
          "description": "flex contains all information related to the flex consumption contract."
        },
        "entitlement_details": {
          "$ref": "#/definitions/ContractEntitlementDetails",
          "description": "entitlement contains all information related to the entitlement contract."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is when the contract was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "updated_at is the last time the contract has been updated."
        }
      },
      "description": "NOTE: The private Contract represents an entitlement contract specifically.\nContract represents a contract backed by a flex consumption pool or entitlement contract."
    },
    "billing_20201105ContractBillingMethod": {
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "description": "reference is the unique reference number, provided to the customer, which\nallows them to associate a Billing Account to their sales contract."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is the time at which the Contract was created."
        }
      },
      "description": "ContractBillingMethod contains the information used to associate a Billing\nAccount to a contract negotiated with our sales organization."
    },
    "billing_20201105ContractDetails": {
      "type": "object",
      "properties": {
        "contract_type": {
          "type": "string",
          "title": "contract_type is the type of license (i.e. \"hashicorp.hcp.flex\")"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "title": "start_date is the start date of the contract"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "title": "end_date is the end date of the contract"
        },
        "amount": {
          "type": "string",
          "title": "amount is the amount committed for this contract"
        }
      }
    },
    "billing_20201105ContractDiscount": {
      "type": "object",
      "properties": {
        "percentage": {
          "type": "string",
          "description": "percentage is the discount percentage."
        },
        "product_type": {
          "type": "string",
          "description": "product_type is the product type this discount is for."
        }
      },
      "description": "Discount represents discount under a contract."
    },
    "billing_20201105ContractStatus": {
      "type": "string",
      "enum": [
        "UNSET",
        "ACTIVE",
        "UPCOMING",
        "EXPIRED"
      ],
      "default": "UNSET",
      "description": "Status represents the status of a given contract based on its active from and until dates."
    },
    "billing_20201105ContractUpdate": {
      "type": "object",
      "properties": {
        "update_date": {
          "type": "string",
          "format": "date-time",
          "description": "update_date is the timestamp of when the contract was updated."
        },
        "updated_field": {
          "type": "string",
          "description": "updated_field is the field of the contract that was updated."
        },
        "updated_product": {
          "type": "string",
          "title": "updated_product is the product that was updated if product-specific support or discount levels were updated"
        },
        "prev_state": {
          "type": "string",
          "description": "prev_state is the previous state of the contract field before it was updated."
        },
        "new_state": {
          "type": "string",
          "description": "new_state is the current state of the contract field after the update."
        },
        "update_cause": {
          "$ref": "#/definitions/billing_20201105ContractUpdateUpdateCause",
          "description": "update_cause is the reason for the update to the contract (ex. addon, rollover)."
        },
        "update_effective_at": {
          "type": "string",
          "format": "date-time",
          "description": "update_effective_at is the time when the contract update has been created."
        }
      },
      "description": "ContractUpdate represents information about any updates made to the contract."
    },
    "billing_20201105ContractUpdateUpdateCause": {
      "type": "string",
      "enum": [
        "ADDON",
        "EARLY_RENEWAL"
      ],
      "default": "ADDON",
      "description": "update_cause defines possible reasons for the update to the contract."
    },
    "billing_20201105Country": {
      "type": "string",
      "enum": [
        "UNSET",
        "AF",
        "AL",
        "AQ",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AG",
        "AZ",
        "AR",
        "AU",
        "AT",
        "BS",
        "BH",
        "BD",
        "AM",
        "BB",
        "BE",
        "BM",
        "BT",
        "BO",
        "BA",
        "BW",
        "BV",
        "BR",
        "BZ",
        "IO",
        "SB",
        "VG",
        "BN",
        "BG",
        "MM",
        "BI",
        "BY",
        "KH",
        "CM",
        "CA",
        "CV",
        "KY",
        "CF",
        "LK",
        "TD",
        "CL",
        "CN",
        "TW",
        "CX",
        "CC",
        "CO",
        "KM",
        "YT",
        "CG",
        "CD",
        "CK",
        "CR",
        "HR",
        "CU",
        "CY",
        "CZ",
        "BJ",
        "DK",
        "DM",
        "DO",
        "EC",
        "SV",
        "GQ",
        "ET",
        "ER",
        "EE",
        "FO",
        "FK",
        "GS",
        "FJ",
        "FI",
        "AX",
        "FR",
        "GF",
        "PF",
        "TF",
        "DJ",
        "GA",
        "GE",
        "GM",
        "PS",
        "DE",
        "GH",
        "GI",
        "KI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GN",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IL",
        "IT",
        "CI",
        "JM",
        "JP",
        "KZ",
        "JO",
        "KE",
        "KP",
        "KR",
        "KW",
        "KG",
        "LA",
        "LB",
        "LS",
        "LV",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MQ",
        "MR",
        "MU",
        "MX",
        "MC",
        "MN",
        "MD",
        "ME",
        "MS",
        "MA",
        "MZ",
        "OM",
        "NA",
        "NR",
        "NP",
        "NL",
        "CW",
        "AW",
        "SX",
        "BQ",
        "NC",
        "VU",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "NO",
        "MP",
        "UM",
        "FM",
        "MH",
        "PW",
        "PK",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "GW",
        "TL",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "AI",
        "LC",
        "MF",
        "PM",
        "VC",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SK",
        "VN",
        "SI",
        "SO",
        "ZA",
        "ZW",
        "ES",
        "SS",
        "SD",
        "EH",
        "SR",
        "SJ",
        "SZ",
        "SE",
        "CH",
        "SY",
        "TJ",
        "TH",
        "TG",
        "TK",
        "TO",
        "TT",
        "AE",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "MK",
        "EG",
        "GB",
        "GG",
        "JE",
        "IM",
        "TZ",
        "US",
        "VI",
        "BF",
        "UY",
        "UZ",
        "VE",
        "WF",
        "WS",
        "YE",
        "ZM"
      ],
      "default": "UNSET",
      "description": "Country is a two-letter country code as defined by the ISO 3166-1 standard.\n\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n\n - AF: Afghanistan\n - AL: Albania\n - AQ: Antarctica\n - DZ: Algeria\n - AS: American Samoa\n - AD: Andorra\n - AO: Angola\n - AG: Antigua and Barbuda\n - AZ: Azerbaijan\n - AR: Argentina\n - AU: Australia\n - AT: Austria\n - BS: Bahamas (the)\n - BH: Bahrain\n - BD: Bangladesh\n - AM: Armenia\n - BB: Barbados\n - BE: Belgium\n - BM: Bermuda\n - BT: Bhutan\n - BO: Bolivia (Plurinational State of)\n - BA: Bosnia and Herzegovina\n - BW: Botswana\n - BV: Bouvet Island\n - BR: Brazil\n - BZ: Belize\n - IO: British Indian Ocean Territory (the)\n - SB: Solomon Islands\n - VG: Virgin Islands (British)\n - BN: Brunei Darussalam\n - BG: Bulgaria\n - MM: Myanmar\n - BI: Burundi\n - BY: Belarus\n - KH: Cambodia\n - CM: Cameroon\n - CA: Canada\n - CV: Cabo Verde\n - KY: Cayman Islands (the)\n - CF: Central African Republic (the)\n - LK: Sri Lanka\n - TD: Chad\n - CL: Chile\n - CN: China\n - TW: Taiwan (Province of China)\n - CX: Christmas Island\n - CC: Cocos (Keeling) Islands (the)\n - CO: Colombia\n - KM: Comoros (the)\n - YT: Mayotte\n - CG: Congo (the)\n - CD: Congo (the Democratic Republic of the)\n - CK: Cook Islands (the)\n - CR: Costa Rica\n - HR: Croatia\n - CU: Cuba\n - CY: Cyprus\n - CZ: Czech Republic (the)\n - BJ: Benin\n - DK: Denmark\n - DM: Dominica\n - DO: Dominican Republic (the)\n - EC: Ecuador\n - SV: El Salvador\n - GQ: Equatorial Guinea\n - ET: Ethiopia\n - ER: Eritrea\n - EE: Estonia\n - FO: Faroe Islands (the)\n - FK: Falkland Islands (the) [Malvinas]\n - GS: South Georgia and the South Sandwich Islands\n - FJ: Fiji\n - FI: Finland\n - AX: Åland Islands\n - FR: France\n - GF: French Guiana\n - PF: French Polynesia\n - TF: French Southern Territories (the)\n - DJ: Djibouti\n - GA: Gabon\n - GE: Georgia\n - GM: Gambia (the)\n - PS: Palestine, State of\n - DE: Germany\n - GH: Ghana\n - GI: Gibraltar\n - KI: Kiribati\n - GR: Greece\n - GL: Greenland\n - GD: Grenada\n - GP: Guadeloupe\n - GU: Guam\n - GT: Guatemala\n - GN: Guinea\n - GY: Guyana\n - HT: Haiti\n - HM: Heard Island and McDonald Islands\n - VA: Holy See (the)\n - HN: Honduras\n - HK: Hong Kong\n - HU: Hungary\n - IS: Iceland\n - IN: India\n - ID: Indonesia\n - IR: Iran (Islamic Republic of)\n - IQ: Iraq\n - IE: Ireland\n - IL: Israel\n - IT: Italy\n - CI: Côte d'Ivoire\n - JM: Jamaica\n - JP: Japan\n - KZ: Kazakhstan\n - JO: Jordan\n - KE: Kenya\n - KP: Korea (the Democratic People's Republic of)\n - KR: Korea (the Republic of)\n - KW: Kuwait\n - KG: Kyrgyzstan\n - LA: Lao People's Democratic Republic (the)\n - LB: Lebanon\n - LS: Lesotho\n - LV: Latvia\n - LR: Liberia\n - LY: Libya\n - LI: Liechtenstein\n - LT: Lithuania\n - LU: Luxembourg\n - MO: Macao\n - MG: Madagascar\n - MW: Malawi\n - MY: Malaysia\n - MV: Maldives\n - ML: Mali\n - MT: Malta\n - MQ: Martinique\n - MR: Mauritania\n - MU: Mauritius\n - MX: Mexico\n - MC: Monaco\n - MN: Mongolia\n - MD: Moldova (the Republic of)\n - ME: Montenegro\n - MS: Montserrat\n - MA: Morocco\n - MZ: Mozambique\n - OM: Oman\n - NA: Namibia\n - NR: Nauru\n - NP: Nepal\n - NL: Netherlands (the)\n - CW: Curaçao\n - AW: Aruba\n - SX: Sint Maarten (Dutch part)\n - BQ: Bonaire, Sint Eustatius and Saba\n - NC: New Caledonia\n - VU: Vanuatu\n - NZ: New Zealand\n - NI: Nicaragua\n - NE: Niger (the)\n - NG: Nigeria\n - NU: Niue\n - NF: Norfolk Island\n - NO: Norway\n - MP: Northern Mariana Islands (the)\n - UM: United States Minor Outlying Islands (the)\n - FM: Micronesia (Federated States of)\n - MH: Marshall Islands (the)\n - PW: Palau\n - PK: Pakistan\n - PA: Panama\n - PG: Papua New Guinea\n - PY: Paraguay\n - PE: Peru\n - PH: Philippines (the)\n - PN: Pitcairn\n - PL: Poland\n - PT: Portugal\n - GW: Guinea-Bissau\n - TL: Timor-Leste\n - PR: Puerto Rico\n - QA: Qatar\n - RE: Réunion\n - RO: Romania\n - RU: Russian Federation (the)\n - RW: Rwanda\n - BL: Saint Barthélemy\n - SH: Saint Helena, Ascension and Tristan da Cunha\n - KN: Saint Kitts and Nevis\n - AI: Anguilla\n - LC: Saint Lucia\n - MF: Saint Martin (French part)\n - PM: Saint Pierre and Miquelon\n - VC: Saint Vincent and the Grenadines\n - SM: San Marino\n - ST: Sao Tome and Principe\n - SA: Saudi Arabia\n - SN: Senegal\n - RS: Serbia\n - SC: Seychelles\n - SL: Sierra Leone\n - SG: Singapore\n - SK: Slovakia\n - VN: Viet Nam\n - SI: Slovenia\n - SO: Somalia\n - ZA: South Africa\n - ZW: Zimbabwe\n - ES: Spain\n - SS: South Sudan\n - SD: Sudan (the)\n - EH: Western Sahara*\n - SR: Suriname\n - SJ: Svalbard and Jan Mayen\n - SZ: Swaziland\n - SE: Sweden\n - CH: Switzerland\n - SY: Syrian Arab Republic\n - TJ: Tajikistan\n - TH: Thailand\n - TG: Togo\n - TK: Tokelau\n - TO: Tonga\n - TT: Trinidad and Tobago\n - AE: United Arab Emirates (the)\n - TN: Tunisia\n - TR: Turkey\n - TM: Turkmenistan\n - TC: Turks and Caicos Islands (the)\n - TV: Tuvalu\n - UG: Uganda\n - UA: Ukraine\n - MK: Macedonia (the former Yugoslav Republic of)\n - EG: Egypt\n - GB: United Kingdom of Great Britain and Northern Ireland (the)\n - GG: Guernsey\n - JE: Jersey\n - IM: Isle of Man\n - TZ: Tanzania, United Republic of\n - US: United States of America (the)\n - VI: Virgin Islands (U.S.)\n - BF: Burkina Faso\n - UY: Uruguay\n - UZ: Uzbekistan\n - VE: Venezuela (Bolivarian Republic of)\n - WF: Wallis and Futuna\n - WS: Samoa\n - YE: Yemen\n - ZM: Zambia"
    },
    "billing_20201105CreateBillingAccountResponse": {
      "type": "object",
      "properties": {
        "billing_account": {
          "$ref": "#/definitions/billing_20201105BillingAccount",
          "description": "billing_account is the Billing Account that was created."
        },
        "on_demand_billing_method_details": {
          "$ref": "#/definitions/billing_20201105OnDemandBillingMethodDetails",
          "description": "on_demand_billing_method_details contains details about the on-demand\nbilling method of the billing account."
        },
        "flexible_consumption_billing_method_details": {
          "$ref": "#/definitions/billing_20201105FlexibleConsumptionBillingMethodDetails",
          "description": "flexible_consumption_billing_method_details contains details of the billing\naccount's flexible consumption billing method.\nOnly present when the billing account is activated for Flexible Consumption."
        },
        "entitlement_billing_method_details": {
          "$ref": "#/definitions/billing_20201105EntitlementBillingMethodDetails",
          "description": "entitlement_billing_method_details contains details about the entitlement contract\nthat can be attached to a billing account to cover charges of it."
        }
      },
      "description": "CreateBillingAccountResponse is the response from creating a new Billing\nAccount for an organization."
    },
    "billing_20201105CreateSetupIntentResponse": {
      "type": "object",
      "properties": {
        "client_secret": {
          "type": "string",
          "description": "client_secret is to be used with Stripe.js (e.g. given as an argument to\nconfirmCardSetup) to tokenize the payment details and perform any required\nchecks."
        }
      },
      "description": "CreateSetupIntentResponse is the response from creating a Setup Intent to\ncollect payment details."
    },
    "billing_20201105CustomizedInput": {
      "type": "object",
      "properties": {
        "item_key": {
          "type": "string",
          "description": "item_key is the item key that had the product key in the package."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "quantity describes the value that corresponds to each item_key key. It is the estimated hourly usage."
        }
      },
      "description": "CustomizedInput allows the quantity of dependent products (i.e. number of Vault Clients for a Vault Cluster) to be specified for the cost estimation."
    },
    "billing_20201105EntitlementBillingMethodDetails": {
      "type": "object",
      "properties": {
        "billing_method": {
          "$ref": "#/definitions/billing_20201105ContractBillingMethod",
          "description": "billing_method contains the information used to register a Contract-backed\nBilling Account."
        }
      },
      "description": "EntitlementBillingMethodDetails contains both the information used to register a\nBilling Account billed via an entitlement contract, and additional information for\ndisplay purposes."
    },
    "billing_20201105EstimateCostResponse": {
      "type": "object",
      "properties": {
        "total_hourly_price": {
          "type": "string",
          "description": "total_hourly_price is the hourly price of the cluster."
        },
        "total_monthly_price": {
          "type": "string",
          "description": "total_monthly_price is the monthly price of the cluster."
        },
        "item_price": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105EstimatedPackageItemPrice"
          },
          "description": "item_price contains the individual hourly and monthly prices as well the itemKey for each product."
        }
      },
      "description": "EstimateCostResponse is the response to EstimateCostRequest \u0026 contains the hourly and monthly costs."
    },
    "billing_20201105EstimatedPackageItemPrice": {
      "type": "object",
      "properties": {
        "hourly_price": {
          "type": "string",
          "description": "hourly_price is the hourly cost for each individual product."
        },
        "monthly_price": {
          "type": "string",
          "description": "monthly_price is the monthly cost for each individual product."
        },
        "item_key": {
          "type": "string",
          "description": "item_key is the item key of the estimated cost."
        }
      },
      "description": "IndividualPrice contains the individual hourly and monthly prices as well the itemKey for each product."
    },
    "billing_20201105FlexibleConsumptionBillingMethodDetails": {
      "type": "object",
      "description": "FlexibleConsumptionBillingMethodDetails contains details of the billing\naccount's flexible consumption billing method.\nOnly present when the billing account is activated for Flexible Consumption."
    },
    "billing_20201105Geo": {
      "type": "string",
      "enum": [
        "GEO_UNSPECIFIED",
        "GEO_US",
        "GEO_EU"
      ],
      "default": "GEO_UNSPECIFIED",
      "description": "Geo is a reference to all available Geos supported by\nthe billing service.\n\n - GEO_UNSPECIFIED: GEO_UNSPECIFIED is an invalid Geo, which\nis used to flag when the Geo was left blank.\n - GEO_US: GEO_US represents a US control-plane Geo.\n - GEO_EU: GEO_EU represents a US control-plane Geo."
    },
    "billing_20201105GetActivationDetailsResponse": {
      "type": "object",
      "properties": {
        "contract_details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105ContractDetails"
          }
        }
      },
      "description": "GetActivationDetailsResponse contains contract activation details."
    },
    "billing_20201105GetBillingAccountResponse": {
      "type": "object",
      "properties": {
        "billing_account": {
          "$ref": "#/definitions/billing_20201105BillingAccount",
          "description": "billing_account is the Billing Account."
        },
        "on_demand_billing_method_details": {
          "$ref": "#/definitions/billing_20201105OnDemandBillingMethodDetails",
          "description": "on_demand_billing_method_details contains details about the on-demand\nbilling method of the billing account."
        },
        "flexible_consumption_billing_method_details": {
          "$ref": "#/definitions/billing_20201105FlexibleConsumptionBillingMethodDetails",
          "description": "flexible_consumption_billing_method_details contains details of the billing\naccount's flexible consumption billing method.\nOnly present when the billing account is activated for Flexible Consumption."
        },
        "entitlement_billing_method_details": {
          "$ref": "#/definitions/billing_20201105EntitlementBillingMethodDetails",
          "description": "entitlement_billing_method_details contains details about the entitlement contract\nthat can be attached to a billing account to cover charges of it."
        }
      },
      "description": "GetBillingAccountResponse is the response of retrieving a BillingAccount by ID."
    },
    "billing_20201105GetConsumptionPoolResponse": {
      "type": "object",
      "properties": {
        "consumption_pool": {
          "$ref": "#/definitions/billing_20201105ConsumptionPool",
          "title": "consumption_pool is the consumption pool with the corresponding id"
        },
        "consumption_pool_updates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105ConsumptionPoolUpdateInfo"
          },
          "title": "consumption_pool_updates is the information about any updates that have been made to the consumption pool"
        }
      },
      "title": "GetConsumptionPoolResponse is a response for GetConsumptionPoolById endpoint"
    },
    "billing_20201105GetContractResponse": {
      "type": "object",
      "properties": {
        "contract": {
          "$ref": "#/definitions/billing_20201105Contract",
          "description": "contract is the contract with the corresponding public ID."
        }
      },
      "description": "GetContractResponse returns a Contract."
    },
    "billing_20201105GetPricingModelTransitionsResponse": {
      "type": "object",
      "properties": {
        "transitions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetPricingModelTransitionsResponseTransition"
          },
          "description": "transitions are all the pricing model transitions that happened in the time frame specified by the request."
        }
      },
      "description": "GetPricingModelTransitionsResponse is the response containing the pricing model transitions for a billing account."
    },
    "billing_20201105GetRunningStatementResponse": {
      "type": "object",
      "properties": {
        "running_statement": {
          "$ref": "#/definitions/billing_20201105Statement",
          "description": "running_statement is the current billing period's statement."
        }
      },
      "description": "GetRunningUsageResponse is the response message returned by the GetRunningStatement RPC."
    },
    "billing_20201105GetStatementCSVResponse": {
      "type": "object",
      "properties": {
        "download_url": {
          "type": "string"
        }
      },
      "description": "GetStatementCSVRequest is a request for the csv statement URL."
    },
    "billing_20201105GetStatementResponse": {
      "type": "object",
      "properties": {
        "statement": {
          "$ref": "#/definitions/billing_20201105Statement",
          "description": "statement is the statement with the specified id."
        }
      },
      "title": "GetStatementResponse is a response for GetStatement endpoint"
    },
    "billing_20201105GetUsageResponse": {
      "type": "object",
      "properties": {
        "usage": {
          "$ref": "#/definitions/billing_20201105BillingAccountUsage",
          "description": "usage is the current billing period's usage as calculated by the last\ninvocation of CalculateUsage."
        }
      },
      "description": "GetUsageResponse is the response message returned by the GetUsage RPC."
    },
    "billing_20201105InvoiceLineItem": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "description": "amount is cost of this line item in USD."
        },
        "product_name": {
          "type": "string",
          "description": "product_name is the name of the product associated with this line item."
        },
        "unit": {
          "$ref": "#/definitions/billing_20201105Unit",
          "description": "unit is the unit on which the product price is calculated."
        },
        "unit_price": {
          "type": "string",
          "description": "unit_price is the price per unit of the product associated."
        },
        "quantity": {
          "type": "string",
          "description": "quantity is how many units of this product this item contains."
        },
        "product_key": {
          "type": "string",
          "description": "product_key is the unique identifier of the associated product."
        },
        "last_usage_recorded_at": {
          "type": "string",
          "format": "date-time",
          "description": "last_usage_recorded_at contains the timestamp of the last \"usage_until\" from\ninner line items that are contained in the aggregation.\nThis can also be used to group items that belongs to the same configuration,\ngiven that they all get their recording at the same point in time."
        },
        "standalone_item": {
          "type": "boolean",
          "description": "standalone_item when set to true will indicate that this item should not be grouped\nwith others by its last_usage_recorded_at.\nIt usually will be set to true for items that are visually independent of any\npackage or selected configuration."
        },
        "unit_display_key": {
          "type": "string",
          "description": "unit_display_key is the human representation label of the unit that was used in this product."
        }
      },
      "description": "InvoiceLineItem represents a line item on an invoice."
    },
    "billing_20201105ListAvailablePackagesResponse": {
      "type": "object",
      "properties": {
        "packages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105AvailablePackage"
          },
          "description": "packages is the list of available Packages in response to the ListAvailablePackagesRequest."
        }
      },
      "description": "ListAvailablePackagesResponse is the response to ListAvailablePackages \u0026 contains a list of available packages."
    },
    "billing_20201105ListConsumptionPoolsResponse": {
      "type": "object",
      "properties": {
        "consumption_pools": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105ConsumptionPool"
          },
          "description": "consumption_pools is the list of fetched consumption pools."
        },
        "summary": {
          "$ref": "#/definitions/billing_20201105ConsumptionPoolsSummary",
          "description": "summary is the aggregated summary for all active consumption pools."
        }
      },
      "title": "ListConsumptionPoolsResponse is a response for ListConsumptionPools endpoint"
    },
    "billing_20201105ListContractsResponse": {
      "type": "object",
      "properties": {
        "contracts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105Contract"
          },
          "description": "contracts is the list of fetched contracts."
        }
      },
      "description": "ListContractsResponse returns a list of Contracts."
    },
    "billing_20201105ListStatementsResponse": {
      "type": "object",
      "properties": {
        "statement_summaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105StatementSummary"
          },
          "description": "statement_summaries is the array of statements for an org and Billing Account."
        }
      },
      "description": "ListStatementsResponse is the response message returned by the ListStatements RPC."
    },
    "billing_20201105OnDemandBillingMethod": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the customer's full name or business name that will appear on\ninvoices."
        },
        "email": {
          "type": "string",
          "description": "email is the email address to which invoices will be sent."
        },
        "billing_address": {
          "$ref": "#/definitions/billing_20201105Address",
          "description": "billing_address is the address that will show on invoices."
        },
        "tax_settings": {
          "$ref": "#/definitions/billing_20201105TaxSettings",
          "description": "tax_settings determine how tax will be calculated."
        },
        "stripe_setup_intent_id": {
          "type": "string",
          "description": "stripe_setup_intent_id is the ID of the Stripe Setup Intent used to collect\nand tokenize payment details.\n\nhttps://stripe.com/docs/payments/setup-intents\n\nCall the CreateSetupIntent endpoint first to obtain a client secret for\nuse with Stripe.js (e.g. given as an argument to confirmCardSetup) and\nthen provide the resulting Setup Intent's ID in this call.\n\nNote: this field should not be set if you're not updating the payment\nmethod."
        }
      },
      "description": "OnDemandBillingMethod contains the information used to register a Billing\nAccount for periodic invoices and charges through our payments processor."
    },
    "billing_20201105OnDemandBillingMethodDetails": {
      "type": "object",
      "properties": {
        "billing_method": {
          "$ref": "#/definitions/billing_20201105OnDemandBillingMethod",
          "description": "billing_method contains the information used to register an on-demand\nBilling Account."
        },
        "card_details": {
          "$ref": "#/definitions/billing_20201105CardDetails",
          "description": "card_details contains additional information about the credit/debit card\nfor display purposes."
        }
      },
      "description": "OnDemandBillingMethodDetails contains both the information used to register a\nBilling Account billed on-demand, and additional information for display\npurposes (e.g. credit card details)."
    },
    "billing_20201105PackageItem": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the identifier for this particular item."
        },
        "optional": {
          "type": "boolean",
          "title": "optional represents if a selection"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105PackageOption"
          },
          "description": "options represents a list of options a user can select when signing up for this package."
        },
        "type": {
          "$ref": "#/definitions/billing_20201105PackageItemType",
          "description": "type defines what kind of type this item is."
        }
      },
      "description": "PackageItem defines a specific billable component of a Package."
    },
    "billing_20201105PackageItemSelection": {
      "type": "object",
      "properties": {
        "item_key": {
          "type": "string",
          "description": "item_key is the key of the Package Item this selection represents."
        },
        "option_key": {
          "type": "string",
          "description": "option_key is the key of the Package Item Option for this selection."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "quantity is optionally the given amount of a PackageItem required."
        }
      },
      "description": "PackageItemSelection contains the selection information of a given Package Item Option\nfor a Package Item. Optionally, it contains a quantity."
    },
    "billing_20201105PackageItemType": {
      "type": "string",
      "enum": [
        "UNSET",
        "SELECTION",
        "COST"
      ],
      "default": "UNSET",
      "description": "Type is a list of all possible types a PackageItem can have.\n\n - UNSET: UNSET is not a valid type and will not be accepted by the service.\n - SELECTION: SELECTION means that the value for this item must be supplied by the caller\nwhen registering a new resource (unless it's an optional item).\n - COST: COST means that the value of this item will always be implicitly set by the billing\nservice, depending on the available options of the package item.\nItems of this type are never selected by the user, but are a consequence of the\n`SELECTION` items they chose.\nThe internal process to select a COST item follows these steps: (This applies only for Type COST)\n\n1. If the item options have `dependencies`\n 1.a. It will assign the option key for the item with the option that matches\n      the dependencies.\n      There should never be more than one option with the same dependencies.\n 1.b. If there's no matching dependency, but the item also has an option\n      without dependency, that option will be assigned to it.\n2. When there's no dependency at all, the existing option for the item will\n   be assigned for it.\n   There should never be more than 1 option per item without dependency."
    },
    "billing_20201105PackageOption": {
      "type": "object",
      "properties": {
        "unit": {
          "$ref": "#/definitions/billing_20201105Unit",
          "description": "unit is the type of measurement that is used to calculate the quantity used of this product."
        },
        "unit_price": {
          "type": "string",
          "description": "unit_price is the price of a single unit of the product in USD."
        },
        "key": {
          "type": "string",
          "description": "key is the unique identifier of the Option for a given Item."
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PackageOptionDependency"
          },
          "description": "dependencies defines a dependency between this PackageOption and another\nOption a different item.\n\nDependencies are optional, and when they are not set it means that the\noption could be used with any other combination of items/options.\n\nWhen they are set, all dependencies have to be met for this PackageOption to be active.\n\nExample scenario 1:\n- Item 1 has 2 Options: 1.1 and 1.2\n- Item 2 has also 2 Options: 2.1 and 2.2, and item 2 is of type SELECTION\n- Option 2.1 has a dependency on 1.1\n- Option 2.2 has a dependency on 1.2\n- If a user select 1.1, then 2.1 can be selected\n- If a user select 1.2, then 2.2 can be selected\n\nExample scenario 2:\n- Item 1 has 2 Options: 1.1 and 1.2\n- Item 2 has also 2 Options: 2.1 and 2.2, and item 2 is of type COST\n- Option 2.1 has a dependency on 1.1\n- Option 2.2 has a dependency on 1.2\n- If a user select 1.1, then 2.1 will be automatically be selected\n- If a user select 1.2, then 2.2 will be automatically be selected\n\n  In this scenario Item 1 could represent cluster size and Item 2 could\n  represent the mumber of clients. Selecting medium (1.2) affects the\n  price of the number of clients (2.2).\n\nExample scenario 3:\n- Item 1 has 2 Options: 1.1 and 1.2\n- Item 2 has also 2 Options: 2.1 and 2.2, and item 2 is of type SELECTION\n- Option 2.1 has no dependencies\n- Option 2.2 has no dependencies\n- Either options 2.1 and 2.2 can be selected by the user, regardless\n  of the item 1 option value."
        },
        "unit_display_key": {
          "type": "string",
          "description": "unit_display_key contains an human label for the product unit.\nIt will be present if the unit type is set to UNIT, as a way\nto clarify what the customer is going to be charged for."
        }
      },
      "description": "PackageOption represents a selection of a PackageItem as part of a Package."
    },
    "billing_20201105PricingModel": {
      "type": "string",
      "enum": [
        "PRICING_MODEL_UNSPECIFIED",
        "PRICING_MODEL_PAYG",
        "PRICING_MODEL_FLEX",
        "PRICING_MODEL_ENTITLEMENT"
      ],
      "default": "PRICING_MODEL_UNSPECIFIED",
      "description": "PricingModel is a reference to all available pricing models in the billing service.\n\n - PRICING_MODEL_UNSPECIFIED: PRICING_MODEL_UNSPECIFIED is an invalid pricing model, which\nis used to flag when the pricing model was left blank.\n - PRICING_MODEL_PAYG: PRICING_MODEL_PAYG represents the PAYG pricing model.\n - PRICING_MODEL_FLEX: PRICING_MODEL_FLEX represents the FLEX (or FCP) pricing model.\n - PRICING_MODEL_ENTITLEMENT: PRICING_MODEL_ENTITLEMENT represents the Entitlement (or contracts) pricing model."
    },
    "billing_20201105RemoveOnDemandPaymentMethodResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        }
      }
    },
    "billing_20201105ResourceUsage": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/locationLink",
          "description": "resource is a link to the Resource for which this line item charges."
        },
        "usage_from": {
          "type": "string",
          "format": "date-time",
          "description": "usage_from is the start time of the first line item of this resource."
        },
        "usage_until": {
          "type": "string",
          "format": "date-time",
          "description": "usage_until is the end time of the last line item of this resource."
        },
        "amount": {
          "type": "string",
          "description": "amount is the sum of the amount of all line items."
        },
        "total_hours": {
          "type": "number",
          "format": "double",
          "description": "total_Hours contains the difference between usage_until and usage_from\nin units of hours."
        },
        "line_items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105InvoiceLineItem"
          },
          "description": "line_items is the list of line items as they would appear on an invoice.\nThey are a simplified version of the backend one, containing only\npoints useful for the UI."
        }
      },
      "description": "ResourceUsage contains the usage of a single resource, including all\nthe line items from it."
    },
    "billing_20201105Statement": {
      "type": "object",
      "properties": {
        "billing_period_start": {
          "type": "string",
          "format": "date-time",
          "description": "billing_period_start is the start time of the period that was considered\nfor this usage calculation."
        },
        "billing_period_end": {
          "type": "string",
          "format": "date-time",
          "description": "billing_period_end is the end time of the period that was considered for\nthis usage calculation."
        },
        "total": {
          "type": "string",
          "description": "total is the cost produced within this billing period minus any\ndiscount that is granted because of a positive account balance. This\nshould be considered an estimate because not all information required to\nissue an invoice might have been taken into consideration (e.g. billing\naddress country and tax might not be reflected in this value)."
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105StatementResource"
          },
          "description": "resources has information about each resource that is part of the statement."
        },
        "last_updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "last_updated_at is the last time this statement gets updated.\nThis shows the last usage time that is included in this statement."
        },
        "id": {
          "type": "string",
          "description": "id is the id associated with the statement."
        },
        "non_usage_charges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/billing_20201105StatementResource"
          },
          "description": "non_usage_charges has information about each resource that is part of the statement but non usage charge type."
        },
        "statement_metadata": {
          "$ref": "#/definitions/StatementStatementMetadata",
          "description": "statement_metadata contains metadata for the statement."
        },
        "state": {
          "$ref": "#/definitions/billing_20201105StatementState",
          "description": "state indicates the life cycle step that the Statement is currently in."
        }
      },
      "title": "Statement describes the usage that accrued during a specific billing period"
    },
    "billing_20201105StatementOverview": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id is the id associated with the statement"
        },
        "billing_period_start": {
          "type": "string",
          "format": "date-time",
          "title": "billing_period_start is the start date for the statement billing period"
        },
        "billing_period_end": {
          "type": "string",
          "format": "date-time",
          "title": "billing_period_end is the end date for the statement billing period"
        },
        "total": {
          "type": "string",
          "title": "total is the sum total in dollars for the statement"
        },
        "state": {
          "$ref": "#/definitions/billing_20201105StatementState",
          "description": "state indicates the life cycle step that the Statement is currently in."
        }
      },
      "description": "StatementOverview contains a few key details from a Statement.\nTODO: This will replace the public StatementSummary object."
    },
    "billing_20201105StatementResource": {
      "type": "object",
      "properties": {
        "resource_link": {
          "$ref": "#/definitions/locationLink",
          "description": "resource is a link to the Resource for which this line item charges."
        },
        "amount": {
          "type": "string",
          "description": "amount is the sum of the amount of all line items."
        },
        "flexible_consumption_metadata": {
          "$ref": "#/definitions/StatementResourceFlexibleConsumptionMetadata",
          "description": "fcp contains flexible consumption specific properties."
        },
        "line_items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/StatementResourceLineItem"
          },
          "description": "line_items is the list of line items as they would appear on an invoice."
        },
        "active_from": {
          "type": "string",
          "format": "date-time",
          "description": "active_from is the timestamp of when the billed resource became active."
        },
        "active_until": {
          "type": "string",
          "format": "date-time",
          "description": "active_until is the timestamp of when the billed resource became inactive."
        },
        "geo": {
          "$ref": "#/definitions/billing_20201105Geo",
          "description": "geo defines on which geography the control-plane for this resource exists."
        },
        "common_resource_attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "common_resource_attributes contains all the attributes that are\ncommon to all the resource's line items."
        }
      },
      "description": "Resource contains the running usage of a single resource, including all\nthe line items from it."
    },
    "billing_20201105StatementState": {
      "type": "string",
      "enum": [
        "STATEMENT_STATE_UNSET",
        "STATEMENT_STATE_RUNNING",
        "STATEMENT_STATE_PAID",
        "STATEMENT_STATE_SUBMITTED",
        "STATEMENT_STATE_WONTPAY",
        "STATEMENT_STATE_VOID"
      ],
      "default": "STATEMENT_STATE_UNSET",
      "description": "StatementState represents the current state of this statement.\n\n - STATEMENT_STATE_UNSET: STATEMENT_STATE_UNSET means the current state of the statement is not set or not specified.\n - STATEMENT_STATE_RUNNING: STATEMENT_STATE_RUNNING is for the latest current billing period statement.\nOnly one running statement per billing period per billing account at a time.\n - STATEMENT_STATE_PAID: STATEMENT_STATE_PAID for FCP is when a statement is recognized.\nPaid for PAYG is when stripe invoice is paid.\n - STATEMENT_STATE_SUBMITTED: STATEMENT_STATE_SUBMITTED means the statement was sent for collection and can no longer\nbe changed. It's yet to be paid.\n - STATEMENT_STATE_WONTPAY: STATEMENT_STATE_WONTPAY means that attempts to collect money for the payment were exhausted.\nThis also means the account could enter the delinquency flow because of this.\n - STATEMENT_STATE_VOID: STATEMENT_STATE_VOID means that this statement must be ignored as it is not valid anymore."
    },
    "billing_20201105StatementSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id is the id associated with the statement"
        },
        "billing_period_start": {
          "type": "string",
          "format": "date-time",
          "title": "billing_period_start is the start date for the statement billing period"
        },
        "billing_period_end": {
          "type": "string",
          "format": "date-time",
          "title": "billing_period_end is the end date for the statement billing period"
        },
        "amount": {
          "type": "string",
          "title": "amount is the dollar amount for the statement"
        },
        "state": {
          "$ref": "#/definitions/billing_20201105StatementState",
          "description": "state indicates the life cycle step that the Statement is currently in."
        }
      },
      "description": "StatementSummary represents the response type for the ListStatements endpoint.\nTODO: This will be replaced by the public StatementOverview object."
    },
    "billing_20201105SupportLevel": {
      "type": "object",
      "properties": {
        "support_level": {
          "type": "string",
          "title": "support_level is the support level for the product_type"
        },
        "product_type": {
          "type": "string",
          "description": "product_type is the product type this support level is for."
        }
      },
      "title": "SupportLevel represents the support level associated with a product type"
    },
    "billing_20201105TaxSettings": {
      "type": "object",
      "properties": {
        "exemption_status": {
          "$ref": "#/definitions/TaxSettingsExemptionStatus",
          "description": "exemption_status indicates the customer’s tax exemption status which\ncan be one of none, exempt, or reverse."
        },
        "id_type": {
          "$ref": "#/definitions/TaxSettingsIdType",
          "description": "id_type is the tax ID type."
        },
        "id": {
          "type": "string",
          "description": "id is the tax ID to include on invoices."
        }
      },
      "description": "TaxSettings contain a Billing Account's settings related to taxation.\n\nThese are oriented to Stripe's tax settings:\n\nhttps://stripe.com/docs/billing/taxes/tax-rates."
    },
    "billing_20201105Unit": {
      "type": "string",
      "enum": [
        "NO_UNIT",
        "HOUR",
        "MINUTE",
        "UNIT",
        "MONTH"
      ],
      "default": "NO_UNIT",
      "description": "Unit is an enum with all possible measurement units\nthe system accepts.\n\n - HOUR: Valid for static products."
    },
    "billing_20201105UpdateBillingAccountResponse": {
      "type": "object",
      "properties": {
        "billing_account": {
          "$ref": "#/definitions/billing_20201105BillingAccount",
          "description": "billing_account is the Billing Account that was updated."
        },
        "on_demand_billing_method_details": {
          "$ref": "#/definitions/billing_20201105OnDemandBillingMethodDetails",
          "description": "on_demand_billing_method_details contains details about the on-demand\nbilling method of the billing account."
        },
        "flexible_consumption_billing_method_details": {
          "$ref": "#/definitions/billing_20201105FlexibleConsumptionBillingMethodDetails",
          "description": "flexible_consumption_billing_method_details contains details of the billing\naccount's flexible consumption billing method.\nOnly present when the billing account is activated for Flexible Consumption."
        },
        "entitlement_billing_method_details": {
          "$ref": "#/definitions/billing_20201105EntitlementBillingMethodDetails",
          "description": "entitlement_billing_method_details contains details about the entitlement contract\nthat can be attached to a billing account to cover charges of it."
        }
      },
      "description": "UpdateBillingAccountResponse is the response from updating a Billing Account."
    },
    "cloudbilling_20201105Discount": {
      "type": "object",
      "properties": {
        "percentage": {
          "type": "string",
          "description": "percentage is the discount percentage."
        },
        "product_type": {
          "type": "string",
          "description": "product_type is the product type this discount is for."
        }
      },
      "title": "Discount represents a consumption pool discount"
    },
    "cloudlocationLocation": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "organization_id is the id of the organization."
        },
        "project_id": {
          "type": "string",
          "description": "project_id is the projects id."
        },
        "region": {
          "$ref": "#/definitions/locationRegion",
          "description": "region is the region that the resource is located in. It is\noptional if the object being referenced is a global object."
        }
      },
      "description": "Location represents a target for an operation in HCP."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "locationLink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "type is the unique type of the resource. Each service publishes a\nunique set of types. The type value is recommended to be formatted\nin \"\u003corg\u003e.\u003ctype\u003e\" such as \"hashicorp.hvn\". This is to prevent conflicts\nin the future, but any string value will work."
        },
        "id": {
          "type": "string",
          "description": "id is the identifier for this resource."
        },
        "uuid": {
          "type": "string",
          "description": "uuid is the unique UUID for this resource."
        },
        "location": {
          "$ref": "#/definitions/cloudlocationLocation",
          "description": "location is the location where this resource is."
        },
        "description": {
          "type": "string",
          "description": "description is a human-friendly description for this link. This is\nused primarily for informational purposes such as error messages."
        }
      },
      "description": "Link is used to uniquely reference any resource within HashiCorp Cloud.\nThis can be conceptually considered a \"foreign key\"."
    },
    "locationRegion": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "title": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")"
        },
        "region": {
          "type": "string",
          "title": "region is the cloud region (\"us-west1\", \"us-east1\")"
        }
      },
      "description": "Region identifies a Cloud data-plane region."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
