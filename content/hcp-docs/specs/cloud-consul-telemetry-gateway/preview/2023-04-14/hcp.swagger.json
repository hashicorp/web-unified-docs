{
  "swagger": "2.0",
  "info": {
    "title": "HashiCorp Cloud Platform Consul Telemetry Gateway Service",
    "version": "2023-04-14"
  },
  "tags": [
    {
      "name": "ConsulTelemetryService"
    }
  ],
  "host": "api.cloud.hashicorp.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ctgw/2023-04-14/organizations/{location.organization_id}/projects/{location.project_id}/clusters/{cluster_id}/agent/telemetry_config": {
      "post": {
        "operationId": "AgentTelemetryConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.AgentTelemetryConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "region": {
                      "$ref": "#/definitions/hashicorp.cloud.location.Region",
                      "description": "region is the region that the resource is located in. It is\noptional if the object being referenced is a global object."
                    }
                  },
                  "description": "Location represents a target for an operation in HCP."
                }
              }
            }
          }
        ],
        "tags": [
          "ConsulTelemetryService"
        ]
      }
    },
    "/ctgw/2023-04-14/organizations/{location.organization_id}/projects/{location.project_id}/clusters/{cluster_id}/label/values": {
      "post": {
        "summary": "Returns the label values for a given cluster",
        "operationId": "GetLabelValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.GetLabelValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "region": {
                      "$ref": "#/definitions/hashicorp.cloud.location.Region",
                      "description": "region is the region that the resource is located in. It is\noptional if the object being referenced is a global object."
                    }
                  },
                  "description": "Location represents a target for an operation in HCP."
                },
                "type": {
                  "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.LVT",
                  "title": "refs a metric that we allow frontend to query values for"
                },
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                },
                "cluster_internal_id": {
                  "type": "string",
                  "description": "cluster_internal_id is the internal UUID of the cluster. This is used, instead of the public id,\nto separate metrics per cluster. There could be two clusters in the same organization with the same public id,\nor a two clusters with the same name in the same project, one created after the other is deleted. In either\nscenario, we do not want to show the other cluster's metrics."
                }
              },
              "title": "GetLabelValuesRequest"
            }
          }
        ],
        "tags": [
          "ConsulTelemetryService"
        ]
      }
    },
    "/ctgw/2023-04-14/organizations/{location.organization_id}/projects/{location.project_id}/clusters/{cluster_id}/query_range_batch": {
      "post": {
        "summary": "Custom endpoints for observability that batches QueryRange requests",
        "operationId": "QueryRangeBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.QueryRangeBatchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "region": {
                      "$ref": "#/definitions/hashicorp.cloud.location.Region",
                      "description": "region is the region that the resource is located in. It is\noptional if the object being referenced is a global object."
                    }
                  },
                  "description": "Location represents a target for an operation in HCP."
                },
                "query": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.QRT"
                  },
                  "description": "query is the set of QueryRangeTypes (QRT) to query for. Between 1 and 10 queries can be issued in one batch."
                },
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "end": {
                  "type": "string",
                  "format": "date-time"
                },
                "step": {
                  "type": "string"
                },
                "service_name": {
                  "type": "string",
                  "description": "service_name is an optional filter for service-level queries. Required for service-specific queries."
                },
                "service_namespace": {
                  "type": "string",
                  "description": "service_namespace is an optional filter for service-level queries. Required for service-specific queries."
                },
                "service_partition": {
                  "type": "string",
                  "description": "service_partition is an optional filter for service-level queries. Required for service-specific queries."
                },
                "cluster_internal_id": {
                  "type": "string",
                  "description": "cluster_internal_id is the internal UUID of the cluster. This is used, instead of the public id,\nto separate metrics per cluster. There could be two clusters in the same organization with the same public id,\nor a two clusters with the same name in the same project, one created after the other is deleted. In either\nscenario, we do not want to show the other cluster's metrics."
                }
              },
              "description": "QueryRangeBatchRequest is a custom endpoint request to have multiple QueryRangeReuqests in a single endpoint that will multiple QueryRangeRequests in a single endpoint. Same\nrestricuts on the type and the response type are required and must return a map of \u003cstring(the QueryRangeType), MetricMatrix\u003e.",
              "title": "QueryRangeBatchRequest"
            }
          }
        ],
        "tags": [
          "ConsulTelemetryService"
        ]
      }
    },
    "/ctgw/2023-04-14/organizations/{location.organization_id}/projects/{location.project_id}/topologies/service": {
      "get": {
        "summary": "Creates a service topology graph based on recent metrics from the mesh.",
        "operationId": "GetServiceTopology",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.GetServiceTopologyResponse"
            }
          },
          "500": {
            "description": "An unexpected internal server error response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.GetServiceTopologyStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "region is the cloud region (\"us-west1\", \"us-east1\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "description": "start is the beginning of the time range over which metrics are queried from the mesh.\nThe returned graph will not include requests/connections between services that happened\nbefore this.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "duration",
            "description": "duration is the length of time, from start, to include in the query for metrics from the mesh.\nThe returned graph will not include requests/connections between services that happened\nafter start + duration.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "root.cluster_internal_id",
            "description": "The internal id the Consul cluster the service is registered with. This is from global-network-manager.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "root.cluster_id",
            "description": "Cluster ID is the name of the cluster in GNM. This is the user settable name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "root.partition",
            "description": "Partition where the service is deployed.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "root.namespace",
            "description": "Namespace where the service is deployed.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "root.name",
            "description": "Name of the service.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "root.trust_domain",
            "description": "trust_domain of the cluster. This is a globally unique UUID created by the Consul cluster on startup\nfor its certificate authority if connect is enabled: https://developer.hashicorp.com/consul/api-docs/connect/ca#sample-request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includes.cluster_internal_id",
            "description": "The internal id the Consul cluster the service is registered with. This is from global-network-manager.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includes.cluster_id",
            "description": "Cluster ID is the name of the cluster in GNM. This is the user settable name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includes.partition",
            "description": "Partition where the service is deployed.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includes.namespace",
            "description": "Namespace where the service is deployed.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includes.name",
            "description": "Name of the service.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includes.trust_domain",
            "description": "trust_domain of the cluster. This is a globally unique UUID created by the Consul cluster on startup\nfor its certificate authority if connect is enabled: https://developer.hashicorp.com/consul/api-docs/connect/ca#sample-request.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConsulTelemetryService"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.AgentTelemetryConfigResponse": {
      "type": "object",
      "properties": {
        "telemetry_config": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.TelemetryConfig"
        },
        "refresh_config": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.RefreshConfig"
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.Cluster": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID is the user settable name of the cluster in GNM."
        },
        "licensing": {
          "type": "string",
          "description": "licensing describes the licensing state of the cluster. These map to the cluster's licensing\nstate in GNM."
        },
        "datacenter": {
          "type": "string",
          "description": "datacenter is the name of the cluster within Consul itself. This may differ from the cluster's\nid/name in GNM if an existing cluster is linked with differing names."
        },
        "trust_domain": {
          "type": "string",
          "description": "trust_domain of the cluster. This is a globally unique UUID created by the Consul cluster on startup\nfor its certificate authority if connect is enabled: https://developer.hashicorp.com/consul/api-docs/connect/ca#sample-request."
        },
        "external": {
          "type": "boolean",
          "description": "external is set to true if the cluster could not be found in GNM, implying that this cluster is unlinked or outside the project."
        }
      },
      "description": "Cluster is the cluster that a service is from."
    },
    "hashicorp.cloud.consul_telemetry_20230414.GetLabelValuesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.GetServiceTopologyRequest.ServiceFilter": {
      "type": "object",
      "properties": {
        "cluster_internal_id": {
          "type": "string",
          "description": "The internal id the Consul cluster the service is registered with. This is from global-network-manager."
        },
        "cluster_id": {
          "type": "string",
          "description": "Cluster ID is the name of the cluster in GNM. This is the user settable name."
        },
        "partition": {
          "type": "string",
          "description": "Partition where the service is deployed."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace where the service is deployed."
        },
        "name": {
          "type": "string",
          "description": "Name of the service."
        },
        "trust_domain": {
          "type": "string",
          "description": "trust_domain of the cluster. This is a globally unique UUID created by the Consul cluster on startup\nfor its certificate authority if connect is enabled: https://developer.hashicorp.com/consul/api-docs/connect/ca#sample-request."
        }
      },
      "description": "A service filter is a service used to limit the response of GetServiceTopology."
    },
    "hashicorp.cloud.consul_telemetry_20230414.GetServiceTopologyResponse": {
      "type": "object",
      "properties": {
        "graph": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.ServiceTopology",
          "description": "graph is the service topology graph where nodes are services and edges are created for those with connections/requests\nbetween those services."
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.GetServiceTopologyStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.GetServiceTopologyStatus.Error"
          },
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use."
        }
      },
      "title": "GetServiceTopologyStatus is like google.rpc.Status except it explicitly includes enums that map to\nthe parts of graph construction that failed during the call to GetServiceTopology. This is necessary because\nby default, grpc-gateway will not include enums in the OpenAPI specs, but we want these to be available\nto the frontend to understand which part(s) of graph construction failed.\nhttps://grpc-ecosystem.github.io/grpc-gateway/docs/mapping/customizing_openapi_output/"
    },
    "hashicorp.cloud.consul_telemetry_20230414.GetServiceTopologyStatus.Error": {
      "type": "string",
      "enum": [
        "ERROR_UNSPECIFIED",
        "ERROR_NODE_SERVICE",
        "ERROR_NODE_CLUSTER",
        "ERROR_NODE_METRICS",
        "ERROR_EDGE_METRICS",
        "ERROR_EDGE_INTENTIONS"
      ],
      "default": "ERROR_UNSPECIFIED",
      "description": "service topology errors are returned with the graph on failures to gather metadata for some part(s) of the graph.\n\n - ERROR_NODE_SERVICE: node service error is returned if we failed to get service metadata from GNM for some/all of the services.\n - ERROR_NODE_CLUSTER: node cluster error is returned if we failed to get cluster-level metadata from GNM for some/all of the services' clusters.\n - ERROR_NODE_METRICS: node metric error is returned if we failed to get service metrics for connections/requests into services from all other services.\n - ERROR_EDGE_METRICS: edge metric error is returned if we failed to get connection/request metrics between services.\n - ERROR_EDGE_INTENTIONS: edge intentions error is returned if we failed to get intentions from GNM."
    },
    "hashicorp.cloud.consul_telemetry_20230414.HttpMetrics": {
      "type": "object",
      "properties": {
        "req_rate": {
          "type": "number",
          "format": "float",
          "description": "req_rate is the per-second rate of requests to a service."
        },
        "error_ratio": {
          "type": "number",
          "format": "float",
          "description": "error_ratio is the ratio of HTTP responses from a service that have a 5XX response code."
        },
        "duration_ms_p50": {
          "type": "number",
          "format": "float",
          "description": "duration_ms_p50 is the P50 latency of response from a service in milliseconds."
        },
        "duration_ms_p90": {
          "type": "number",
          "format": "float",
          "description": "duration_ms_p90 is the P90 latency of response from a service in milliseconds."
        },
        "duration_ms_avg": {
          "type": "number",
          "format": "float",
          "description": "duration_ms_avg is the average latency of response from a service in milliseconds."
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.Intentions": {
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.Intentions.Authorization",
          "description": "authorization describes whether the call from the downstream service to the upstream service was\nallowed after factoring in all intentions and the acl.default_policy."
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.Intentions.Entry"
          },
          "description": "entries is the set of intention entries that apply to the call between the downstream and upstream\nservice. These are sorted from highest precedence (ie the intention that actually applied) to lowest."
        }
      },
      "description": "intentions describe the intentions that allow/deny traffic between services."
    },
    "hashicorp.cloud.consul_telemetry_20230414.Intentions.Authorization": {
      "type": "string",
      "enum": [
        "AUTHORIZATION_UNSPECIFIED",
        "AUTHORIZATION_ALLOW_INTENTIONS",
        "AUTHORIZATION_DENY_INTENTIONS",
        "AUTHORIZATION_ALLOW_DEFAULT",
        "AUTHORIZATION_DENY_DEFAULT",
        "AUTHORIZATION_UNDEFINED_APP_AWARE"
      ],
      "default": "AUTHORIZATION_UNSPECIFIED",
      "description": "authorization are the authorization results of intentions between services.\nEither traffic is allowed, denied, or undefined.\n\n - AUTHORIZATION_ALLOW_INTENTIONS: traffic is allowed because of an intention\n - AUTHORIZATION_DENY_INTENTIONS: traffic is denied because of an intention\n - AUTHORIZATION_ALLOW_DEFAULT: traffic is allowed because of a default acl policy\n - AUTHORIZATION_DENY_DEFAULT: traffic is denied because of a default acl policy\n - AUTHORIZATION_UNDEFINED_APP_AWARE: traffic is either allowed or denied based on paths in the request. We cannot tell, from the\nintentions/default_policy alone, whether calls will be allowed or denied. This is the case if\nHTTP is set on intention permissions: https://developer.hashicorp.com/consul/docs/connect/config-entries/service-intentions#sources-permissions-http"
    },
    "hashicorp.cloud.consul_telemetry_20230414.Intentions.Entry": {
      "type": "object",
      "properties": {
        "cluster_location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location",
          "description": "cluster_location is the location of the intention in GNM: org and project."
        },
        "cluster_name": {
          "type": "string",
          "description": "cluster_name is the name of the cluster in GNM."
        },
        "intention_id": {
          "type": "string",
          "description": "intention_id is the id of the intention in GNM."
        },
        "intention_precedence": {
          "type": "integer",
          "format": "int64",
          "title": "intention_precedence is the precedence of the intention from 1-9.\nsee: https://developer.hashicorp.com/consul/docs/connect/intentions#precedence-and-match-order"
        }
      },
      "description": "an entry is a single intention in GNM. This contains minimal information: the location,\ncluster name, and id of the intention so it can be retrieved from GNM."
    },
    "hashicorp.cloud.consul_telemetry_20230414.LVT": {
      "type": "string",
      "enum": [
        "LVT_UNSPECIFIED",
        "LVT_SERVER_IDS",
        "LVT_SERVER_NODE_NAMES"
      ],
      "default": "LVT_UNSPECIFIED"
    },
    "hashicorp.cloud.consul_telemetry_20230414.MetricMatrices": {
      "type": "object",
      "properties": {
        "matrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.MetricMatrix"
          }
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.MetricMatrix": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.Value"
          }
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.QRT": {
      "type": "string",
      "enum": [
        "QRT_UNSPECIFIED",
        "QRT_SERVERS_HEARTBEAT",
        "QRT_SERVERS_LEADER_ELECTIONS",
        "QRT_SERVERS_HAS_LEADER",
        "QRT_SERVERS_MAX_HEARTBEAT",
        "QRT_SERVERS_LEADER_WRITE_LOAD_HIGH",
        "QRT_SERVERS_LEADER_WRITE_LOAD_MEDIAN",
        "QRT_SERVERS_LEADER_WRITE_LOAD_LOW",
        "QRT_SERVERS_LEADER_WRITE_LATENCY_HIGH",
        "QRT_SERVERS_LEADER_WRITE_LATENCY_MEDIAN",
        "QRT_SERVERS_LEADER_WRITE_LATENCY_LOW",
        "QRT_SERVERS_MEMORY_UTILIZATION_HIGH",
        "QRT_SERVERS_MEMORY_UTILIZATION_MEDIAN",
        "QRT_SERVERS_MEMORY_UTILIZATION_LOW",
        "QRT_SERVERS_CPU_UTILIZATION_HIGH",
        "QRT_SERVERS_CPU_UTILIZATION_MEDIAN",
        "QRT_SERVERS_CPU_UTILIZATION_LOW",
        "QRT_SERVERS_IO_WAIT_TIME_HIGH",
        "QRT_SERVERS_IO_WAIT_TIME_MEDIAN",
        "QRT_SERVERS_IO_WAIT_TIME_LOW",
        "QRT_SERVERS_TRANSACTIONS",
        "QRT_SERVERS_LATENCY",
        "QRT_SERVERS_FOLLOWER_REPLICATIONS",
        "QRT_SERVERS_MEMORY_UTILIZATION",
        "QRT_SERVERS_CPU_UTILIZATION",
        "QRT_SERVERS_IO_WAIT_TIME",
        "QRT_ENVOY_SERVER_PHYSICAL_MEMORY_TOTAL_CAPACITY",
        "QRT_ENVOY_SERVER_STATES_LIVE",
        "QRT_ENVOY_SERVER_STATES_PREINITIALIZING",
        "QRT_ENVOY_SERVER_STATES_INITIALIZING",
        "QRT_ENVOY_SERVER_STATES_DRAINING",
        "QRT_ENVOY_PROXY_COUNT_CONNECTED",
        "QRT_ENVOY_PROXY_COUNT_DISCONNECTED",
        "QRT_ENVOY_REQUEST_RATE_1XX",
        "QRT_ENVOY_REQUEST_RATE_2XX",
        "QRT_ENVOY_REQUEST_RATE_3XX",
        "QRT_ENVOY_REQUEST_RATE_4XX",
        "QRT_ENVOY_REQUEST_RATE_5XX",
        "QRT_ENVOY_REQUEST_SUCCESS_RATE",
        "QRT_ENVOY_CONNECTION_RATE",
        "QRT_ENVOY_TOTAL_ACTIVE_CONNECTIONS",
        "QRT_SERVERS_LATEST_HEARTBEAT",
        "QRT_COLLECTOR_IS_DEPLOYED",
        "QRT_SERVERS_FOLLOWER_REPLICATION_MS",
        "QRT_SERVERS_REQUEST_RATE",
        "QRT_SERVERS_REQUEST_P50_MS",
        "QRT_SERVERS_REQUEST_P90_MS",
        "QRT_SERVERS_REQUEST_P95_MS",
        "QRT_SERVERS_REQUEST_SUCCESS_RATE",
        "QRT_SERVERS_BLOCKING_QUERIES_TOTAL",
        "QRT_SERVERS_RPC_CONNECTION_RATE",
        "QRT_SERVERS_GRPC_CONNECTION_RATE",
        "QRT_SERVERS_XDS_STREAMS_TOTAL",
        "QRT_SERVERS_PEERINGS_TOTAL",
        "QRT_ENVOY_SERVICE_REQUEST_RATE",
        "QRT_ENVOY_SERVICE_REQUEST_TIMEOUT_RATE",
        "QRT_ENVOY_SERVICE_HTTP_RESPONSE_1XX_RATE",
        "QRT_ENVOY_SERVICE_HTTP_RESPONSE_2XX_RATE",
        "QRT_ENVOY_SERVICE_HTTP_RESPONSE_3XX_RATE",
        "QRT_ENVOY_SERVICE_HTTP_RESPONSE_4XX_RATE",
        "QRT_ENVOY_SERVICE_HTTP_RESPONSE_5XX_RATE",
        "QRT_ENVOY_SERVICE_REQUEST_P50_MS",
        "QRT_ENVOY_SERVICE_REQUEST_RX_BYTES_RATE",
        "QRT_ENVOY_SERVICE_REQUEST_TX_BYTES_RATE",
        "QRT_ENVOY_SERVICE_CONNECTIONS_TOTAL_RATE",
        "QRT_ENVOY_SERVICE_CONNECTIONS_SUCCESSFUL_RATE",
        "QRT_ENVOY_SERVICE_CONNECTIONS_FAILED_RATE",
        "QRT_ENVOY_SERVICE_CONNECTIONS_SUCCESSFUL_PERCENTAGE_RATE",
        "QRT_ENVOY_TOTAL_HTTP_RESPONSE_1XX_RATE",
        "QRT_ENVOY_TOTAL_HTTP_RESPONSE_2XX_RATE",
        "QRT_ENVOY_TOTAL_HTTP_RESPONSE_3XX_RATE",
        "QRT_ENVOY_TOTAL_HTTP_RESPONSE_4XX_RATE",
        "QRT_ENVOY_TOTAL_HTTP_RESPONSE_5XX_RATE",
        "QRT_ENVOY_TOTAL_HTTP_RESPONSE_COUNT",
        "QRT_SERVERS_LATEST_HEARTBEAT_P95_MS",
        "QRT_SERVERS_LEADER_WRITE_P100_RATE",
        "QRT_SERVERS_LEADER_WRITE_P50_RATE",
        "QRT_SERVERS_LEADER_WRITE_P0_RATE",
        "QRT_SERVERS_LEADER_WRITE_LATENCY_P95_MS",
        "QRT_SERVERS_LEADER_WRITE_LATENCY_P90_MS",
        "QRT_SERVERS_LEADER_WRITE_LATENCY_P50_MS",
        "QRT_SERVERS_MEMORY_UTILIZATION_P100_PERCENTAGE_RATE",
        "QRT_SERVERS_MEMORY_UTILIZATION_P50_PERCENTAGE_RATE",
        "QRT_SERVERS_MEMORY_UTILIZATION_P0_PERCENTAGE_RATE",
        "QRT_SERVERS_CPU_UTILIZATION_P100_PERCENTAGE_RATE",
        "QRT_SERVERS_CPU_UTILIZATION_P50_PERCENTAGE_RATE",
        "QRT_SERVERS_CPU_UTILIZATION_P0_PERCENTAGE_RATE",
        "QRT_SERVERS_IO_WAIT_P100_PERCENTAGE_RATE",
        "QRT_SERVERS_IO_WAIT_P50_PERCENTAGE_RATE",
        "QRT_SERVERS_IO_WAIT_P0_PERCENTAGE_RATE",
        "QRT_SERVERS_LEADER_ELECTIONS_TOTAL",
        "QRT_ENVOY_SERVICE_REQUEST_AVG_MS",
        "QRT_ENVOY_SERVICE_CONNECTIONS_UNHEALTHY_HOSTS_RATE"
      ],
      "default": "QRT_UNSPECIFIED",
      "description": " - QRT_SERVERS_HEARTBEAT: The P90 heartbeat from the leader to followers within each time interval.\n - QRT_SERVERS_LEADER_ELECTIONS: The count of leadership elections in the prior day.\n - QRT_SERVERS_HAS_LEADER: Whether the cluster has a leader.\n - QRT_SERVERS_MAX_HEARTBEAT: The p90 heartbeat latency in the last day -- the max latency of a leader contacting a follower.\n - QRT_SERVERS_LEADER_WRITE_LOAD_HIGH: The max raft transaction rate over the last day.\n - QRT_SERVERS_LEADER_WRITE_LOAD_MEDIAN: The p50 raft transaction rate over the last day.\n - QRT_SERVERS_LEADER_WRITE_LOAD_LOW: The minimum raft transaction rate over the last day.\n - QRT_SERVERS_LEADER_WRITE_LATENCY_HIGH: The p95 leader commit latency over the prior day.\n - QRT_SERVERS_LEADER_WRITE_LATENCY_MEDIAN: The p90 leader commit latency over the prior day.\n - QRT_SERVERS_LEADER_WRITE_LATENCY_LOW: The p50 leader commit latency over the prior day.\n - QRT_SERVERS_MEMORY_UTILIZATION_HIGH: The maximum server memory utilization over the prior day.\n - QRT_SERVERS_MEMORY_UTILIZATION_MEDIAN: The median average server memory utilization over the prior day.\n - QRT_SERVERS_MEMORY_UTILIZATION_LOW: The minimum server memory utilization over the prior day.\n - QRT_SERVERS_CPU_UTILIZATION_HIGH: The maximum server cpu utilization of any individual cpu over the prior day.\n - QRT_SERVERS_CPU_UTILIZATION_MEDIAN: The p50 average cpu utilization of any individual cpu over the prior day.\n - QRT_SERVERS_CPU_UTILIZATION_LOW: The minimum server cpu utilization of any individual cpu over the prior day.\n - QRT_SERVERS_IO_WAIT_TIME_HIGH: The maximum cpu io wait time of any individual cpu over the prior day.\n - QRT_SERVERS_IO_WAIT_TIME_MEDIAN: The p50 average cpu io wait time of any individual cpu over the prior day.\n - QRT_SERVERS_IO_WAIT_TIME_LOW: The minimum cpu io wait time of any individual cpu over the prior day.\n - QRT_SERVERS_TRANSACTIONS: Raft applies per second per server.\n - QRT_SERVERS_LATENCY: The p50 Raft commit time latency.\n - QRT_SERVERS_FOLLOWER_REPLICATIONS: The rate of Raft replications from the leader to its followers. This is summed per peer (peer_id).\n - QRT_SERVERS_MEMORY_UTILIZATION: The median percentage memory usage for each server each interval.\n - QRT_SERVERS_CPU_UTILIZATION: The median percentage cpu usage for each server each interval.\n - QRT_SERVERS_IO_WAIT_TIME: The median percentage io wait time for each server each interval.\n - QRT_ENVOY_SERVER_PHYSICAL_MEMORY_TOTAL_CAPACITY: Total memory capacity of Envoy servers.\n - QRT_ENVOY_SERVER_STATES_LIVE: The count of live Envoy servers.\n - QRT_ENVOY_SERVER_STATES_PREINITIALIZING: The count of currently pre-initializing Envoy servers.\n - QRT_ENVOY_SERVER_STATES_INITIALIZING: The count of currently initializing Envoy servers.\n - QRT_ENVOY_SERVER_STATES_DRAINING: The count of currently draining Envoy servers.\n - QRT_ENVOY_PROXY_COUNT_CONNECTED: The count of Envoy servers connected to Consul.\n - QRT_ENVOY_PROXY_COUNT_DISCONNECTED: The count of Envoy servers not connected to Consul.\n - QRT_ENVOY_REQUEST_RATE_1XX: The ratio of requests in the mesh that return 1XX.\n - QRT_ENVOY_REQUEST_RATE_2XX: The ratio of requests in the mesh that return 2XX.\n - QRT_ENVOY_REQUEST_RATE_3XX: The ratio of requests in the mesh that return 3XX.\n - QRT_ENVOY_REQUEST_RATE_4XX: The ratio of requests in the mesh that return 4XX.\n - QRT_ENVOY_REQUEST_RATE_5XX: The ratio of requests in the mesh that return 5XX.\n - QRT_ENVOY_REQUEST_SUCCESS_RATE: The success rate of Envoy requests: 2XX / (2XX + 5XX).\n - QRT_ENVOY_CONNECTION_RATE: New Envoy connections per second.\n - QRT_ENVOY_TOTAL_ACTIVE_CONNECTIONS: The total count of active Envoy connections.\n - QRT_SERVERS_LATEST_HEARTBEAT: The p50 latency of a leader contacting its followers.\nThis queries the consul_raft_leader_lastContact metric directly so will (likely) retrieve newer samples\nthan are generated via QRT_QRT_SERVERS_HEARTBEAT's recording rule.\n - QRT_COLLECTOR_IS_DEPLOYED: Whether the cluster has a deployed Consul Telemetry Collector. It queries a metric that\nthe collector emits about its own Prometheus receiver: https://opentelemetry.io/docs/collector/management/.\nWe receive these metrics whether or not intentions are configured which is useful for the UI. The UI will show\na \"here's how to configure your intentions\" snippet if we get collector resource metrics but no service metrics.\nThis will return no data if no collector is deployed -- or the collector is deployed but unable to push metrics\n(eg its SP is bad/stale).\n - QRT_SERVERS_FOLLOWER_REPLICATION_MS: The P50 latency of Raft append log operations from the leader to followers. The latency is per follower with peer_id as the label.\n - QRT_SERVERS_REQUEST_RATE: The per second rate of requests to each server.\n - QRT_SERVERS_REQUEST_P50_MS: The P50 latencies of HTTP requests to the Consul servers.\n - QRT_SERVERS_REQUEST_P90_MS: The P90 latencies of HTTP requests to the Consul servers.\n - QRT_SERVERS_REQUEST_P95_MS: The P95 latencies of HTTP requests to the Consul servers.\n - QRT_SERVERS_REQUEST_SUCCESS_RATE: The rate of successful requests to all Consul servers in the cluster.\n - QRT_SERVERS_BLOCKING_QUERIES_TOTAL: The sum of blocking queries across all servers in the cluster.\n - QRT_SERVERS_RPC_CONNECTION_RATE: The rate of RPC connections to all the servers in the cluster.\n - QRT_SERVERS_GRPC_CONNECTION_RATE: The rate of gRPC connections to all the servers in the cluster.\n - QRT_SERVERS_XDS_STREAMS_TOTAL: The count of xDS streams active at a given time.\n - QRT_SERVERS_PEERINGS_TOTAL: The count of Consul cluster peerings active at a given time.\n - QRT_ENVOY_SERVICE_REQUEST_RATE: The per second rate of requests to a service.\n - QRT_ENVOY_SERVICE_REQUEST_TIMEOUT_RATE: The per second rate of requests to a service that time out.\n - QRT_ENVOY_SERVICE_HTTP_RESPONSE_1XX_RATE: The percentage rate of 1XX status response codes from the service.\n - QRT_ENVOY_SERVICE_HTTP_RESPONSE_2XX_RATE: The percentage rate of 2XX status response codes from the service.\n - QRT_ENVOY_SERVICE_HTTP_RESPONSE_3XX_RATE: The percentage rate of 3XX status response codes from the service.\n - QRT_ENVOY_SERVICE_HTTP_RESPONSE_4XX_RATE: The percentage rate of 4XX status response codes from the service.\n - QRT_ENVOY_SERVICE_HTTP_RESPONSE_5XX_RATE: The percentage rate of 5XX status response codes from the service.\n - QRT_ENVOY_SERVICE_REQUEST_P50_MS: The P50 request latency to a service.\n - QRT_ENVOY_SERVICE_REQUEST_RX_BYTES_RATE: The per second rate of bytes received by service.\n - QRT_ENVOY_SERVICE_REQUEST_TX_BYTES_RATE: The per second rate of bytes transmitted from service.\n - QRT_ENVOY_SERVICE_CONNECTIONS_TOTAL_RATE: The per second rate of connections to a service.\n - QRT_ENVOY_SERVICE_CONNECTIONS_SUCCESSFUL_RATE: The per second rate of successful connections to a service.\n - QRT_ENVOY_SERVICE_CONNECTIONS_FAILED_RATE: The per second rate of failed connections to a service.\n - QRT_ENVOY_SERVICE_CONNECTIONS_SUCCESSFUL_PERCENTAGE_RATE: The percentage rate of successful connection requests to a service.\n - QRT_ENVOY_TOTAL_HTTP_RESPONSE_1XX_RATE: The percentage rate of 1XX status response codes from all services in the mesh.\n - QRT_ENVOY_TOTAL_HTTP_RESPONSE_2XX_RATE: The percentage rate of 2XX status response codes from all services in the mesh.\n - QRT_ENVOY_TOTAL_HTTP_RESPONSE_3XX_RATE: The percentage rate of 3XX status response codes from all services in the mesh.\n - QRT_ENVOY_TOTAL_HTTP_RESPONSE_4XX_RATE: The percentage rate of 4XX status response codes from all services in the mesh.\n - QRT_ENVOY_TOTAL_HTTP_RESPONSE_5XX_RATE: The percentage rate of 5XX status response codes from all services in the mesh.\n - QRT_ENVOY_TOTAL_HTTP_RESPONSE_COUNT: The total count of http responses from all services in the mesh.\n - QRT_SERVERS_LATEST_HEARTBEAT_P95_MS: The p95 latency of a leader contacting its followers.\n - QRT_SERVERS_LEADER_WRITE_P100_RATE: The maximum rate of Raft applies per second over the queried interval. From consul.raft.apply.\n - QRT_SERVERS_LEADER_WRITE_P50_RATE: The median rate of Raft applies per second over the queried interval. From consul.raft.apply.\n - QRT_SERVERS_LEADER_WRITE_P0_RATE: The minimum rate of Raft applies per second over the queried interval. From consul.raft.apply.\n - QRT_SERVERS_LEADER_WRITE_LATENCY_P95_MS: The P95 latency of Raft applies from leader to follower over the queried interval. From consul.raft.commitTime.\n - QRT_SERVERS_LEADER_WRITE_LATENCY_P90_MS: The P90 latency of Raft applies from leader to follower over the queried interval. From consul.raft.commitTime.\n - QRT_SERVERS_LEADER_WRITE_LATENCY_P50_MS: The P50 latency of Raft applies from leader to follower over the queried interval. From consul.raft.commitTime.\n - QRT_SERVERS_MEMORY_UTILIZATION_P100_PERCENTAGE_RATE: The maximum percentage rate of consul server memory usage over the queried interval for any server. From consul.host.memory.used_percent.\n - QRT_SERVERS_MEMORY_UTILIZATION_P50_PERCENTAGE_RATE: The median percentage rate of consul server memory usage over the queried interval for any server. From consul.host.memory.used_percent.\n - QRT_SERVERS_MEMORY_UTILIZATION_P0_PERCENTAGE_RATE: The minimum percentage rate of consul server memory usage over the queried interval for any server. From consul.host.memory.used_percent.\n - QRT_SERVERS_CPU_UTILIZATION_P100_PERCENTAGE_RATE: The maximum percentage rate of consul server CPU usage over the queried interval for any server. From consul.host.cpu.used_percent.\n - QRT_SERVERS_CPU_UTILIZATION_P50_PERCENTAGE_RATE: The median percentage rate of consul server CPU usage over the queried interval for any server. From consul.host.cpu.used_percent.\n - QRT_SERVERS_CPU_UTILIZATION_P0_PERCENTAGE_RATE: The minimum percentage rate of consul server CPU usage over the queried interval for any server. From consul.host.cpu.used_percent.\n - QRT_SERVERS_IO_WAIT_P100_PERCENTAGE_RATE: The maximum percentage of cpu time spent on IO want of any server over the queried interval. From consul.host.cpu.iowait.\n - QRT_SERVERS_IO_WAIT_P50_PERCENTAGE_RATE: The median percentage of cpu time spent on IO want of any server over the queried interval. From consul.host.cpu.iowait.\n - QRT_SERVERS_IO_WAIT_P0_PERCENTAGE_RATE: The minimum percentage of cpu time spent on IO want of any server over the queried interval. From consul.host.cpu.iowait.\n - QRT_SERVERS_LEADER_ELECTIONS_TOTAL: The count of leader elections over the queried interval. From consul.raft.state.leader.\n - QRT_ENVOY_SERVICE_REQUEST_AVG_MS: The average request latency to a service.\n - QRT_ENVOY_SERVICE_CONNECTIONS_UNHEALTHY_HOSTS_RATE: The total number of failed connections due to unhealthy hosts."
    },
    "hashicorp.cloud.consul_telemetry_20230414.QueryRangeBatchResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.MetricMatrices"
          },
          "title": "string is reference to the QueryType but keys are disallowed in the proto spec so\nwe will need to change the enum value to string\nhttps://groups.google.com/g/protobuf/c/ikeldBe60eI"
        }
      },
      "title": "QueryRangeBatchResponse"
    },
    "hashicorp.cloud.consul_telemetry_20230414.RefreshConfig": {
      "type": "object",
      "properties": {
        "refresh_interval": {
          "type": "string"
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.Service": {
      "type": "object",
      "properties": {
        "partition": {
          "type": "string",
          "description": "Partition where the service is deployed."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace where the service is deployed."
        },
        "name": {
          "type": "string",
          "description": "Name of the service."
        },
        "kind": {
          "type": "string",
          "description": "The kind of service."
        },
        "sameness_group": {
          "type": "string",
          "description": "The sameness group the service belongs to."
        },
        "instance_count": {
          "type": "integer",
          "format": "int32",
          "description": "Count of total service instances."
        },
        "checks_passing": {
          "type": "integer",
          "format": "int32",
          "description": "Count of passing service instances."
        },
        "checks_warning": {
          "type": "integer",
          "format": "int32",
          "description": "Count of warning service instances."
        },
        "checks_critical": {
          "type": "integer",
          "format": "int32",
          "description": "Count of critical service instances."
        },
        "instances_passing": {
          "type": "integer",
          "format": "int32",
          "description": "Count of instances passing checks."
        },
        "instances_warning": {
          "type": "integer",
          "format": "int32",
          "description": "Count of instances with warning checks."
        },
        "instances_critical": {
          "type": "integer",
          "format": "int32",
          "description": "Count of instances with critical checks."
        }
      },
      "description": "Service is a single service within the service topology."
    },
    "hashicorp.cloud.consul_telemetry_20230414.ServiceTopology": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.ServiceTopology.Node"
          },
          "description": "nodes is a map from node ids (arbitrary keys) to nodes (services with meta)."
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.ServiceTopology.Edge"
          },
          "description": "edges connect nodes by node id (arbitrary key). These describe the connections/requests between services."
        }
      },
      "description": "ServiceTopology is a topology of service metrics."
    },
    "hashicorp.cloud.consul_telemetry_20230414.ServiceTopology.Edge": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "source is the id of the source/downstream/calling service that's connecting to or calling the other."
        },
        "target": {
          "type": "string",
          "description": "target is the id of the destination/upstream/answering service being connected-to/called."
        },
        "metadata": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.ServiceTopology.Edge.Metadata",
          "description": "metadata describes the connections/requests between the two services."
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.ServiceTopology.Edge.Metadata": {
      "type": "object",
      "properties": {
        "tcp_metrics": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.TcpMetrics",
          "description": "tcp_metrics describe the connections between the two services."
        },
        "http_metrics": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.HttpMetrics",
          "description": "http_metrics describe the requests between the two services."
        },
        "intentions": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.Intentions",
          "description": "intentions describe the consul intentions that apply to the call from the downstream to\nupstream service covered by this edge."
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.ServiceTopology.Node": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.ServiceTopology.Node.Metadata",
          "description": "metadata describe this particular service."
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.ServiceTopology.Node.Metadata": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.Cluster",
          "description": "cluster is the cluster to which this service belongs."
        },
        "service": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.Service",
          "description": "service is the service of this node. These fields are populated from GNM. This includes health information."
        },
        "tcp_metrics": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.TcpMetrics",
          "description": "tcp_metrics describe the tcp connections into this service from all others in the mesh."
        },
        "http_metrics": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.HttpMetrics",
          "description": "http_metrics describe the http requests into this service from all others in the mesh."
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.TcpMetrics": {
      "type": "object",
      "properties": {
        "cx_rate": {
          "type": "number",
          "format": "float",
          "description": "cx_rate is the per-second rate of connections to a service."
        },
        "rx_bits_rate": {
          "type": "number",
          "format": "float",
          "description": "rx_bits_rate is the per-second rate of bits recieved by a service."
        },
        "tx_bits_rate": {
          "type": "number",
          "format": "float",
          "description": "tc_bits_rate is the per-second rate of bits transmitted by a service."
        },
        "cx_connect_fail_rate": {
          "type": "number",
          "format": "float",
          "description": "cx_connect_fail_rate is the per-second rate of connection failures to a service."
        },
        "cx_none_healthy_rate": {
          "type": "number",
          "format": "float",
          "description": "cx_none_healthy_rate is the per-second rate of connection failures to a service for lack of any healthy host."
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.TelemetryConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "title": "Endpoint is the URL to use when exporting telemetry via OTLP"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Labels to add to each message"
        },
        "metrics": {
          "$ref": "#/definitions/hashicorp.cloud.consul_telemetry_20230414.TelemetryMetricsConfig",
          "title": "Metrics is the configuration specific to metric data"
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.TelemetryMetricsConfig": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "title": "Endpoint is the URL to use when exporting metrics via OTLP. If set will override the global endpoint in TelemetryConfig"
        },
        "include_list": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "IncludeList is a list of regular expressions used to configure the metrics pipeline filter"
        },
        "disabled": {
          "type": "boolean",
          "title": "Disabled is a bool used to indicate whether metrics pushing from the server or proxy disabled"
        }
      }
    },
    "hashicorp.cloud.consul_telemetry_20230414.Value": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "sample_value": {
          "type": "string"
        }
      }
    },
    "hashicorp.cloud.location.Location": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "organization_id is the id of the organization."
        },
        "project_id": {
          "type": "string",
          "description": "project_id is the projects id."
        },
        "region": {
          "$ref": "#/definitions/hashicorp.cloud.location.Region",
          "description": "region is the region that the resource is located in. It is\noptional if the object being referenced is a global object."
        }
      },
      "description": "Location represents a target for an operation in HCP."
    },
    "hashicorp.cloud.location.Region": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "title": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")"
        },
        "region": {
          "type": "string",
          "title": "region is the cloud region (\"us-west1\", \"us-east1\")"
        }
      },
      "description": "Region identifies a Cloud data-plane region."
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
