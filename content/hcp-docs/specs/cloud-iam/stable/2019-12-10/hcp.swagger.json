{
  "swagger": "2.0",
  "info": {
    "title": "HashiCorp IAM Service",
    "description": "API for managing Identity and Access Management.",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "IamService"
    },
    {
      "name": "AuthConfigService"
    },
    {
      "name": "GroupsService"
    },
    {
      "name": "ServicePrincipalsService"
    },
    {
      "name": "InvitationsService"
    },
    {
      "name": "ProfileService"
    },
    {
      "name": "SSOManagementService"
    }
  ],
  "host": "api.cloud.hashicorp.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/2019-12-10/iam/{parent_resource_name_1}/service-principals": {
      "get": {
        "summary": "ListServicePrincipals lists service principals at a given scope.",
        "operationId": "ServicePrincipalsService_ListServicePrincipals2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListServicePrincipalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name_1",
            "description": "parent_resource_name is the resource name of the project or organization\nat which the service principal should be listed (e.g.\n\"project/\u003cproject_id\u003e\" or \"organization/\u003corganization_id\u003e\")",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organization/[^/]+"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "post": {
        "summary": "CreateServicePrincipal creates a new service principal.",
        "operationId": "ServicePrincipalsService_CreateServicePrincipal2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name_1",
            "description": "parent_resource_name is the resource name of the project or organization\nat which the service principal should be created (e.g.\n\"project/\u003cproject_id\u003e\" or \"organization/\u003corganization_id\u003e\")",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organization/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name is the customer-chosen name for this service principal."
                }
              },
              "description": "CreateServicePrincipalRequest is the request message used when creating a\nservice principal."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/iam/{parent_resource_name}/service-principals": {
      "get": {
        "summary": "ListServicePrincipals lists service principals at a given scope.",
        "operationId": "ServicePrincipalsService_ListServicePrincipals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListServicePrincipalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource_name is the resource name of the project or organization\nat which the service principal should be listed (e.g.\n\"project/\u003cproject_id\u003e\" or \"organization/\u003corganization_id\u003e\")",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "project/[^/]+"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "post": {
        "summary": "CreateServicePrincipal creates a new service principal.",
        "operationId": "ServicePrincipalsService_CreateServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource_name is the resource name of the project or organization\nat which the service principal should be created (e.g.\n\"project/\u003cproject_id\u003e\" or \"organization/\u003corganization_id\u003e\")",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "project/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name is the customer-chosen name for this service principal."
                }
              },
              "description": "CreateServicePrincipalRequest is the request message used when creating a\nservice principal."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{parent_resource_name_1}/keys": {
      "post": {
        "summary": "CreateServicePrincipalKey creates a new service principal key for a service principal.",
        "operationId": "ServicePrincipalsService_CreateServicePrincipalKey2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateServicePrincipalKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name_1",
            "description": "parent_resource_name is the resource name of the service principal to\ngenerate a key for.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/service-principal/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "CreateServicePrincipalKeyRequest is the request message used when creating a\nservice principal key."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{parent_resource_name}/keys": {
      "post": {
        "summary": "CreateServicePrincipalKey creates a new service principal key for a service principal.",
        "operationId": "ServicePrincipalsService_CreateServicePrincipalKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateServicePrincipalKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource_name is the resource name of the service principal to\ngenerate a key for.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "CreateServicePrincipalKeyRequest is the request message used when creating a\nservice principal key."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{parent_resource_name}/workload-identity-providers": {
      "get": {
        "summary": "ListWorkloadIdentityProvider lists workload identity providers under a\nservice principal.",
        "operationId": "ServicePrincipalsService_ListWorkloadIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListWorkloadIdentityProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource_name is the resource name of the service principal to list\nworkload identity providers from.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "post": {
        "summary": "CreateWorkloadIdentityProvider creates a workload identity provider\nnested under a service principal.",
        "operationId": "ServicePrincipalsService_CreateWorkloadIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateWorkloadIdentityProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource_name is the name of the service principal the workload\nidentity provider will be created under.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name is the name of the workload identity provider to be created."
                },
                "provider": {
                  "$ref": "#/definitions/hashicorp.cloud.iam.WorkloadIdentityProvider",
                  "description": "provider is the workload identity provider to create."
                }
              },
              "description": "CreateWorkloadIdentityProviderRequest is the request message used when\ncreating a workload identity provider."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{provider.resource_name}": {
      "patch": {
        "summary": "UpdateWorkloadIdentityProvider updates a workload identity provider.",
        "operationId": "ServicePrincipalsService_UpdateWorkloadIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UpdateWorkloadIdentityProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "provider.resource_name",
            "description": "resource_name is the resource name for this workload identity\nprovider.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+/workload-identity-provider/[^/]+"
          },
          {
            "name": "provider",
            "description": "provider is the workload identity provider to update.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resource_id": {
                  "type": "string",
                  "description": "resource_id is the resource identifier for this workload identity\nprovider."
                },
                "description": {
                  "type": "string",
                  "description": "description is an optional description for the workload identity provider."
                },
                "conditional_access": {
                  "type": "string",
                  "description": "conditional_access is a go-bexpr string that is evaluated when exchanging\ntokens. It restricts which upstream identities are allowed to access the\nservice principal."
                },
                "aws_config": {
                  "$ref": "#/definitions/hashicorp.cloud.iam.AWSWorkloadIdentityProviderConfig"
                },
                "oidc_config": {
                  "$ref": "#/definitions/hashicorp.cloud.iam.OIDCWorkloadIdentityProviderConfig"
                },
                "system_managed": {
                  "type": "boolean",
                  "description": "system_managed indicates that the provider is not editable or deletable\nby the user."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "x-nullable": true,
                  "description": "created_at is when the workload identity provider was created."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "x-nullable": true,
                  "description": "updated_at is when the workload identity provider was last updated."
                }
              },
              "title": "provider is the workload identity provider to update."
            }
          },
          {
            "name": "update_mask",
            "description": "update_mask describing which resource attribute(s) to update.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{resource_name_1}": {
      "get": {
        "summary": "GetServicePrincipal retrieves a service principal.",
        "operationId": "ServicePrincipalsService_GetServicePrincipal2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name_1",
            "description": "resource_name is the resource name of the service principal to retrieve.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/service-principal/[^/]+"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "delete": {
        "summary": "DeleteServicePrincipal deletes a service principal.",
        "operationId": "ServicePrincipalsService_DeleteServicePrincipal2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name_1",
            "description": "resource_name is the resource name of the service principal to delete.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/service-principal/[^/]+"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{resource_name_2}": {
      "get": {
        "summary": "GetWorkloadIdentityProvider retrieves a workload identity provider.",
        "operationId": "ServicePrincipalsService_GetWorkloadIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetWorkloadIdentityProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name_2",
            "description": "resource_name is the resource name of the workload identity provider to\nretrieve.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+/workload-identity-provider/[^/]+"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "delete": {
        "summary": "DeleteServicePrincipalKey deletes a service principal key.",
        "operationId": "ServicePrincipalsService_DeleteServicePrincipalKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteServicePrincipalKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name_2",
            "description": "resource_name is the resource name of the service principal key to\ndelete.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+/key/[^/]+"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{resource_name_3}": {
      "delete": {
        "summary": "DeleteServicePrincipalKey deletes a service principal key.",
        "operationId": "ServicePrincipalsService_DeleteServicePrincipalKey2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteServicePrincipalKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name_3",
            "description": "resource_name is the resource name of the service principal key to\ndelete.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/service-principal/[^/]+/key/[^/]+"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{resource_name_4}": {
      "delete": {
        "summary": "DeleteWorkloadIdentityProvider deletes a workload identity provider.",
        "operationId": "ServicePrincipalsService_DeleteWorkloadIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteWorkloadIdentityProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name_4",
            "description": "resource_name is the resource name of the workload identity provider to\ndelete.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+/workload-identity-provider/[^/]+"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{resource_name}": {
      "get": {
        "summary": "GetServicePrincipal retrieves a service principal.",
        "operationId": "ServicePrincipalsService_GetServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource name of the service principal to retrieve.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "delete": {
        "summary": "DeleteServicePrincipal deletes a service principal.",
        "operationId": "ServicePrincipalsService_DeleteServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource name of the service principal to delete.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/2019-12-10/{resource_name}/exchange-token": {
      "post": {
        "summary": "ExchangeWorkloadIdentityToken exchanges an external workload identity\ntoken for an access token whose subject is that of the service principal\nthe identity federation is nested under.",
        "operationId": "ServicePrincipalsService_ExchangeWorkloadIdentityToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ExchangeWorkloadIdentityTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource_name of the workload identity provider to\nexchange against.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/project/[^/]+/service-principal/[^/]+/workload-identity-provider/[^/]+"
          },
          {
            "name": "token",
            "description": "token is the external identity token. This represents the identity of a\nworkload and for token exchange to occur must be valid given the provider's\nconfiguration and conditional_access statatement.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ExchangeWorkloadIdentityTokenRequest.Token"
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/accept-invitation": {
      "post": {
        "summary": "AcceptOrganizationInvitation accepts an organization invitation, expects\nan invitation token in the body.",
        "operationId": "InvitationsService_AcceptOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.AcceptOrganizationInvitationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "AcceptOrganizationInvitationRequest is a request to accept an organization invitation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.AcceptOrganizationInvitationRequest"
            }
          }
        ],
        "tags": [
          "InvitationsService"
        ]
      }
    },
    "/iam/2019-12-10/caller-identity": {
      "get": {
        "summary": "GetCallerIdentity returns the identity of the current caller.",
        "operationId": "IamService_GetCallerIdentity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetCallerIdentityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/iam/{parent_resource_name}/groups": {
      "get": {
        "summary": "ListGroups lists the groups in an organization that match the optional\nfilters.",
        "operationId": "GroupsService_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource is the parent resource of the group.\norganization/\u003corg_id\u003e",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organization/[^/]+"
          },
          {
            "name": "filter.member_principal_id",
            "description": "member_principal_id is an optional query param to filter groups that a principal belongs to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.group_resource_ids",
            "description": "group_resource_ids is a way to filter groups by a list of group\nids when we need to resolve group attributes (e.g. name) from a\nlist of ids we get from a project policy.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GroupsService"
        ]
      },
      "post": {
        "summary": "CreateGroup creates a group.",
        "operationId": "GroupsService_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource is the parent resource of the group.\norganization/\u003corg_id\u003e",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organization/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name is the name part of the group resource_name."
                },
                "description": {
                  "type": "string",
                  "description": "description is a description of the group."
                },
                "member_principal_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "member_principal_ids is a list of the ids of the principals that should belong to this group."
                }
              }
            }
          }
        ],
        "tags": [
          "GroupsService"
        ]
      }
    },
    "/iam/2019-12-10/iam/{parent_resource_name}/groups/count": {
      "get": {
        "summary": "CountOrganizationGroups returns the count of groups for an organization.",
        "operationId": "GroupsService_CountOrganizationGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CountOrganizationGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource is the parent resource of the group.\norganization/\u003corg_id\u003e",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organization/[^/]+"
          }
        ],
        "tags": [
          "GroupsService"
        ]
      }
    },
    "/iam/2019-12-10/iam/{parent_resource_name}/groups/count-for-principals": {
      "get": {
        "summary": "CountGroupsForPrincipals will count the number of groups a principal is in for a list of principals",
        "operationId": "GroupsService_CountGroupsForPrincipals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CountGroupsForPrincipalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource is the parent resource of the groups that should be counted per principal\norganization/\u003corg_id\u003e",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organization/[^/]+"
          },
          {
            "name": "principal_ids",
            "description": "principal_ids is a list of the ids for which to count groups.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "GroupsService"
        ]
      }
    },
    "/iam/2019-12-10/iam/{parent_resource_name}/groups/count-members-for-groups": {
      "get": {
        "summary": "CountMembersForGroups returns the count of members per group",
        "operationId": "GroupsService_CountMembersForGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CountMembersForGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "parent_resource_name",
            "description": "parent_resource is the parent resource of the groups that the groups should belong.\norganization/\u003corg_id\u003e",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organization/[^/]+"
          },
          {
            "name": "group_resource_names",
            "description": "group_resource_names is a list of the group resource_names for which to count members.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "GroupsService"
        ]
      }
    },
    "/iam/2019-12-10/invitations/{invitation_token}/organization": {
      "get": {
        "summary": "GetOrganizationNameByInvitationToken returns the organization name for the invitation associated with the invitation token provided.",
        "operationId": "InvitationsService_GetOrganizationNameByInvitationToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetOrganizationNameByInvitationTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "invitation_token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InvitationsService"
        ]
      }
    },
    "/iam/2019-12-10/me": {
      "get": {
        "summary": "GetCurrentUserPrincipal retrieves information about the current user principal.\nThis endpoint it meant to be used by external clients over an HTTP API.\nIt supports retrieving the basic user principal data (useful for any client) and,\noptionally, the user preferences for the HCP Web Portal JS application.",
        "operationId": "IamService_GetCurrentUserPrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetCurrentUserPrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "web_portal_preferences",
            "description": "web_portal_preferences is a flag indicating whether user's portal preferences\nneed to be included or not. Typically the HCP Web Portal JS application will\nset this option to true, as its the main consumer of this data. Other clients\n(e.g. a CLI, a TF provider) will not need to enable it.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/me/confirm-mfa-enrollment": {
      "post": {
        "summary": "ConfirmMFAEnrollment is used to perform the first authentication with a newly setup\nMFA (TOTP), which then confirms the user's setup and activates the new\nMFA enrollment.",
        "operationId": "ProfileService_ConfirmMFAEnrollment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ConfirmMFAEnrollmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ConfirmMFAEnrollmentRequest"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/iam/2019-12-10/me/disable-mfa": {
      "post": {
        "operationId": "ProfileService_DisableMFA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DisableMFAResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DisableMFARequest"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/iam/2019-12-10/me/enable-mfa": {
      "post": {
        "summary": "EnableMFA triggers the process of enabling MFA for a given user.",
        "operationId": "ProfileService_EnableMFA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.EnableMFAResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.EnableMFARequest"
            }
          }
        ],
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/iam/2019-12-10/me/mfa-status": {
      "get": {
        "summary": "GetMFAStatus returns the MFA status of the current user.",
        "operationId": "ProfileService_GetMFAStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetMFAStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/iam/2019-12-10/me/reset-password": {
      "post": {
        "summary": "ResetPassword resets a password for an email+password user.",
        "operationId": "ProfileService_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ResetPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/iam/2019-12-10/me/send-verification-email": {
      "post": {
        "summary": "SendVerificationEmail triggers a new verification email to be sent to calling user's email address",
        "operationId": "ProfileService_SendVerificationEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.SendVerificationEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "ProfileService"
        ]
      }
    },
    "/iam/2019-12-10/me/web-portal-preferences": {
      "put": {
        "summary": "UpdateWebConsolePreferences updates a user principal's web portal (fka web console) preferences",
        "operationId": "IamService_UpdateWebConsolePreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UpdateWebConsolePreferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "UpdateWebConsolePreferencesRequest is the request to update a user principal's web portal preferences on the IAM service.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UpdateWebConsolePreferencesRequest"
            }
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/auth-metadata": {
      "get": {
        "summary": "GetOrganizationAuthMetadata returns metadata about the organization's\nconfigured authentication methods.",
        "operationId": "IamService_GetOrganizationAuthMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetOrganizationAuthMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the UUID identifier of the organization for which\nauthentication metadata will be retrieved.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/auth_connections": {
      "get": {
        "operationId": "AuthConfigService_GetAuthConnections",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetAuthConnectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthConfigService"
        ]
      },
      "delete": {
        "summary": "DeleteAuthConnectionFromOrganization permanently deletes a persisted AuthConnection.",
        "operationId": "AuthConfigService_DeleteAuthConnectionFromOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id of the organization that owns the AuthConnection.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthConfigService"
        ]
      },
      "post": {
        "summary": "CreateAuthConnection creates an auth connection.",
        "operationId": "AuthConfigService_CreateAuthConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateAuthConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization that will own the authentication connection.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "issuer": {
                  "type": "string",
                  "description": "issuer is the URL of the identity provider."
                },
                "client_id": {
                  "type": "string",
                  "description": "client_id is the ID of the client for the connection."
                },
                "client_secret": {
                  "type": "string",
                  "description": "client_secret is the secret for the client above."
                },
                "email_domain": {
                  "type": "string",
                  "description": "email_domain associated with the of the connection."
                },
                "default_role": {
                  "type": "string",
                  "description": "default_role is the RBAC role that users signing in to the\nSSO org will get as the default."
                }
              },
              "description": "CreateAuthConnectionRequest creates an AuthConnection."
            }
          }
        ],
        "tags": [
          "AuthConfigService"
        ]
      },
      "patch": {
        "summary": "EditAuthConnection edits an existing AuthConnection.",
        "operationId": "AuthConfigService_EditAuthConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "id of the organization that owns  the connection",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "issuer": {
                  "type": "string",
                  "description": "issuer is the URL of the identity provider."
                },
                "client_id": {
                  "type": "string",
                  "description": "client_id is the ID of the client for the connection."
                },
                "client_secret": {
                  "type": "string",
                  "description": "client_secret is the secret for the client above."
                },
                "email_domain": {
                  "type": "string",
                  "description": "email_domain associated with the connection."
                },
                "update_mask": {
                  "type": "string"
                },
                "default_role": {
                  "type": "string",
                  "description": "default_role is the RBAC role that users signing in to the\nSSO org will get as the default."
                }
              }
            }
          }
        ],
        "tags": [
          "AuthConfigService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/invitations": {
      "get": {
        "summary": "ListOrganizationInvitations returns a list of organization invitations.",
        "operationId": "InvitationsService_ListOrganizationInvitations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListOrganizationInvitationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization\nfor which invites are being requested.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "states",
            "description": "States limits the organization invitations to be returned by one or more states.\n\n - PENDING: PENDING is the state of an organization invitation that has been created successfully but\nhas not been accepted yet.\n - ACCEPTED: ACCEPTED is the state of an organization invitation that has been accepted.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PENDING",
                "ACCEPTED"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "InvitationsService"
        ]
      },
      "post": {
        "summary": "CreateOrganizationInvitations creates one or more organization invitations.",
        "operationId": "InvitationsService_CreateOrganizationInvitations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateOrganizationInvitationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization\nto which the invitee is being invited.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "invitations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/hashicorp.cloud.iam.NewOrganizationInvitation"
                  },
                  "description": "invitations is a list of the data for the invitations that should be created."
                }
              },
              "description": "CreateOrganizationInvitationsRequest is a request to create an organization invitation.\nInviting multiple people at the same time is supported."
            }
          }
        ],
        "tags": [
          "InvitationsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/invitations/{invitation_id}": {
      "delete": {
        "summary": "DeleteOrganizationInvitation creates an organization invitation.",
        "operationId": "InvitationsService_DeleteOrganizationInvitation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteOrganizationInvitationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization\nfor which the invitation is being deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitation_id",
            "description": "invitation_id is the id of the invitation to be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InvitationsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/principals": {
      "get": {
        "summary": "BatchGetPrincipals retrieves principals in a batch.",
        "operationId": "IamService_BatchGetPrincipals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.BatchGetPrincipalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization to query principals in.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "principal_ids",
            "description": "principal_ids is the list of principals to retrieve.\nA maximum of 1000 princiapls are allowed in a single request.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "view",
            "description": "view allows the caller to choose the set of principal data that is returned.\nIf unset, the request defaults to PRINCIPAL_VIEW_BASIC.\n\n - PRINCIPAL_VIEW_UNSPECIFIED: The default / unset value.\n - PRINCIPAL_VIEW_BASIC: Include basic metadata about the principal, but not the principal details.\nThis will return the Id and Type only.\n - PRINCIPAL_VIEW_FULL: Include everything.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PRINCIPAL_VIEW_UNSPECIFIED",
              "PRINCIPAL_VIEW_BASIC",
              "PRINCIPAL_VIEW_FULL"
            ],
            "default": "PRINCIPAL_VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/principals/search": {
      "post": {
        "summary": "SearchPrincipals returns principal details for principals within the supplied\norganization. Optional filters may be specified to filter the result set.",
        "operationId": "IamService_SearchPrincipals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.SearchPrincipalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization in which the principals\nbelong.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "filter": {
                  "$ref": "#/definitions/hashicorp.cloud.iam.SearchPrincipalsFilter",
                  "description": "filter contains optional fields to filter the search results down."
                },
                "pagination": {
                  "$ref": "#/definitions/hashicorp.cloud.common.PaginationRequest",
                  "description": "pagination contains page data."
                }
              },
              "description": "SearchPrincipalsRequest is the request to the SearchPrincipals rpc."
            }
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/projects/{project_id}/service-principal-keys": {
      "post": {
        "summary": "CreateProjectServicePrincipalKey creates a new service principal key for a service principal on project level.",
        "operationId": "ServicePrincipalsService_CreateProjectServicePrincipalKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateProjectServicePrincipalKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization under\nwhich the service principal key should be created.\nIt must be the organization of the provided service principal.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "description": "project_id is the unique identifier (UUID) of the project under\nwhich the service principal key should be created.\nIt must be the project_id of the provided service principal.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "principal_id": {
                  "type": "string",
                  "description": "principal_id is the ID of the service principal for which the new service\nprincipal key should be created."
                }
              },
              "description": "CreateProjectServicePrincipalKeyRequest is the request message used when creating a\nservice principal key for a service principal on project level."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/projects/{project_id}/service-principal-keys/{client_id}": {
      "delete": {
        "summary": "DeleteProjectServicePrincipalKey deletes a service principal key for a service principal on project level.",
        "operationId": "ServicePrincipalsService_DeleteProjectServicePrincipalKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteProjectServicePrincipalKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization the service principal key belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "description": "project_id is the project the service principal key belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_id",
            "description": "client_id is client ID of the service principal key.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/projects/{project_id}/service-principals": {
      "get": {
        "summary": "ListProjectServicePrincipals lists service principals in a project.",
        "operationId": "ServicePrincipalsService_ListProjectServicePrincipals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListProjectServicePrincipalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization that\nowns the project of the service principals to be listed.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "description": "project_id is the unique identifier (UUID) of the project that\nowns the service principals to be listed. When the the project_id\nis provided, only the service principals for this project will be\nlisted.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "post": {
        "summary": "CreateProjectServicePrincipal creates a new service principal on project level.",
        "operationId": "ServicePrincipalsService_CreateProjectServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateProjectServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization under\nwhich the service principal should be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "description": "project_id is the unique identifier (UUID) of the project that\nowns the created service principal.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name is the customer-chosen name for this service principal."
                }
              },
              "description": "CreateProjectServicePrincipalRequest is the request message used when creating a\nservice principal on project level."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/projects/{project_id}/service-principals/{principal_id}": {
      "get": {
        "summary": "GetProjectServicePrincipal retrieves a service principal on project level.",
        "operationId": "ServicePrincipalsService_GetProjectServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetProjectServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization that\nowns the requested service principal or project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "description": "project_id is the unique identifier (UUID) of the project that\nunder which the service principal should be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "principal_id",
            "description": "principal_id is the ID of the service principal being requested.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "delete": {
        "summary": "DeleteServicePrincipal deletes a service principal on project level.",
        "operationId": "ServicePrincipalsService_DeleteProjectServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteProjectServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization from\nwhich the service principal should be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project_id",
            "description": "project_id is the unique identifier (UUID) of the project that\nowns the requested service principal.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "principal_id",
            "description": "principal_id is the ID of the service principal to be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/service-principal-keys": {
      "post": {
        "summary": "CreateOrganizationServicePrincipalKey creates a new service principal key for a service principal on organization level.",
        "operationId": "ServicePrincipalsService_CreateOrganizationServicePrincipalKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateOrganizationServicePrincipalKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization under\nwhich the service principal key should be created.\nIt must be the organization of the provided service principal.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "principal_id": {
                  "type": "string",
                  "description": "principal_id is the ID of the service principal for which the new service\nprincipal key should be created."
                }
              },
              "description": "CreateOrganizationServicePrincipalKeyRequest is the request message used when creating a\nservice principal key for a principal on organization level."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/service-principal-keys/{client_id}": {
      "delete": {
        "summary": "DeleteOrganizationServicePrincipalKey deletes a service principal key for a service principal on organization level.",
        "operationId": "ServicePrincipalsService_DeleteOrganizationServicePrincipalKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteOrganizationServicePrincipalKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization the service principal key belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "client_id",
            "description": "client_id is client ID of the service principal key.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/service-principals": {
      "get": {
        "summary": "ListProjectServicePrincipals lists service principals in an organization.",
        "operationId": "ServicePrincipalsService_ListOrganizationServicePrincipals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListOrganizationServicePrincipalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization that\nowns the service principals to be listed.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "description": "include defines which service principals in the hirarchical level\nbelow an organization should be included in the returned list.\nAllowed values: UNSET, ALL, PROJECTS\n\n - UNSET: UNSET is the default value.\nUNSET will only include service principals at organization level.\n - ALL: ALL will include all service principals on all hirarchical levels\nunder the given organization.\n - PROJECTS: PROJECTS includes service principals at project level\nin the list response.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSET",
              "ALL",
              "PROJECTS"
            ],
            "default": "UNSET"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "post": {
        "summary": "CreateOrganizationServicePrincipal creates a new service principal on organization level.",
        "operationId": "ServicePrincipalsService_CreateOrganizationServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateOrganizationServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization under\nwhich the service principal should be created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name is the customer-chosen name for this service principal."
                }
              },
              "description": "CreateOrganizationServicePrincipalRequest is the request message used when creating a\nservice principal on organization level."
            }
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/service-principals/{principal_id}": {
      "get": {
        "summary": "GetOrganizationServicePrincipal retrieves a service principal on organization level.",
        "operationId": "ServicePrincipalsService_GetOrganizationServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetOrganizationServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization that\nowns the requested service principal or project.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "principal_id",
            "description": "principal_id is the ID of the service principal being requested.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      },
      "delete": {
        "summary": "DeleteOrganizationServicePrincipal deletes a service principal on organization level.",
        "operationId": "ServicePrincipalsService_DeleteOrganizationServicePrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteOrganizationServicePrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the unique identifier (UUID) of the organization from\nwhich the service principal should be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "principal_id",
            "description": "principal_id is the ID of the service principal to be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServicePrincipalsService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/sso-configurations": {
      "get": {
        "summary": "ListSSOConfigurations retrieves the SSO configurations for an organization.",
        "operationId": "SSOManagementService_ListSSOConfigurations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListSSOConfigurationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "OrganizationId is the identifier of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      },
      "post": {
        "summary": "CreateSSOConfiguration creates a new SSO configuration for an organization.",
        "operationId": "SSOManagementService_CreateSSOConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateSSOConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "OrganizationId is the identifier of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "$ref": "#/definitions/hashicorp.cloud.iam.SSOConfig",
                  "description": "SsoConfig has the SSO configuration for this organization."
                }
              }
            }
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/sso-configurations/{type}": {
      "get": {
        "summary": "GetSSOConfiguration retrieves a specific SSO configuration for an\norganization.",
        "operationId": "SSOManagementService_GetSSOConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetSSOConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "OrganizationId is the identifier of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Type is the type of Single Sign-On.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSET",
              "SAML",
              "OIDC"
            ]
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      },
      "delete": {
        "summary": "DeleteSSOConfiguration deletes an existing SSO configuration.",
        "operationId": "SSOManagementService_DeleteSSOConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteSSOConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "OrganizationId is the identifier of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Type is the type of Single Sign-On.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSET",
              "SAML",
              "OIDC"
            ]
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      },
      "put": {
        "summary": "UpdateSSOConfiguration updates an existing SSO configuration.",
        "operationId": "SSOManagementService_UpdateSSOConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UpdateSSOConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "OrganizationId is the identifier of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "type is the type of Single Sign-On we are updating. This is only used for\nthe RESTFul Gateway parameter. It must match the type in the config\nfield. This is used due to a bug in the grpc-gateway generator that\nerases the field value if a field is used as a parameter. So we need to\nuse this one instead of config.type.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "UNSET",
              "SAML",
              "OIDC"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "$ref": "#/definitions/hashicorp.cloud.iam.SSOConfig",
                  "description": "SsoConfig has the SSO configuration for this organization."
                }
              }
            }
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/sso-preconfiguration-data": {
      "get": {
        "summary": "GetPreconfigurationData returns data needed prior to an SSO configuration\nbeing created.",
        "operationId": "SSOManagementService_GetPreconfigurationData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetPreconfigurationDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization for which the\npreconfiguration data is required.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/sso-type": {
      "get": {
        "summary": "GetSSOType returns the type of SSO that is configured for an organization.",
        "operationId": "SSOManagementService_GetSSOType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetSSOTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "OrganizationId is the identifier of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/user-principals": {
      "get": {
        "summary": "ListUserPrincipalsByOrganization returns a list of principals that are\nmembers of an organization.",
        "operationId": "IamService_ListUserPrincipalsByOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListUserPrincipalsByOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the UUID of an organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/user-principals/batch-fetch": {
      "post": {
        "summary": "GetUserPrincipalsByIDsInOrganization is a batch method to fetch users by ID for a given organization\nIf some of the requested users don't exist or aren't members of the given organization then\nthey will be omitted in response.\nWe're using POST because GET has a length limitation for URL which is given that user-id is UUID would\nlimit us to fetching up to ~48 users at a time which is less than ideal.",
        "operationId": "IamService_GetUserPrincipalsByIDsInOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetUserPrincipalsByIDsInOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of organization for users to look up",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "ids is a list of user IDs to look up"
                }
              },
              "title": "GetUserPrincipalsByIDsInOrganizationRequest is a request for users by ID in a given organization"
            }
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/user-principals/{user_principal_id}": {
      "get": {
        "summary": "GetUserPrincipal retrieves a user principal",
        "operationId": "IamService_GetUserPrincipalByIdInOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the organization_id the requested user principal belongs to.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_principal_id",
            "description": "user_principal_id is the user ID for the requested user principal.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IamService"
        ]
      },
      "delete": {
        "summary": "DeleteOrganizationMembership deletes a user principal's organization membership",
        "operationId": "IamService_DeleteOrganizationMembership",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteOrganizationMembershipResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization the user principal is being deleted from.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_principal_id",
            "description": "user_principal_id is the ID of the user principal to delete from the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/verify-domain-ownership": {
      "post": {
        "summary": "VerifyDomainOwnership checks whether the organization has proven their\nownership/control of the given domain by adding the required TXT record.",
        "description": "It is intended to be used to provide early feedback to the user; we check\nownership \"for real\" in CreateSSOConfiguration and UpdateSSOConfiguration.",
        "operationId": "SSOManagementService_VerifyDomainOwnership",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.VerifyDomainOwnershipResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization for which domain ownership\nwill be verified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "domain is the domain for which ownership will be verified."
                }
              },
              "description": "VerifyDomainOwnershipRequest is the request to verify an organization's\nownership/control of a domain."
            }
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      }
    },
    "/iam/2019-12-10/organizations/{organization_id}/verify-sso-domain-ownership": {
      "post": {
        "summary": "VerifySSODomainOwnership checks whether the organization has proven their\nownership/control of the given domain by adding the required TXT record.",
        "description": "This endpoint differs from the one above because it is intended to be used\nfor HashiCorp SSO domain ownership verification and not Auth0 SAML SSO. It\nis intended to be used to provide early feedback to the user; we check\ndomain ownership in cloud-idp.",
        "operationId": "SSOManagementService_VerifySSODomainOwnership",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.VerifyDomainOwnershipResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "organization_id is the ID of the organization for which domain ownership\nwill be verified.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "domain is the domain for which ownership will be verified."
                }
              },
              "description": "VerifyDomainOwnershipRequest is the request to verify an organization's\nownership/control of a domain."
            }
          }
        ],
        "tags": [
          "SSOManagementService"
        ]
      }
    },
    "/iam/2019-12-10/ping": {
      "get": {
        "summary": "Ping pings the healthcheck endpoint exposed for HTTP healthchecks via Datadog Synthetic Monitoring",
        "operationId": "IamService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.PingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "IamService"
        ],
        "security": []
      }
    },
    "/iam/2019-12-10/user-principals": {
      "post": {
        "summary": "CreateUserPrincipal creates a new UserPrincipal.",
        "operationId": "IamService_CreateUserPrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CreateUserPrincipalRequest is the request to create a user principal on the IAM service.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.CreateUserPrincipalRequest"
            }
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/user-principals/unify": {
      "put": {
        "summary": "UnifyUserPrincipal triggers the unification of a user principal to TFC",
        "operationId": "IamService_UnifyUserPrincipal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "IamService"
        ]
      }
    },
    "/iam/2019-12-10/{resource_name}": {
      "get": {
        "summary": "GetGroup gets a group using the organization ID and group name.",
        "operationId": "GroupsService_GetGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.GetGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource name of the group.\niam/organization/\u003corg_id\u003e/group/\u003cgroup_id\u003e",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/group/[^/]+"
          }
        ],
        "tags": [
          "GroupsService"
        ]
      },
      "delete": {
        "summary": "DeleteGroup deletes a group.",
        "operationId": "GroupsService_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.DeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource name of the group.\niam/organization/\u003corg_id\u003e/group/\u003cgroup_id\u003e.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/group/[^/]+"
          }
        ],
        "tags": [
          "GroupsService"
        ]
      },
      "put": {
        "summary": "UpdateGroup updates a group's modifiable fields.",
        "operationId": "GroupsService_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UpdateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource name of the group.\niam/organization/\u003corg_id\u003e/group/\u003cgroup_id\u003e",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/group/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "$ref": "#/definitions/hashicorp.cloud.iam.Group",
                  "description": "group is the group being updated."
                },
                "update_mask": {
                  "type": "string",
                  "description": "update_mask is the list of group fields being updated."
                }
              }
            }
          }
        ],
        "tags": [
          "GroupsService"
        ]
      },
      "patch": {
        "summary": "UpdateGroup updates a group's modifiable fields.",
        "operationId": "GroupsService_UpdateGroup2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UpdateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource name of the group.\niam/organization/\u003corg_id\u003e/group/\u003cgroup_id\u003e",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/group/[^/]+"
          },
          {
            "name": "group",
            "description": "group is the group being updated.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.Group"
            }
          },
          {
            "name": "update_mask",
            "description": "update_mask is the list of group fields being updated.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GroupsService"
        ]
      }
    },
    "/iam/2019-12-10/{resource_name}/members": {
      "get": {
        "summary": "ListGroupMembers retrieves a list of member principals.",
        "operationId": "GroupsService_ListGroupMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.ListGroupMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource name of the group.\niam/organization/\u003corg_id\u003e/group/\u003cgroup_id\u003e.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/group/[^/]+"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GroupsService"
        ]
      },
      "put": {
        "summary": "UpdateGroupMembers updates the principal memberships of a group.",
        "operationId": "GroupsService_UpdateGroupMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.iam.UpdateGroupMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "resource_name",
            "description": "resource_name is the resource name of the group.\niam/organization/\u003corg_id\u003e/group/\u003cgroup_id\u003e.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "iam/organization/[^/]+/group/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "member_principal_ids_to_add": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "member_principal_ids_to_add is a list of the principal IDs which should be added\nto the group."
                },
                "member_principal_ids_to_remove": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "member_principal_ids_to_remove is a list of the principal IDs which should be removed\nfrom the group."
                }
              }
            }
          }
        ],
        "tags": [
          "GroupsService"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "google.protobuf.NullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "hashicorp.cloud.common.PaginationRequest": {
      "type": "object",
      "properties": {
        "page_size": {
          "type": "integer",
          "format": "int64",
          "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted."
        },
        "next_page_token": {
          "type": "string",
          "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set."
        },
        "previous_page_token": {
          "type": "string",
          "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set."
        }
      },
      "description": "PaginationRequest are the parameters for a paginated list request."
    },
    "hashicorp.cloud.common.PaginationResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "type": "string",
          "description": "This token allows you to get the next page of results for list requests.\nIf the number of results is larger than `page_size`, use the\n`next_page_token` as a value for the query parameter `next_page_token` in\nthe next request. The value will become empty when there are no more pages."
        },
        "previous_page_token": {
          "type": "string",
          "description": "This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than `page_size`, use the\n`previous_page_token` as a value for the query parameter\n`previous_page_token` in the next request. The value will become empty when\nthere are no more pages."
        }
      },
      "description": "PaginationResponse is the response holding the page tokens for a paginated\nlist response."
    },
    "hashicorp.cloud.iam.AWSWorkloadIdentityProviderConfig": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string",
          "description": "account_id is the AWS account ID allowed to exchange identities."
        }
      },
      "description": "AWSWorkloadIdentityProviderConfig configures an AWS Workload Identity\nProvider."
    },
    "hashicorp.cloud.iam.AcceptOrganizationInvitationRequest": {
      "type": "object",
      "properties": {
        "invitation_token": {
          "type": "string",
          "description": "invitation_token is the token to be consumed on successful invitation acceptance."
        }
      },
      "description": "AcceptOrganizationInvitationRequest is a request to accept an organization invitation."
    },
    "hashicorp.cloud.iam.AcceptOrganizationInvitationResponse": {
      "type": "object",
      "properties": {
        "invitation": {
          "$ref": "#/definitions/hashicorp.cloud.iam.OrganizationInvitation",
          "description": "invitation is the accepted invitation."
        }
      },
      "description": "AcceptOrganizationInvitationResponse is a response for accepting an organization invitation."
    },
    "hashicorp.cloud.iam.AuthConnection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id is the id of the connection"
        },
        "issuer": {
          "type": "string",
          "title": "issuer is the URL of the IDP"
        },
        "client_id": {
          "type": "string",
          "title": "client_id is the ID of the client for the connection"
        },
        "email_domain": {
          "type": "string",
          "title": "email_domain of the connection"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "created_ at is the time of creation for the connection"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "updated_at is the time of last update of the connection"
        },
        "default_role": {
          "type": "string",
          "description": "default_role is the RBAC role that users signing in to the\nSSO org will get as the default."
        }
      },
      "description": "AuthConnection represents an authentication connection that may\nbe used in multiple message types."
    },
    "hashicorp.cloud.iam.BatchGetPrincipalsResponse": {
      "type": "object",
      "properties": {
        "principals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.Principal"
          },
          "description": "principals is the requested principals."
        }
      },
      "description": "BatchGetPrincipalsResponse is the batch get principals response."
    },
    "hashicorp.cloud.iam.ConfirmMFAEnrollmentRequest": {
      "type": "object",
      "properties": {
        "confirmation_otp": {
          "type": "string"
        },
        "mfa_token": {
          "type": "string"
        }
      }
    },
    "hashicorp.cloud.iam.ConfirmMFAEnrollmentResponse": {
      "type": "object"
    },
    "hashicorp.cloud.iam.CountGroupsForPrincipalsResponse": {
      "type": "object",
      "properties": {
        "principals_counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.CountGroupsForPrincipalsResponse.PrincipalGroupCount"
          },
          "description": "principals_counts is a list of principals and the number of groups that they are a member of."
        }
      }
    },
    "hashicorp.cloud.iam.CountGroupsForPrincipalsResponse.PrincipalGroupCount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the id of the principal."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "count is the number of groups this principal is a member of."
        }
      }
    },
    "hashicorp.cloud.iam.CountMembersForGroupsResponse": {
      "type": "object",
      "properties": {
        "groups_counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.CountMembersForGroupsResponse.MembersCount"
          },
          "description": "groups_counts is a list of member counts per group."
        }
      }
    },
    "hashicorp.cloud.iam.CountMembersForGroupsResponse.MembersCount": {
      "type": "object",
      "properties": {
        "resource_name": {
          "type": "string",
          "description": "resource_name refers to the group."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "count is the count of members in the group."
        }
      }
    },
    "hashicorp.cloud.iam.CountOrganizationGroupsResponse": {
      "type": "object",
      "properties": {
        "group_count": {
          "type": "integer",
          "format": "int64",
          "description": "group_count is the number of groups in the organization."
        }
      }
    },
    "hashicorp.cloud.iam.CreateAuthConnectionResponse": {
      "type": "object",
      "properties": {
        "auth_connection": {
          "$ref": "#/definitions/hashicorp.cloud.iam.AuthConnection",
          "title": "auth_connection that was created"
        }
      },
      "description": "CreateAuthConnectionResponse for creating a new auth connection."
    },
    "hashicorp.cloud.iam.CreateGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/hashicorp.cloud.iam.Group",
          "description": "group is the newly created group."
        },
        "operation_id": {
          "type": "string",
          "description": "operation_id is the ID of the operation which tracks synchronization across the platform."
        }
      }
    },
    "hashicorp.cloud.iam.CreateOrganizationInvitationsResponse": {
      "type": "object",
      "description": "CreateOrganizationInvitationsResponse is a response for a created organization invitation.\n\nTODO: add list of the invitations that have been created."
    },
    "hashicorp.cloud.iam.CreateOrganizationServicePrincipalKeyResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal.Key",
          "description": "key is the service principal key that has just been created."
        },
        "client_secret": {
          "type": "string",
          "description": "client_secret is the secret part of the credential set modelled by the service\nprincipal key. Its counterpart is the \"client ID\", which is part of the key\nmessage. This is the only time that this client secret transits through our\nsystems, as after the creation of the service principal key it's forgotten.\nConsumers of this service endpoint are expected to store the client secret\nin order to use it later."
        }
      },
      "description": "CreateOrganizationServicePrincipalKeyResponse is the response message returned after creating\na service principal key for a service principal on organization level."
    },
    "hashicorp.cloud.iam.CreateOrganizationServicePrincipalResponse": {
      "type": "object",
      "properties": {
        "service_principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal",
          "description": "service_principal is the just-created service principal."
        }
      },
      "description": "CreateOrganizationServicePrincipalResponse is the response message returned after creating\na service principal on organization level."
    },
    "hashicorp.cloud.iam.CreateProjectServicePrincipalKeyResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal.Key",
          "description": "key is the service principal key that has just been created."
        },
        "client_secret": {
          "type": "string",
          "description": "client_secret is the secret part of the credential set modelled by the service\nprincipal key. Its counterpart is the \"client ID\", which is part of the key\nmessage. This is the only time that this client secret transits through our\nsystems, as after the creation of the service principal key it's forgotten.\nConsumers of this service endpoint are expected to store the client secret\nin order to use it later."
        }
      },
      "description": "CreateProjectServicePrincipalKeyResponse is the response message returned after creating\na service principal key for a service principal on project level."
    },
    "hashicorp.cloud.iam.CreateProjectServicePrincipalResponse": {
      "type": "object",
      "properties": {
        "service_principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal",
          "description": "service_principal is the just-created service principal."
        }
      },
      "description": "CreateProjectServicePrincipalResponse is the response message returned after\ncreating a service principal on project level."
    },
    "hashicorp.cloud.iam.CreateSSOConfigurationResponse": {
      "type": "object"
    },
    "hashicorp.cloud.iam.CreateServicePrincipalKeyResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal.Key",
          "description": "key is the service principal key that has just been created."
        },
        "client_secret": {
          "type": "string",
          "description": "client_secret is the secret part of the credential set modelled by the service\nprincipal key. Its counterpart is the \"client ID\", which is part of the key\nmessage. This is the only time that this client secret transits through our\nsystems, as after the creation of the service principal key it's forgotten.\nConsumers of this service endpoint are expected to store the client secret\nin order to use it later."
        }
      },
      "description": "CreateServicePrincipalKeyResponse is the response message returned after creating\na service principal key."
    },
    "hashicorp.cloud.iam.CreateServicePrincipalResponse": {
      "type": "object",
      "properties": {
        "service_principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal",
          "description": "service_principal is the just-created service principal."
        }
      },
      "description": "CreateServicePrincipalResponse is the response message returned after creating\na service principal."
    },
    "hashicorp.cloud.iam.CreateUserPrincipalRequest": {
      "type": "object",
      "properties": {
        "accept_tos": {
          "type": "boolean",
          "title": "accept_tos is a flag indicating user's agreement with the current ToS"
        },
        "accept_privacy_policy": {
          "type": "boolean",
          "title": "accept_privacy_policy is a flag indicating user's agreement with the current Privacy Policy"
        }
      },
      "description": "CreateUserPrincipalRequest is the request to create a user principal on the IAM service."
    },
    "hashicorp.cloud.iam.CreateWorkloadIdentityProviderResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/hashicorp.cloud.iam.WorkloadIdentityProvider",
          "description": "provider is the created workload identity provider."
        }
      },
      "description": "CreateWorkloadIdentityProviderResponse is the response message when creating\na workload identity provider."
    },
    "hashicorp.cloud.iam.DeleteGroupResponse": {
      "type": "object",
      "properties": {
        "operation_id": {
          "type": "string",
          "description": "operation_id should be waited on by clients as group deletion is async\nonce feature flag hcp-server-side-tfc-sync-blocking is set to false."
        }
      }
    },
    "hashicorp.cloud.iam.DeleteOrganizationInvitationResponse": {
      "type": "object",
      "description": "DeleteOrganizationInvitationResponse is a response for deleting an organization invitation."
    },
    "hashicorp.cloud.iam.DeleteOrganizationMembershipResponse": {
      "type": "object",
      "title": "DeleteOrganizationMembershipResponse is the response from deleting a users\norganization membership"
    },
    "hashicorp.cloud.iam.DeleteOrganizationServicePrincipalKeyResponse": {
      "type": "object",
      "description": "DeleteOrganizationServicePrincipalKeyResponse is the response to a DeleteOrganizationServicePrincipalKeyRequest.\nIt is blank as the mere presence of the response indicates a success, in all other cases\nthe request returns an error."
    },
    "hashicorp.cloud.iam.DeleteOrganizationServicePrincipalResponse": {
      "type": "object",
      "description": "DeleteOrganizationServicePrincipalResponse is the response message returned after deleting\na service principal on organization level."
    },
    "hashicorp.cloud.iam.DeleteProjectServicePrincipalKeyResponse": {
      "type": "object",
      "description": "DeleteProjectServicePrincipalKeyResponse is the response to a DeleteServicePrincipalKeyRequest.\nIt is blank as the mere presence of the response indicates a success, in all other cases\nthe request returns an error."
    },
    "hashicorp.cloud.iam.DeleteProjectServicePrincipalResponse": {
      "type": "object",
      "description": "DeleteProjectServicePrincipalResponse is the response message returned after deleting\na service principal on project level."
    },
    "hashicorp.cloud.iam.DeleteSSOConfigurationResponse": {
      "type": "object"
    },
    "hashicorp.cloud.iam.DeleteServicePrincipalKeyResponse": {
      "type": "object",
      "description": "DeleteServicePrincipalKeyResponse is the response to a DeleteServicePrincipalKeyRequest.\nIt is blank as the mere presence of the response indicates a success, in all other cases\nthe request returns an error."
    },
    "hashicorp.cloud.iam.DeleteServicePrincipalResponse": {
      "type": "object",
      "description": "DeleteServicePrincipalResponse is the response message returned after deleting\na service principal."
    },
    "hashicorp.cloud.iam.DeleteWorkloadIdentityProviderResponse": {
      "type": "object",
      "properties": {
        "resource_name": {
          "type": "string",
          "description": "resource_name is the resource name of the workload identity provider that\nwas deleted."
        },
        "resource_id": {
          "type": "string",
          "description": "resource_id is the resource id of the workload identity provider that\nwas deleted."
        }
      },
      "description": "DeleteWorkloadIdentityProviderResponse is the response message to deleting a\nworkload identity provider."
    },
    "hashicorp.cloud.iam.DisableMFARequest": {
      "type": "object",
      "properties": {
        "mfa_token": {
          "type": "string",
          "title": "the user token used to talk to the Auth0 MFA API"
        }
      }
    },
    "hashicorp.cloud.iam.DisableMFAResponse": {
      "type": "object"
    },
    "hashicorp.cloud.iam.EnableMFARequest": {
      "type": "object",
      "properties": {
        "mfa_token": {
          "type": "string"
        }
      }
    },
    "hashicorp.cloud.iam.EnableMFAResponse": {
      "type": "object",
      "properties": {
        "qrcode_uri": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "recovery_codes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "hashicorp.cloud.iam.ExchangeWorkloadIdentityTokenRequest.Token": {
      "type": "object",
      "properties": {
        "jwt_token": {
          "type": "string",
          "description": "jwt_token is a JWT token."
        },
        "aws_get_caller_id_token": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ExchangeWorkloadIdentityTokenRequest.Token.AWS4Request",
          "description": "[0] https://docs.aws.amazon.com/IAM/latest/UserGuide/signing-elements.html\n[1] https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html",
          "title": "AWS4Request is a signed AWS4 [0] request to the GetCallerIdentity\nendpoint [1]"
        }
      },
      "description": "Token represents an external identity token."
    },
    "hashicorp.cloud.iam.ExchangeWorkloadIdentityTokenRequest.Token.AWS4Request": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "url is the URL of the AWS endpoint being called. For example,\nhttps://sts.amazonaws.com?Action=GetCallerIdentity\u0026Version=2011-06-15"
        },
        "method": {
          "type": "string",
          "title": "method is the method of the HTTP request. Example is PUT"
        },
        "body": {
          "type": "string",
          "description": "body is the HTTP request body."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "x-amz-date: the date of the request\n host: the host of the request, e.g. sts.amazonaws.com\n x-hcp-workload-identity-provider: the resource_name of the workload\n   identity provider the token exchange will be conducted against.\n Authorization: The AWS Signature for the request.\n X-Amz-Security-Token: The temporary security credentials' session used\n   to sign the request. Described here:\n   https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html#temporary-security-credentials",
          "title": "headers is the HTTP request headers. This must include:"
        }
      },
      "title": "AWS4Request represents a AWS4 signed request to an AWS service. See\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/signing-elements.html"
    },
    "hashicorp.cloud.iam.ExchangeWorkloadIdentityTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "access_token is an access_token with the subject matching that of the\nrequested service principal."
        },
        "expires_in": {
          "type": "integer",
          "format": "int32",
          "description": "expires_in is the number of seconds the returned access token expires in."
        }
      },
      "description": "ExchangeWorkloadIdentityTokenResponse is the response to the exchange of an\nexternal token for a service principal access_token."
    },
    "hashicorp.cloud.iam.GetAuthConnectionsResponse": {
      "type": "object",
      "properties": {
        "auth_connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.AuthConnection"
          }
        }
      }
    },
    "hashicorp.cloud.iam.GetCallerIdentityResponse": {
      "type": "object",
      "properties": {
        "principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.Principal",
          "description": "principal is the calling principal."
        }
      },
      "title": "GetCallerIdentityResponse contains user data and some extra information\n(for example user preferences)"
    },
    "hashicorp.cloud.iam.GetCurrentUserPrincipalResponse": {
      "type": "object",
      "properties": {
        "user_principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipal",
          "title": "user_principal is a user principal"
        },
        "web_portal_preferences": {
          "$ref": "#/definitions/hashicorp.cloud.iam.WebConsolePreferences",
          "description": "web_portal_preferences are the user preferences for the HCP Web Portal\nJS application. They're only included in the response if the caller client\nhas enabled the corresponding flag in the request parameters."
        },
        "userinfo": {
          "type": "object"
        }
      },
      "title": "GetCurrentUserPrincipalResponse contains user data and some extra information\n(for example user preferences)"
    },
    "hashicorp.cloud.iam.GetGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/hashicorp.cloud.iam.Group",
          "description": "group is the group that was fetched."
        }
      }
    },
    "hashicorp.cloud.iam.GetMFAStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.iam.GetMFAStatusResponse.MFAStatus"
        }
      }
    },
    "hashicorp.cloud.iam.GetMFAStatusResponse.MFAStatus": {
      "type": "string",
      "enum": [
        "UNSET",
        "ENABLED",
        "DISABLED",
        "UNKNOWN"
      ],
      "default": "UNSET",
      "title": "- UNSET: UNSET means the result hasn't been set and should never\nbe seen outside of tests.\n - ENABLED: ENABLED means the user has MFA enabled.\n - DISABLED: DISABLED means the user does not have MFA enabled.\n - UNKNOWN: UNKNOWN means we do not know the status of this user's MFA. This is\nthe case when MFA is managed by an external party (e.g. SSO and\nGitHub users.)"
    },
    "hashicorp.cloud.iam.GetOrganizationAuthMetadataResponse": {
      "type": "object",
      "properties": {
        "sso_enabled": {
          "type": "boolean",
          "description": "sso_status indicates whether the organization has configured Single Sign-On\nvia an external IdP."
        }
      },
      "description": "GetOrganizationAuthMetadataResponse is the response containing metadata\nabout an organization's configured authentication methods."
    },
    "hashicorp.cloud.iam.GetOrganizationNameByInvitationTokenResponse": {
      "type": "object",
      "properties": {
        "organization_name": {
          "type": "string"
        }
      },
      "title": "GetOrganizationNameByInvitationTokenResponse is a response for returning the name of an organization\nassociated with the provided invitation token"
    },
    "hashicorp.cloud.iam.GetOrganizationServicePrincipalResponse": {
      "type": "object",
      "properties": {
        "service_principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal",
          "description": "service_principal is the retrieved service principal."
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal.Key"
          },
          "description": "keys is the list of the service principal keys that belong to the\nretrieved service principal."
        }
      },
      "description": "GetOrganizationServicePrincipalResponse is the response message for fetching a service principal\non organization level."
    },
    "hashicorp.cloud.iam.GetPreconfigurationDataResponse": {
      "type": "object",
      "properties": {
        "domain_txt_verification_record": {
          "type": "string",
          "description": "domain_txt_verification_record is the expected value of the TXT ownership\nverification record we require organizations to add to their email\ndomain's DNS to prove that they own/control the domain."
        },
        "assertion_consumer_url": {
          "type": "string",
          "description": "AssertionConsumerUrl has the Assertion Consumer URL (or Post Back in\nAuth0 parlance) for the IdP."
        },
        "entity_id": {
          "type": "string",
          "description": "EntityUrl has the name of the audience the IdP needs to set up on their\nside."
        }
      },
      "description": "GetPreconfigurationDataResponse is the response containing the\npreconfiguration data."
    },
    "hashicorp.cloud.iam.GetProjectServicePrincipalResponse": {
      "type": "object",
      "properties": {
        "service_principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal",
          "description": "service_principal is the retrieved service principal."
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal.Key"
          },
          "description": "keys is the list of the service principal keys that belong to the\nretrieved service principal."
        },
        "project_id": {
          "type": "string",
          "description": "project_id is the unique identifier (UUID) of the project that\nowns the requested service principal."
        }
      },
      "description": "GetProjectServicePrincipalResponse is the response message for fetching a\nservice principal on project level."
    },
    "hashicorp.cloud.iam.GetSSOConfigurationResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/hashicorp.cloud.iam.SSOConfig"
        }
      }
    },
    "hashicorp.cloud.iam.GetSSOTypeResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/hashicorp.cloud.iam.SSOType",
          "description": "Type is the type of SSO currently configured."
        }
      }
    },
    "hashicorp.cloud.iam.GetServicePrincipalResponse": {
      "type": "object",
      "properties": {
        "service_principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal",
          "description": "service_principal is the retrieved service principal."
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal.Key"
          },
          "description": "keys is the list of the service principal keys that belong to the\nretrieved service principal."
        }
      },
      "description": "GetServicePrincipalResponse is the response message for fetching a service principal."
    },
    "hashicorp.cloud.iam.GetUserPrincipalsByIDsInOrganizationResponse": {
      "type": "object",
      "properties": {
        "user_principals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipal"
          },
          "title": "user_principals is a list of requested users"
        }
      },
      "title": "GetUserPrincipalsByIDsInOrganizationResponse is a response with users by ID in a given organization"
    },
    "hashicorp.cloud.iam.GetWorkloadIdentityProviderResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/hashicorp.cloud.iam.WorkloadIdentityProvider",
          "description": "provider is the requested workload identity provider."
        }
      },
      "description": "GetWorkloadIdentityProviderResponse is the response message to retrieving a\nworkload identity provider."
    },
    "hashicorp.cloud.iam.Group": {
      "type": "object",
      "properties": {
        "resource_id": {
          "type": "string",
          "description": "resource_id is the principal ID of the group."
        },
        "resource_name": {
          "type": "string",
          "description": "resource_name is the name of the group."
        },
        "display_name": {
          "type": "string",
          "description": "display_name is the user-specified display name of the group."
        },
        "description": {
          "type": "string",
          "description": "description is a description of the group."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is when the group was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "updated_at is when the group was last updated."
        },
        "member_count": {
          "type": "integer",
          "format": "int32",
          "title": "member_count is the count of members in the group.\nWe use Int32Value to make sure we return nil instead of 0 if we don't have a member count"
        },
        "scim_synchronized": {
          "type": "boolean",
          "description": "scim_synchronized denotes the group was synchronized from an upstream IdP using SCIM."
        }
      }
    },
    "hashicorp.cloud.iam.GroupMember": {
      "type": "object",
      "properties": {
        "principal_type": {
          "$ref": "#/definitions/hashicorp.cloud.iam.GroupMemberPrincipalType",
          "description": "principal_type is the type of principal (user etc.) of the group member."
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the principal."
        },
        "name": {
          "type": "string",
          "description": "name is the name of the principal."
        },
        "email": {
          "type": "string",
          "description": "email is the email address of the principal."
        }
      }
    },
    "hashicorp.cloud.iam.GroupMemberPrincipalType": {
      "type": "string",
      "enum": [
        "GROUP_MEMBER_PRINCIPAL_TYPE_UNSPECIFIED",
        "GROUP_MEMBER_PRINCIPAL_TYPE_USER"
      ],
      "default": "GROUP_MEMBER_PRINCIPAL_TYPE_UNSPECIFIED"
    },
    "hashicorp.cloud.iam.ListGroupMembersResponse": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.GroupMember"
          },
          "description": "members is a list of the member principals in the group."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "pagination contains page details."
        },
        "group": {
          "$ref": "#/definitions/hashicorp.cloud.iam.Group",
          "description": "group is the group the members belong to."
        }
      }
    },
    "hashicorp.cloud.iam.ListGroupsRequest.Filter": {
      "type": "object",
      "properties": {
        "member_principal_id": {
          "type": "string",
          "description": "member_principal_id is an optional query param to filter groups that a principal belongs to."
        },
        "group_resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "group_resource_ids is a way to filter groups by a list of group\nids when we need to resolve group attributes (e.g. name) from a\nlist of ids we get from a project policy."
        }
      }
    },
    "hashicorp.cloud.iam.ListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.Group"
          },
          "description": "groups is the list of groups that was retrieved."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "pagination contains result page data."
        }
      }
    },
    "hashicorp.cloud.iam.ListOrganizationInvitationsResponse": {
      "type": "object",
      "properties": {
        "invitations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.OrganizationInvitation"
          }
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "Pagination contains the pagination tokens for a subsequent request."
        }
      },
      "title": "ListOrganizationInvitationsResponse is a response for listing organization invitations"
    },
    "hashicorp.cloud.iam.ListOrganizationServicePrincipalsRequest.IncludeLevels": {
      "type": "string",
      "enum": [
        "UNSET",
        "ALL",
        "PROJECTS"
      ],
      "default": "UNSET",
      "description": "IncludeLevels represents hierarchical levels below an organization under\nwhich service principals can be crated.\n\n - UNSET: UNSET is the default value.\nUNSET will only include service principals at organization level.\n - ALL: ALL will include all service principals on all hirarchical levels\nunder the given organization.\n - PROJECTS: PROJECTS includes service principals at project level\nin the list response."
    },
    "hashicorp.cloud.iam.ListOrganizationServicePrincipalsResponse": {
      "type": "object",
      "properties": {
        "service_principals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal"
          },
          "description": "service_principals is the list of principals in the organization."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "pagination contains the pagination tokens for a subsequent request."
        }
      },
      "description": "ListOrganizationServicePrincipalsResponse is the response message for\nlisting the service principals in an organization."
    },
    "hashicorp.cloud.iam.ListProjectServicePrincipalsResponse": {
      "type": "object",
      "properties": {
        "service_principals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal"
          },
          "description": "service_principals is the list of principals in the organization."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "pagination contains the pagination tokens for a subsequent request."
        }
      },
      "description": "ListProjectServicePrincipalsResponse is the response message for\nlisting the service principals in a project."
    },
    "hashicorp.cloud.iam.ListSSOConfigurationsResponse": {
      "type": "object",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.SSOConfig"
          },
          "description": "Config holds the SSO configurations for this organization."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "Pagination contains the pagination tokens for a subsequent request."
        }
      }
    },
    "hashicorp.cloud.iam.ListServicePrincipalsResponse": {
      "type": "object",
      "properties": {
        "service_principals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal"
          },
          "description": "service_principals is the list of principals in the organization."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "pagination contains the pagination tokens for a subsequent request."
        }
      },
      "description": "ListServicePrincipalsResponse is the response message for listing the service\nprincipals at a given scope."
    },
    "hashicorp.cloud.iam.ListUserPrincipalsByOrganizationResponse": {
      "type": "object",
      "properties": {
        "user_principals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipal"
          },
          "description": "user_principals is a list of user principals."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "Pagination contains the pagination tokens for a subsequent request."
        }
      },
      "description": "ListUserPrincipalsByOrganizationResponse contains lists of principals for an\norganization."
    },
    "hashicorp.cloud.iam.ListWorkloadIdentityProviderResponse": {
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.WorkloadIdentityProvider"
          },
          "description": "providers is the list of workload identity provider."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "pagination contains the pagination tokens for a subsequent request."
        }
      },
      "description": "ListWorkloadIdentityProviderResponse is the response message to listing\nworkload identity provider."
    },
    "hashicorp.cloud.iam.NewOrganizationInvitation": {
      "type": "object",
      "properties": {
        "invitee_email": {
          "type": "string",
          "description": "invitee_email is the email address of the person who is being\ninvited to join an organization."
        },
        "role": {
          "type": "string",
          "description": "role is the globally unique identifier that corresponds to the \"id\" column\nin cloud-resource-manager roles table.\nFor now, this field can only have the values \"roles/admin\", \"roles/viewer\",\n\"roles/contributor\"."
        }
      },
      "description": "NewOrganizationInvitation contains the data for the creation of a new organization\ninvitation. It's used as part of the request to create a number of org invitations."
    },
    "hashicorp.cloud.iam.OIDCWorkloadIdentityProviderConfig": {
      "type": "object",
      "properties": {
        "issuer_uri": {
          "type": "string",
          "title": "issuer_uri is the OIDC issuer URI"
        },
        "allowed_audiences": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "allowed_audiences is the set of audiences set on the access token that\nare allowed to exchange identities. The access token must have an\naudience that is contained in this set. If no audience is set, the\ndefault allowed audience will be the resource name of the\nWorkloadIdentityProvider."
        }
      },
      "description": "OIDCWorkloadIdentityProviderConfig configures an OIDC Workload Identity\nProvider."
    },
    "hashicorp.cloud.iam.OrganizationInvitation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id is the ID of the current invitation"
        },
        "organization_id": {
          "type": "string",
          "description": "OrganizationId is a reference to the organization that this invitation is for."
        },
        "inviter_user_principal_id": {
          "type": "string",
          "description": "InviterUserPrincipalId the UUID of the user principal who is inviting\nanother person into the organization."
        },
        "invitee_email": {
          "type": "string",
          "description": "InviteeEmail is the email address that is used as target of the invitation."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "CreatedAt is when the record was inserted, that is when the invitation was\ncreated and sent."
        },
        "accepted_at": {
          "type": "string",
          "format": "date-time",
          "description": "AcceptedAt is when the invitation was accepted, resulting in the invitee\nbeing added to the organization. This value can be null, which marks\nan invitation record as being still pending."
        },
        "role": {
          "type": "string",
          "description": "role is the globally unique identifier that corresponds to the \"id\" column\nin cloud-resource-manager roles table.\nFor now, this field can only have the values \"roles/admin\", \"roles/viewer\",\n\"roles/contributor\"."
        },
        "state": {
          "$ref": "#/definitions/hashicorp.cloud.iam.OrganizationInvitation.State",
          "description": "state is the current state of the organization invitation. For information on what each\nstate means, see the state enum."
        }
      },
      "title": "OrganizationInvitation represents an organization invitation"
    },
    "hashicorp.cloud.iam.OrganizationInvitation.State": {
      "type": "string",
      "enum": [
        "PENDING",
        "ACCEPTED"
      ],
      "default": "PENDING",
      "description": "State is one of the states that an organization invitation can be in. The public and private\nvalues for State do not map onto each other in a 1-to-1 way.\n\n - PENDING: PENDING is the state of an organization invitation that has been created successfully but\nhas not been accepted yet.\n - ACCEPTED: ACCEPTED is the state of an organization invitation that has been accepted."
    },
    "hashicorp.cloud.iam.PingResponse": {
      "type": "object",
      "title": "PingResponse is a response to pinging the HTTP healthcheck endpoint"
    },
    "hashicorp.cloud.iam.Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the identifier for the principal."
        },
        "type": {
          "$ref": "#/definitions/hashicorp.cloud.iam.PrincipalType",
          "description": "type is the type of the principal."
        },
        "user": {
          "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipal",
          "description": "user is a user principal."
        },
        "service": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal",
          "description": "service is a service principal."
        },
        "group": {
          "$ref": "#/definitions/hashicorp.cloud.iam.Group",
          "description": "group is a group principal."
        },
        "group_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "group_ids is a list of IDs of the HCP groups that this principal is a\nmember of."
        }
      },
      "description": "Principal is the common wrapper for our different types of principals."
    },
    "hashicorp.cloud.iam.PrincipalType": {
      "type": "string",
      "enum": [
        "PRINCIPAL_TYPE_UNSPECIFIED",
        "PRINCIPAL_TYPE_USER",
        "PRINCIPAL_TYPE_SERVICE",
        "PRINCIPAL_TYPE_GROUP",
        "PRINCIPAL_TYPE_INTERNAL_OPERATOR"
      ],
      "default": "PRINCIPAL_TYPE_UNSPECIFIED",
      "description": "PrincipalType represents the possible types of principals.\n\n - PRINCIPAL_TYPE_UNSPECIFIED: PRINCIPAL_TYPE_UNSPECIFIED is the default value.\n - PRINCIPAL_TYPE_USER: PRINCIPAL_TYPE_USER is the user principal type.\n - PRINCIPAL_TYPE_SERVICE: PRINCIPAL_TYPE_SERVICE is the service principal type.\n - PRINCIPAL_TYPE_GROUP: PRINCIPAL_TYPE_GROUP is the group principal type.\n - PRINCIPAL_TYPE_INTERNAL_OPERATOR: PRINCIPAL_TYPE_INTERNAL_OPERATOR is the internal operator principal type."
    },
    "hashicorp.cloud.iam.PrincipalView": {
      "type": "string",
      "enum": [
        "PRINCIPAL_VIEW_UNSPECIFIED",
        "PRINCIPAL_VIEW_BASIC",
        "PRINCIPAL_VIEW_FULL"
      ],
      "default": "PRINCIPAL_VIEW_UNSPECIFIED",
      "description": "PrincipalView allows retrieving a partial view of a Principal.\n\n - PRINCIPAL_VIEW_UNSPECIFIED: The default / unset value.\n - PRINCIPAL_VIEW_BASIC: Include basic metadata about the principal, but not the principal details.\nThis will return the Id and Type only.\n - PRINCIPAL_VIEW_FULL: Include everything."
    },
    "hashicorp.cloud.iam.ResetPasswordResponse": {
      "type": "object"
    },
    "hashicorp.cloud.iam.SAMLDetails": {
      "type": "object",
      "properties": {
        "signin_url": {
          "type": "string",
          "title": "SigninUrl is the SAML single sign-on URL for the organization"
        },
        "certificate": {
          "type": "string",
          "description": "Certificate holds the signing certificate that will\nbe used to sign all SAML assertions."
        },
        "signout_url": {
          "type": "string",
          "description": "SignoutUrl is the optional SAML single sign-out URL for\nthe organization. If not present, then we use the\nsignin_url instead."
        },
        "email_domains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "EmailDomains holds a list of email domains that will be associated with\nthis SAML connection. Users with emails in those domains will be\nredirected to the SigninUrl above for authentication."
        },
        "assertion_consumer_url": {
          "type": "string",
          "description": "AssertionConsumerUrl has the Assertion Consumer URL (or Post Back in\nAuth0 parlance) for the IdP. This is not editable."
        },
        "entity_id": {
          "type": "string",
          "description": "EntityUrl has the name of the audience the IdP needs to set up on their\nside. This is not editable."
        }
      }
    },
    "hashicorp.cloud.iam.SSOConfig": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/hashicorp.cloud.iam.SSOType",
          "description": "Type is the type of Single Sign-On."
        },
        "saml": {
          "$ref": "#/definitions/hashicorp.cloud.iam.SAMLDetails",
          "description": "SAML holds SAML SSO configuration details."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "created_ at is the time of creation for the configuration"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "updated_at is the last time that the configuration was modified."
        },
        "default_role": {
          "type": "string",
          "description": "default_role is the default RBAC role that users joining the\nSSO organization should get."
        }
      }
    },
    "hashicorp.cloud.iam.SSOType": {
      "type": "string",
      "enum": [
        "UNSET",
        "SAML",
        "OIDC"
      ],
      "default": "UNSET",
      "description": "SSOType is the type of SSO.\n\n - UNSET: UNSET is the default value.\nIt should never be used at runtime for valid messages.\n - SAML: SAML is a SAML connection.\n - OIDC: OIDC is a OIDC connection stored in cloud-idp."
    },
    "hashicorp.cloud.iam.SearchPrincipalsFilter": {
      "type": "object",
      "properties": {
        "search_text": {
          "type": "string",
          "description": "search_text is the search text which cause the results will be filtered to\nprincipals whose name/email contains the text."
        },
        "principal_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.PrincipalType"
          },
          "description": "principal_type_filter is an optional list of principal types. When specified,\nthe search results will only contain principals whose type is included in the\nfilter."
        },
        "exclude_members_of_group_names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "exclude_members_of_group_names is an optional list of group resource names.\nIf a principal is a member of any of the groups specified, the principal will be excluded\nfrom the search results."
        }
      },
      "description": "SearchPrincipalsFilter contains optional filter fields when making a SearchPrincipalsRequest."
    },
    "hashicorp.cloud.iam.SearchPrincipalsResponse": {
      "type": "object",
      "properties": {
        "principals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.SearchPrincipalsResult"
          },
          "description": "principals is a list of the principals returned from the search."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "pagination contains page data."
        }
      },
      "description": "SearchPrincipalsResponse is the response to the SearchPrincipals rpc."
    },
    "hashicorp.cloud.iam.SearchPrincipalsResult": {
      "type": "object",
      "properties": {
        "principal_type": {
          "$ref": "#/definitions/hashicorp.cloud.iam.PrincipalType",
          "description": "principal_type is the type of principal (user, service principal, group, etc.)."
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the principal."
        },
        "name": {
          "type": "string",
          "description": "name is the name of the principal."
        },
        "email": {
          "type": "string",
          "description": "email is the email address of the principal."
        },
        "resource_name": {
          "type": "string",
          "title": "resource_name is the resource name for the principal"
        },
        "identity_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipal.IdentityType"
          },
          "description": "identity_types is an array of the identity types for a user."
        }
      },
      "description": "SearchPrincipalsResult is the result type contained the response of the\nSearchPrincipals rpc."
    },
    "hashicorp.cloud.iam.SendVerificationEmailResponse": {
      "type": "object",
      "title": "SendVerificationEmailRequest is response to SendVerificationEmail rpc and is currently empty"
    },
    "hashicorp.cloud.iam.ServicePrincipal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is an opaque, globally unique public identifier for the service principal."
        },
        "name": {
          "type": "string",
          "description": "name is the name for this service principal."
        },
        "resource_name": {
          "type": "string",
          "description": "resource_name is the resource name for this service principal."
        },
        "organization_id": {
          "type": "string",
          "description": "organization_id is the UUID identifier of the HCP organization that this\nservice principal belongs to."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is when the service principal was created."
        },
        "project_id": {
          "type": "string",
          "description": "project_id is the UUID identifier of the HCP project that this\nproject service principal belongs to."
        },
        "managed_by": {
          "type": "string",
          "x-nullable": true,
          "description": "managed_by is the optional resource_id of the resource which manages this service principal.\nThe presence of this field denotes that the service principal's lifecycle is not managed by\na user."
        }
      },
      "description": "ServicePrincipal is the HCP identity for a machine user."
    },
    "hashicorp.cloud.iam.ServicePrincipal.Key": {
      "type": "object",
      "properties": {
        "resource_name": {
          "type": "string",
          "description": "resource_name is the resource name for this service principal key."
        },
        "client_id": {
          "type": "string",
          "description": "client_id is the non-secret part of the credential set."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is when the Key resource was created."
        },
        "state": {
          "$ref": "#/definitions/hashicorp.cloud.iam.ServicePrincipal.Key.State",
          "description": "state is the state of the key."
        }
      },
      "description": "Key is a service principal key used to authenticate a service principal."
    },
    "hashicorp.cloud.iam.ServicePrincipal.Key.State": {
      "type": "string",
      "enum": [
        "UNSET",
        "CREATING",
        "ACTIVE",
        "DELETING"
      ],
      "default": "UNSET",
      "description": "State is the state of the key.\n\n - UNSET: UNSET is the default value.\nShould never be used at runtime for valid messages.\n - CREATING: CREATING is a key that's just been inserted in the DB, and its\nauthN credentials are still being prepared. Will transition to\nACTIVE on success.\n - ACTIVE: ACTIVE is a key that's been properly created and is ready to use.\n - DELETING: DELETING is a key that it's being deleted. It will be fully deleted\nonce its authN credentials will have been deleted from Auth0."
    },
    "hashicorp.cloud.iam.UpdateGroupMembersResponse": {
      "type": "object",
      "properties": {
        "operation_id": {
          "type": "string",
          "description": "operation_id should be waited on by clients as group member update is async\nonce feature flag hcp-server-side-tfc-sync-blocking is set to false."
        }
      }
    },
    "hashicorp.cloud.iam.UpdateGroupResponse": {
      "type": "object",
      "properties": {
        "operation_id": {
          "type": "string",
          "description": "operation_id should be waited on by clients as group update is async\nonce feature flag hcp-server-side-tfc-sync-blocking is set to false."
        }
      }
    },
    "hashicorp.cloud.iam.UpdateSSOConfigurationResponse": {
      "type": "object"
    },
    "hashicorp.cloud.iam.UpdateWebConsolePreferencesRequest": {
      "type": "object",
      "properties": {
        "web_portal_preferences": {
          "$ref": "#/definitions/hashicorp.cloud.iam.WebConsolePreferences",
          "title": "web_portal_preferences contains the user principal's updated web portal preferences"
        }
      },
      "description": "UpdateWebConsolePreferencesRequest is the request to update a user principal's web portal preferences on the IAM service."
    },
    "hashicorp.cloud.iam.UpdateWebConsolePreferencesResponse": {
      "type": "object",
      "properties": {
        "web_portal_preferences": {
          "$ref": "#/definitions/hashicorp.cloud.iam.WebConsolePreferences",
          "title": "web_portal_preferences are the user preferences for the HCP Web Portal"
        }
      },
      "description": "UpdateWebConsolePreferencesRequest is the request to update a user principal's web portal preferences on the IAM service."
    },
    "hashicorp.cloud.iam.UpdateWorkloadIdentityProviderResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/hashicorp.cloud.iam.WorkloadIdentityProvider",
          "description": "provider is the updated workload identity provider."
        }
      },
      "description": "UpdateWorkloadIdentityProviderResponse is the response message when updating\na workload identity provider."
    },
    "hashicorp.cloud.iam.UserPrincipal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the UUID public identifier for a user principal. It is safe\nto share this value with external users, and it should be how user principals\nare commonly identified also within our platform."
        },
        "email": {
          "type": "string",
          "description": "email is the unique email address of this user."
        },
        "full_name": {
          "type": "string",
          "description": "full_name is the name of the user, as provided by Auth0."
        },
        "identity_type": {
          "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipal.IdentityType",
          "description": "identity_type is the identity type for this user."
        },
        "identity_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipal.IdentityType"
          },
          "description": "identity_types is an array of the identity types for this user."
        },
        "subject": {
          "type": "string",
          "description": "subject is the user ID from the authenticating IDP (e.g. Hydra)."
        },
        "scim_synchronized": {
          "type": "boolean",
          "description": "scim_synchronized denotes the user principal was synchronized from a\ncustomer's IdP using SCIM."
        },
        "tfc_synchronized_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "description": "tfc_synchronized_at denotes the timestamp of when the user was synced to TFC when applicable."
        }
      },
      "description": "UserPrincipal represents a human user of our platform."
    },
    "hashicorp.cloud.iam.UserPrincipal.IdentityType": {
      "type": "string",
      "enum": [
        "UNSET",
        "SOCIAL_GITHUB",
        "EMAIL_PASSWORD",
        "SAMLP",
        "HASHICORP_SSO"
      ],
      "default": "UNSET",
      "description": "IdentityType contains the identity types for users.\n\n - UNSET: UNSET is the default value, should not be used.\n - SOCIAL_GITHUB: SOCIAL_GITHUB is the GitHub Social login provider.\n - EMAIL_PASSWORD: EMAIL_PASSWORD is the auth0 email/password database provider.\n - SAMLP: SAMLP is the auth0 SAML provider.\n - HASHICORP_SSO: HASHICORP_SSO is the HashiCorp SSO provider."
    },
    "hashicorp.cloud.iam.UserPrincipalResponse": {
      "type": "object",
      "properties": {
        "user_principal": {
          "$ref": "#/definitions/hashicorp.cloud.iam.UserPrincipal",
          "description": "user_principal is a user principal."
        }
      },
      "description": "UserPrincipalResponse contains the user data."
    },
    "hashicorp.cloud.iam.VerifyDomainOwnershipResponse": {
      "type": "object",
      "properties": {
        "verified": {
          "type": "boolean",
          "description": "verified indicates whether or not an organization's ownership/control of\na domain has been verified."
        },
        "reason": {
          "$ref": "#/definitions/hashicorp.cloud.iam.VerifyDomainOwnershipResponse.ReasonDomainOwnershipUnverified"
        },
        "domain": {
          "type": "string",
          "description": "domain is the domain for which the ownership has been verified."
        }
      },
      "description": "VerifyDomainOwnershipResponse is the response containing whether an\norganization's ownership/control of a domain has been verified."
    },
    "hashicorp.cloud.iam.VerifyDomainOwnershipResponse.ReasonDomainOwnershipUnverified": {
      "type": "string",
      "enum": [
        "UNSET",
        "NO_TXT_RECORD",
        "NO_SUCH_HOST",
        "ALREADY_IN_USE"
      ],
      "default": "UNSET",
      "description": "ReasonDomainOwnershipUnverified is the reason a request to verify an\norganizations's ownership/control of a domain failed.\n\n - UNSET: NOT_PROVIDED is the default value.\nIt should never be used when a verification failed.\n - NO_TXT_RECORD: NO_TXT_RECORD is the reason a verification failed\nwhen a domain does not contain proof of ownership.\n - NO_SUCH_HOST: NO_SUCH_HOST is the reason a verification failed when the\ngiven domain does not exist.\n - ALREADY_IN_USE: ALREADY_IN_USE is the reason a verfication failed when the\ngiven domain is already in use by another organization."
    },
    "hashicorp.cloud.iam.WebConsolePreferences": {
      "type": "object",
      "description": "WebConsolePreferences represents the user preferences for the web portal (fka web console)."
    },
    "hashicorp.cloud.iam.WorkloadIdentityProvider": {
      "type": "object",
      "properties": {
        "resource_id": {
          "type": "string",
          "description": "resource_id is the resource identifier for this workload identity\nprovider."
        },
        "resource_name": {
          "type": "string",
          "description": "resource_name is the resource name for this workload identity\nprovider."
        },
        "description": {
          "type": "string",
          "description": "description is an optional description for the workload identity provider."
        },
        "conditional_access": {
          "type": "string",
          "description": "conditional_access is a go-bexpr string that is evaluated when exchanging\ntokens. It restricts which upstream identities are allowed to access the\nservice principal."
        },
        "aws_config": {
          "$ref": "#/definitions/hashicorp.cloud.iam.AWSWorkloadIdentityProviderConfig"
        },
        "oidc_config": {
          "$ref": "#/definitions/hashicorp.cloud.iam.OIDCWorkloadIdentityProviderConfig"
        },
        "system_managed": {
          "type": "boolean",
          "description": "system_managed indicates that the provider is not editable or deletable\nby the user."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "description": "created_at is when the workload identity provider was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "description": "updated_at is when the workload identity provider was last updated."
        }
      },
      "description": "WorkloadIdentityProvider is an identity provider that federates identity to a\nservice principal."
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
