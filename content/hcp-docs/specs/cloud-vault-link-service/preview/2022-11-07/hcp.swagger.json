{
  "swagger": "2.0",
  "info": {
    "title": "HashiCorp Cloud Vault Link",
    "description": "API for managing connection to HashiCorp Vault Self-Managed clusters connected to HCP through HCP Link.",
    "version": "20221107"
  },
  "tags": [
    {
      "name": "VaultLinkService"
    }
  ],
  "host": "api.cloud.hashicorp.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/vault-link/2022-11-07/organizations/{location.organization_id}/projects/{location.project_id}/authenticate-user/{cluster_id}": {
      "post": {
        "operationId": "AuthenticateUserToCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.AuthenticateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "region": {
                      "$ref": "#/definitions/hashicorp.cloud.location.Region",
                      "description": "region is the region that the resource is located in. It is\noptional if the object being referenced is a global object."
                    }
                  },
                  "description": "Location represents a target for an operation in HCP."
                },
                "auth_type": {
                  "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.AuthenticateUserRequest.AuthType"
                },
                "mount_path": {
                  "type": "string",
                  "title": "Path where the auth mount is located"
                },
                "username": {
                  "type": "string",
                  "title": "Username is used for LDAP/USERPASS"
                },
                "credential": {
                  "type": "string",
                  "description": "For LDAP/USERPASS this credential is a password. For TOKEN, this is a token."
                },
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "VaultLinkService"
        ]
      }
    },
    "/vault-link/2022-11-07/organizations/{location.organization_id}/projects/{location.project_id}/link/clusters/policy/{cluster_id}": {
      "get": {
        "operationId": "GetLinkedClusterPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.GetLinkedClusterPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "region is the cloud region (\"us-west1\", \"us-east1\")",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VaultLinkService"
        ]
      }
    },
    "/vault-link/2022-11-07/organizations/{location.organization_id}/projects/{location.project_id}/link/clusters/{cluster_id}": {
      "get": {
        "operationId": "GetLinkedCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.GetLinkedClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "region is the cloud region (\"us-west1\", \"us-east1\")",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VaultLinkService"
        ]
      }
    },
    "/vault-link/2022-11-07/organizations/{location.organization_id}/projects/{location.project_id}/revoke-credentials/{cluster_id}": {
      "delete": {
        "operationId": "RevokeLinkedClusterCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.RevokeLinkedClusterCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "region is the cloud region (\"us-west1\", \"us-east1\")",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VaultLinkService"
        ]
      }
    },
    "/vault-link/2022-11-07/organizations/{location.organization_id}/projects/{location.project_id}/rotate-credentials/{cluster_id}": {
      "post": {
        "operationId": "RotateLinkedClusterCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.RotateLinkedClusterCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "region is the cloud region (\"us-west1\", \"us-east1\")",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VaultLinkService"
        ]
      }
    },
    "/vault-link/2022-11-07/organizations/{location.organization_id}/projects/{location.project_id}/{cluster_id}/enable-dr": {
      "post": {
        "summary": "* This is a POC method and should not be used in production *",
        "operationId": "EnableDR",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.ApiResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "properties": {
                    "region": {
                      "$ref": "#/definitions/hashicorp.cloud.location.Region",
                      "description": "region is the region that the resource is located in. It is\noptional if the object being referenced is a global object."
                    }
                  },
                  "description": "Location represents a target for an operation in HCP."
                }
              }
            }
          }
        ],
        "tags": [
          "VaultLinkService"
        ]
      }
    },
    "/vault-link/2022-11-07/organizations/{location.organization_id}/projects/{location.project_id}/{cluster_id}/inspect-router": {
      "get": {
        "summary": "* This is a POC method and should not be used in production *",
        "operationId": "InspectRouter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.InspectRouterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "region is the cloud region (\"us-west1\", \"us-east1\")",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VaultLinkService"
        ]
      }
    },
    "/vault-link/2022-11-07/organizations/{location.organization_id}/projects/{location.project_id}/{cluster_id}/policies": {
      "get": {
        "summary": "* This is a POC method and should not be used in production *",
        "operationId": "GetVaultPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.VaultPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.region.provider",
            "description": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.region.region",
            "description": "region is the cloud region (\"us-west1\", \"us-east1\")",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VaultLinkService"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "hashicorp.cloud.location.Location": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "organization_id is the id of the organization."
        },
        "project_id": {
          "type": "string",
          "description": "project_id is the projects id."
        },
        "region": {
          "$ref": "#/definitions/hashicorp.cloud.location.Region",
          "description": "region is the region that the resource is located in. It is\noptional if the object being referenced is a global object."
        }
      },
      "description": "Location represents a target for an operation in HCP."
    },
    "hashicorp.cloud.location.Region": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "title": "provider is the named cloud provider (\"aws\", \"gcp\", \"azure\")"
        },
        "region": {
          "type": "string",
          "title": "region is the cloud region (\"us-west1\", \"us-east1\")"
        }
      },
      "description": "Region identifies a Cloud data-plane region."
    },
    "hashicorp.cloud.vault_link_20221107.ApiResponse": {
      "type": "object"
    },
    "hashicorp.cloud.vault_link_20221107.AuthenticateUserRequest.AuthType": {
      "type": "string",
      "enum": [
        "TOKEN",
        "USERPASS",
        "LDAP"
      ],
      "default": "TOKEN"
    },
    "hashicorp.cloud.vault_link_20221107.AuthenticateUserResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "status_code": {
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.GetLinkedClusterPolicyResponse": {
      "type": "object",
      "properties": {
        "policy": {
          "type": "string",
          "title": "policy refers to the HCL formatted policy"
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.GetLinkedClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.LinkedCluster"
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.InspectRouterResponse": {
      "type": "object",
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.RoutePath"
          }
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.LinkedCluster": {
      "type": "object",
      "properties": {
        "internal_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location"
        },
        "state": {
          "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.LinkedCluster.State"
        },
        "linked_at": {
          "type": "string",
          "format": "date-time"
        },
        "current_version": {
          "type": "string"
        },
        "node_statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.LinkedClusterNode"
          }
        },
        "storage_type": {
          "type": "string"
        },
        "autopilot_enabled": {
          "type": "boolean"
        },
        "ha_enabled": {
          "type": "boolean"
        },
        "is_sealed": {
          "type": "boolean",
          "description": "we don't support this since we cannot determine when a cluster is completely sealed\ndue to not having access to the total number of nodes in a cluster when all connected nodes\nare sealed, including the active one."
        },
        "raft_quorum_status": {
          "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.RaftQuorumStatus"
        },
        "cluster_name": {
          "type": "string",
          "description": "This is the self-managed cluster name and it differs from the HCP's internal id and HCP's slug id because\nit is configured directly in the self-managed cluster."
        },
        "credentials_revoked": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.LinkedCluster.State": {
      "type": "string",
      "enum": [
        "LINKED_CLUSTER_STATE_INVALID",
        "LINKING",
        "LINKED",
        "UNLINKING",
        "UNLINKED"
      ],
      "default": "LINKED_CLUSTER_STATE_INVALID"
    },
    "hashicorp.cloud.vault_link_20221107.LinkedClusterNode": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "node_id is the node identification."
        },
        "node_os": {
          "type": "string",
          "description": "node_os is the lower-case name of the operating system platform the client is\nrunning on (e.g. ubuntu)."
        },
        "node_os_version": {
          "type": "string",
          "description": "node_os_version is the lower-case name of the operating system platform version the client is\nrunning on (e.g. 22.04)."
        },
        "node_binary_architecture": {
          "type": "string",
          "description": "node_binary_architecture is the lower-case architecture of the client binary\n(e.g. amd64, arm, ...)."
        },
        "status_version": {
          "type": "integer",
          "format": "int64",
          "description": "status_version is the version of the status message format. To ensure\nthat the version is not omitted by accident the initial version is 1."
        },
        "node_initialized": {
          "type": "boolean",
          "description": "node_initialized indicates if the node has been initialized."
        },
        "node_sealed": {
          "type": "boolean",
          "description": "node_sealed indicates if the node is sealed."
        },
        "node_type": {
          "type": "string",
          "description": "node_type indicates the node type."
        },
        "has_security_flaws": {
          "type": "boolean",
          "description": "has_security_flaw will be true if the current version has a security flaw."
        },
        "current_version": {
          "type": "string",
          "description": "current_version is the node's current version in semantic version format."
        },
        "recommended_version": {
          "type": "string",
          "description": "recommended_version is the version the product should ideally be updated to."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.LinkedClusterNode.VersionStatus",
          "description": "status is the status of the current version. The status may help to\ndetermine the urgency of the update."
        },
        "alternative_versions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "alternative_versions is a list of versions that should also be considered for\nan update as they might come with additional improvements and features."
        },
        "hostname": {
          "type": "string"
        },
        "leader_status": {
          "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.LinkedClusterNode.LeaderStatus"
        },
        "log_level": {
          "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.LinkedClusterNode.LogLevel"
        },
        "storage_type": {
          "type": "string"
        },
        "node_state": {
          "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.LinkedClusterNode.State"
        },
        "internal_id": {
          "type": "string"
        },
        "linked_cluster_internal_id": {
          "type": "string"
        },
        "last_reported_at": {
          "type": "string",
          "format": "date-time"
        },
        "current_report": {
          "type": "string",
          "format": "date-time"
        },
        "listener_addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.LinkedClusterNode.LeaderStatus": {
      "type": "string",
      "enum": [
        "LEADER_STATUS_CLUSTER_STATE_INVALID",
        "LEADER",
        "FOLLOWER",
        "ACTIVE",
        "STANDBY",
        "PERF_STANDBY"
      ],
      "default": "LEADER_STATUS_CLUSTER_STATE_INVALID",
      "title": "- LEADER: Deprecated values\n - ACTIVE: Valid values"
    },
    "hashicorp.cloud.vault_link_20221107.LinkedClusterNode.LogLevel": {
      "type": "string",
      "enum": [
        "LOG_LEVEL_CLUSTER_STATE_INVALID",
        "TRACE",
        "DEBUG",
        "INFO",
        "WARN",
        "ERROR"
      ],
      "default": "LOG_LEVEL_CLUSTER_STATE_INVALID"
    },
    "hashicorp.cloud.vault_link_20221107.LinkedClusterNode.State": {
      "type": "string",
      "enum": [
        "LINKED_CLUSTER_STATE_INVALID",
        "LINKING",
        "LINKED",
        "UNLINKING",
        "UNLINKED"
      ],
      "default": "LINKED_CLUSTER_STATE_INVALID"
    },
    "hashicorp.cloud.vault_link_20221107.LinkedClusterNode.VersionStatus": {
      "type": "string",
      "enum": [
        "LINKED_CLUSTER_NODE_VERSION_STATUS_INVALID",
        "VERSION_UP_TO_DATE",
        "UPGRADE_AVAILABLE",
        "UPGRADE_RECOMMENDED",
        "UPGRADE_REQUIRED"
      ],
      "default": "LINKED_CLUSTER_NODE_VERSION_STATUS_INVALID",
      "description": " - VERSION_UP_TO_DATE: VERSION_UP_TO_DATE is used when node is running the latest Vault Version.\n - UPGRADE_AVAILABLE: UPGRADE_AVAILABLE is used when node is running the latest minor release of a Vault Version, but there is a new major Vault version available for upgrade.\n - UPGRADE_RECOMMENDED: UPGRADE_RECOMMENDED is used when node is running an outdated but still supported version, but there is a new minor or major Vault versions available for upgrade.\n - UPGRADE_REQUIRED: UPGRADE_REQUIRED is used when node is running a no longer supported version and there are minor and major versions available for upgrade."
    },
    "hashicorp.cloud.vault_link_20221107.RaftQuorumStatus": {
      "type": "object",
      "properties": {
        "is_healthy": {
          "type": "boolean"
        },
        "warning": {
          "type": "string"
        },
        "quorum_number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.RevokeLinkedClusterCredentialsResponse": {
      "type": "object"
    },
    "hashicorp.cloud.vault_link_20221107.RotateLinkedClusterCredentialsResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/hashicorp.cloud.vault_link_20221107.LinkedCluster"
        },
        "resource_id": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.RoutePath": {
      "type": "object",
      "properties": {
        "accessor": {
          "type": "string"
        },
        "mount_namespace": {
          "type": "string"
        },
        "mount_path": {
          "type": "string"
        },
        "storage_prefix": {
          "type": "string"
        },
        "tainted": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        },
        "mount_type": {
          "type": "string"
        }
      }
    },
    "hashicorp.cloud.vault_link_20221107.VaultPolicyResponse": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
