{
  "swagger": "2.0",
  "info": {
    "title": "HashiCorp Cloud Platform Packer Artifact Registry",
    "description": "APIs for managing Packer artifacts.",
    "version": "2023-01-01"
  },
  "tags": [
    {
      "name": "PackerService"
    }
  ],
  "host": "api.cloud.hashicorp.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/_search/external_artifact": {
      "post": {
        "summary": "=== SEARCH ===\nSearch for artifacts using external (cloud) artifact identifiers, platform, and region, and returns all relevant metadata\nin a single, efficient API call.",
        "operationId": "PackerService_SearchExternalArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.SearchExternalArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.SearchExternalArtifactRequestBody"
            }
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets": {
      "get": {
        "summary": "Lists all existing buckets in the HCP Packer registry.",
        "operationId": "PackerService_ListBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ListBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.\n\nThe fields should be immutable, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.\n\nExample: order_by=name,created_at asc\nIn that case, 'name' will get the default 'ascending' order.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "put": {
        "summary": "Creates a bucket in the HCP Packer registry.",
        "operationId": "PackerService_CreateBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateBucketBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}": {
      "get": {
        "summary": "Retrieves an existing bucket.",
        "operationId": "PackerService_GetBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.GetBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deletes the bucket and all its information, such as versions, builds and artifacts.",
        "operationId": "PackerService_DeleteBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.DeleteBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "Updates the bucket's information.",
        "operationId": "PackerService_UpdateBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateBucketBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/ancestry": {
      "get": {
        "summary": "Lists the ancestry relationships for the bucket. This includes direct\nsource bucket (parents) and downstream artifacts built directly from the\nbucket (children).",
        "operationId": "PackerService_ListBucketAncestry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ListBucketAncestryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "The type of ancestry relations to list.\nType 'parents' lists all the direct source artifacts for this artifact bucket.\nType 'children' lists all of the child artifacts built directly from this artifact bucket.\nIf unset, defaults to listing both parent and child relationships for the artifact bucket.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ANCESTRY_TYPE_UNSET",
              "ANCESTRY_TYPE_PARENTS",
              "ANCESTRY_TYPE_CHILDREN"
            ],
            "default": "ANCESTRY_TYPE_UNSET"
          },
          {
            "name": "channel_name",
            "description": "An artifact channel in the artifact bucket associated with the request.\nThis property filters the results to children whose parent version was\nassigned to this channel when the children were built.\nIf not specified, the endpoint returns all children built from any version in this artifact bucket.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version_fingerprint",
            "description": "Fingerprint of a version that HCP Packer uses to list that version's parents.\nAll parents are the parent artifacts Packer used to build this version.\nIf not specified, the endpoint returns the parents of the artifact bucket's latest version.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/channels": {
      "get": {
        "summary": "Lists all channels of a given bucket.",
        "operationId": "PackerService_ListChannels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ListChannelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "post": {
        "summary": "Creates a channel either empty or assigned to a version.",
        "operationId": "PackerService_CreateChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateChannelBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/channels/{channel_name}": {
      "get": {
        "summary": "Retrieves a channel with the version that it is currently assigned if any.",
        "operationId": "PackerService_GetChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.GetChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deletes a channel.",
        "operationId": "PackerService_DeleteChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.DeleteChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "Updates the channel assignment and/or restriction.",
        "operationId": "PackerService_UpdateChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateChannelBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/channels/{channel_name}/history": {
      "get": {
        "summary": "Lists a channel assignement history.",
        "operationId": "PackerService_ListChannelAssignmentHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ListChannelAssignmentHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/versions": {
      "get": {
        "summary": "Lists every existing version of a bucket.",
        "operationId": "PackerService_ListVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ListVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.\n\nThe fields should be immutable, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.\n\nExample: order_by=name,created_at asc\nIn that case, 'name' will get the default 'ascending' order.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "post": {
        "summary": "Creates an empty version to be written to.\nThis API is called at the beginning of a new Packer build and does not\ncreate individual builds for the version.",
        "operationId": "PackerService_CreateVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateVersionBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/versions/{fingerprint}": {
      "get": {
        "summary": "Retrieves the version using the version fingerprint.",
        "operationId": "PackerService_GetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.GetVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deletes the version and all its information, such as its builds and artifacts.",
        "operationId": "PackerService_DeleteVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.DeleteVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rollback_channels",
            "description": "When set to true, any user-created channels will automatically rolleback\nto the last valid version they were assigned to.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "This API can be used to revoke, restore, or complete a version.\nWhen a version is revoked, all its descendants will automatically get\nrevoked unless 'skip_descendants_revocation' is set.\nDescendants will get revoked asynchronously to the request.\nRevoked versions cannot be updated unless restored.",
        "operationId": "PackerService_UpdateVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateVersionBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/versions/{fingerprint}/builds": {
      "get": {
        "summary": "Lists every existing build and its artifacts for a version.",
        "operationId": "PackerService_ListBuilds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ListBuildsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.\n\nThe fields should be immutable, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.\n\nExample: order_by=name,created_at asc\nIn that case, 'name' will get the default 'ascending' order.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "post": {
        "summary": "Creates a build in the provided version. It is called once for each\n\"build source\" in a Packer build run.\nThe request will error if the build for a given platform already exists.",
        "operationId": "PackerService_CreateBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateBuildResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateBuildBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/versions/{fingerprint}/builds/{build_id}": {
      "get": {
        "summary": "Retrieves a build with its list of artifacts.",
        "operationId": "PackerService_GetBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.GetBuildResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deletes a build in the provided version.",
        "operationId": "PackerService_DeleteBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.DeleteBuildResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "Updates the build. This may be most often used for modifying the status of a currently running build.",
        "operationId": "PackerService_UpdateBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateBuildResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateBuildBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/versions/{fingerprint}/builds/{build_id}/sboms": {
      "get": {
        "summary": "Lists every existing sbom for a build",
        "operationId": "PackerService_ListSboms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ListSbomsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "put": {
        "summary": "Stores a zstd compressed SBOM and associates it with a build",
        "operationId": "PackerService_UploadSbom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UploadSbomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UploadSbomBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/buckets/{bucket_name}/versions/{fingerprint}/builds/{build_id}/sboms/{sbom_name}": {
      "get": {
        "summary": "Retrieves the stored SBOM, generating a presigned URL with AWS s3 to retrieve the file",
        "operationId": "PackerService_GetSbom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.GetSbomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sbom_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/registry": {
      "get": {
        "summary": "Retrieves the HCP Packer registry.",
        "operationId": "PackerService_GetRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.GetRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deletes the HCP Packer registry and any associated resources from the database.",
        "operationId": "PackerService_DeleteRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.DeleteRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "put": {
        "summary": "Creates the HCP Packer registry and starts billing for it.",
        "operationId": "PackerService_CreateRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.CreateRegistryBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "Updates the feature tier _OR_ activates/deactivates the HCP Packer registry.\nDeactivating a registry will stop any additional billing for the resource.",
        "operationId": "PackerService_UpdateRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.UpdateRegistryBody"
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/runtasks/hmac": {
      "patch": {
        "summary": "Regenerates the HMAC key used to sign requests from Terraform Cloud to HCP Packer run tasks.",
        "operationId": "PackerService_RegenerateTFCRunTaskHmacKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RegenerateTFCRunTaskHmacKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2023-01-01/organizations/{location.organization_id}/projects/{location.project_id}/runtasks/{task_type}": {
      "get": {
        "summary": "Gets the HCP Packer registry API URL and HMAC key to integrate with Terraform Cloud as a Run Task.",
        "operationId": "PackerService_GetRegistryTFCRunTaskAPI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer_20230101.GetRegistryTFCRunTaskAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_type",
            "description": "The HCP Packer Terraform Cloud run task type.\nCurrently, the only existing type is `validation`.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "google.protobuf.NullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "hashicorp.cloud.common.PaginationRequest": {
      "type": "object",
      "properties": {
        "page_size": {
          "type": "integer",
          "format": "int64",
          "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted."
        },
        "next_page_token": {
          "type": "string",
          "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set."
        },
        "previous_page_token": {
          "type": "string",
          "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set."
        }
      },
      "description": "PaginationRequest are the parameters for a paginated list request."
    },
    "hashicorp.cloud.common.PaginationResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "type": "string",
          "description": "This token allows you to get the next page of results for list requests.\nIf the number of results is larger than `page_size`, use the\n`next_page_token` as a value for the query parameter `next_page_token` in\nthe next request. The value will become empty when there are no more pages."
        },
        "previous_page_token": {
          "type": "string",
          "description": "This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than `page_size`, use the\n`previous_page_token` as a value for the query parameter\n`previous_page_token` in the next request. The value will become empty when\nthere are no more pages."
        }
      },
      "description": "PaginationResponse is the response holding the page tokens for a paginated\nlist response."
    },
    "hashicorp.cloud.common.SortingRequest": {
      "type": "object",
      "properties": {
        "order_by": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.\n\nThe fields should be immutable, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.\n\nExample: order_by=name,created_at asc\nIn that case, 'name' will get the default 'ascending' order."
        }
      },
      "description": "SortingRequest are the parameters for a sorted list request."
    },
    "hashicorp.cloud.location.Link": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "type is the unique type of the resource. Each service publishes a\nunique set of types. The type value is recommended to be formatted\nin \"\u003corg\u003e.\u003ctype\u003e\" such as \"hashicorp.hvn\". This is to prevent conflicts\nin the future, but any string value will work."
        },
        "id": {
          "type": "string",
          "description": "id is the identifier for this resource."
        },
        "uuid": {
          "type": "string",
          "description": "uuid is the unique UUID for this resource."
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location",
          "description": "location is the location where this resource is."
        },
        "description": {
          "type": "string",
          "description": "description is a human-friendly description for this link. This is\nused primarily for informational purposes such as error messages."
        }
      },
      "description": "Link is used to uniquely reference any resource within HashiCorp Cloud.\nThis can be conceptually considered a \"foreign key\"."
    },
    "hashicorp.cloud.location.Location": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "organization_id is the id of the organization."
        },
        "project_id": {
          "type": "string",
          "description": "project_id is the projects id."
        }
      },
      "description": "Location represents a target for an operation in HCP."
    },
    "hashicorp.cloud.operation.Operation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the unique ID for this operation used in other RPC calls.\nThis ID is only guaranteed to be unique within the region that\nthe operation is running in."
        },
        "state": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation.State",
          "description": "state is the current state of the operation. This is a simple tri-state:\nPENDING means the operation is created but not yet started, RUNNING means\nthe operation is currently running (though it may be very long-running),\nand DONE means the operation is complete whether successfully or not."
        },
        "error": {
          "$ref": "#/definitions/google.rpc.Status",
          "description": "error is the error that occurred in the operation."
        },
        "response": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "response is the result of the operation. See the documentation for the API\ncall creating the operation to understand what the value of this is."
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location",
          "description": "Location is location of the resource that this operation belongs to."
        },
        "link": {
          "$ref": "#/definitions/hashicorp.cloud.location.Link",
          "description": "Link is the resource link the operation is associated with."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "CreatedAt is the timestamp of when the operation was first created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "UpdatedAt is the timestamp of when the operation was last updated."
        }
      },
      "description": "Operation represents a single operation."
    },
    "hashicorp.cloud.operation.Operation.State": {
      "type": "string",
      "enum": [
        "PENDING",
        "RUNNING",
        "DONE",
        "QUEUED"
      ],
      "default": "PENDING",
      "description": "State is one of the states that an Operation can be in.\n\nThe states are purposely coarse grained to make it easy to understand\nthe operation state machine: pending =\u003e running =\u003e done. Or pending =\u003e\nqueued =\u003e running =\u003e done. No other state transitions are possible.\nSuccess/failure can be determined based on the result oneof."
    },
    "hashicorp.cloud.packer_20230101.AncestryStatus": {
      "type": "string",
      "enum": [
        "UNDETERMINED",
        "UP_TO_DATE",
        "OUT_OF_DATE"
      ],
      "default": "UNDETERMINED",
      "description": " - UNDETERMINED: HCP Packer cannot determine whether the child artifact is out of date.\nThis status occurs when the parent version was not assigned to a channel\nwhen Packer built the artifact, the channel no longer exists in the bucket,\nor HCP Packer is not tracking the parent.\n - UP_TO_DATE: The child artifact is built from the version currently assigned to the channel.\n - OUT_OF_DATE: The child artifact is built from a different version than the one currently\nassigned to the channel."
    },
    "hashicorp.cloud.packer_20230101.Artifact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier (ULID)."
        },
        "external_identifier": {
          "type": "string",
          "description": "ID or URL of the remote artifact as given by a build.\nFor example, ami-12345."
        },
        "region": {
          "type": "string",
          "description": "External region as provided by `packer build`. For example, \"ap-east-1\"."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Created datetime."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ArtifactCreateBody": {
      "type": "object",
      "properties": {
        "external_identifier": {
          "type": "string",
          "description": "ID or URL of the remote cloud artifact as given by a build."
        },
        "region": {
          "type": "string",
          "description": "Cloud-specific region as provided by `packer build`. For example, \"ap-east-1\"."
        }
      },
      "description": "This message is used for build/create calls; it removes elements from the\nArtifact message that the user cannot set."
    },
    "hashicorp.cloud.packer_20230101.Bucket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier (ULID)."
        },
        "name": {
          "type": "string",
          "description": "Human-readable name for the bucket."
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location"
        },
        "latest_version": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Version",
          "description": "The bucket's most recent valid version, same assigned to the latest channel."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Created datetime."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated datetime."
        },
        "platforms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of the cloud providers or other platforms that are included in the\nlatest complete version. e.g aws, gcp, or azure."
        },
        "description": {
          "type": "string",
          "description": "Short description of what this bucket is for."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your bucket."
        },
        "version_count": {
          "type": "string",
          "format": "int64",
          "description": "Total number of versions in this bucket."
        },
        "parents": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.BucketParents",
          "description": "Information about this bucket's parents. Parents are the base artifacts\nOSS Packer used for building the latest complete version in this bucket."
        },
        "children": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.BucketChildren",
          "description": "Information about this bucket's children. Children are buckets that used\nany version of this bucket as the base artifact for their latest complete\nversion."
        },
        "resource_name": {
          "type": "string",
          "description": "The human-readable identifier in the platform. For example, `packer/project/\u003cproject-id\u003e/bucket/\u003cbucket-name\u003e`."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.BucketAncestry": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.AncestryStatus",
          "description": "The status of the relationship between the parent and child buckets."
        },
        "parent": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Parent",
          "description": "The parent bucket and version that relates to the child bucket's\nlatest version."
        },
        "child": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Child",
          "description": "The child bucket and the version in that bucket that relates tom the parent."
        }
      },
      "description": "The parent-child relationship between two buckets."
    },
    "hashicorp.cloud.packer_20230101.BucketAncestryType": {
      "type": "string",
      "enum": [
        "ANCESTRY_TYPE_UNSET",
        "ANCESTRY_TYPE_PARENTS",
        "ANCESTRY_TYPE_CHILDREN"
      ],
      "default": "ANCESTRY_TYPE_UNSET"
    },
    "hashicorp.cloud.packer_20230101.BucketChildren": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "The URL to retrieve the list of ancestry relationships between this\nbucket and its direct children."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.AncestryStatus",
          "description": "The overall ancestry status for all child versions.\nIf at least one child is out of date, HCP Packer reports the overall\nstatus as 'OUT_OF_DATE'."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.BucketParents": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "The URL to retrieve the list of ancestry relationships between this\nbucket and its parents."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.AncestryStatus",
          "description": "The overall status for all parent versions.\nIf at least one parent is out of date, HCP Packer reports the  overall\nstatus as 'OUT_OF_DATE'."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.Build": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier (ULID)."
        },
        "version_id": {
          "type": "string",
          "description": "Unique identifier of the version associated with this build; this was\ncreated and set by the HCP Packer registry when the version was created."
        },
        "component_type": {
          "type": "string",
          "description": "Internal Packer name for the builder or post-processor component used to\nbuild this. For example, \"amazon-ebs\" or \"azure-arm\"."
        },
        "packer_run_uuid": {
          "type": "string",
          "description": "The UUID specific to this call to Packer build. If you use the manifest\npost-processor, this UUID will match the UUID present there."
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Artifact"
          },
          "description": "List of artifacts associated with this build."
        },
        "platform": {
          "type": "string",
          "description": "Platform that this build produced artifacts for.\nFor example, AWS, GCP, or Azure."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.BuildStatus",
          "description": "Current state of the build."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created datetime"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Last updated datetime"
        },
        "source_external_identifier": {
          "type": "string",
          "description": "ID or URL of the remote cloud source artifact that HCP Packer uses to\ntrack artifact dependencies for build pipelines."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your build."
        },
        "metadata": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.BuildMetadata",
          "description": "Information set by Packer about the build process of the artifact.\nBuilds are returned on many endpoints, but Build Metadata is only returned for Build endpoints and GetVersion."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.BuildMetadata": {
      "type": "object",
      "properties": {
        "packer": {
          "type": "object",
          "description": "Information about the packer version, plugins, and OS."
        },
        "cicd": {
          "type": "object",
          "description": "Information about the CICD pipeline."
        },
        "vcs": {
          "type": "object",
          "description": "Information about the version control system."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.BuildStatus": {
      "type": "string",
      "enum": [
        "BUILD_UNSET",
        "BUILD_RUNNING",
        "BUILD_DONE",
        "BUILD_CANCELLED",
        "BUILD_FAILED"
      ],
      "default": "BUILD_UNSET",
      "description": " - BUILD_UNSET: UNSET is a sentinel zero value so that an uninitialized value can be\ndetected.\n - BUILD_RUNNING: Running means the `packer build` is currently running.\n - BUILD_DONE: Done means the `packer build` has finished successfully.\n - BUILD_CANCELLED: Cancelled means the `packer build` was cancelled by a user.\n - BUILD_FAILED: Failed means the `packer build` failed and therefore artifact creation failed."
    },
    "hashicorp.cloud.packer_20230101.Channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "// Unique identifier (ULID)."
        },
        "name": {
          "type": "string",
          "description": "Human-readable name for the channel."
        },
        "bucket_name": {
          "type": "string",
          "description": "Human-readable name for the bucket this channel belongs to."
        },
        "author_id": {
          "type": "string",
          "description": "User who last updated the channel."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Created datetime."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated datetime."
        },
        "version": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Version",
          "description": "Version the channel is pointing to."
        },
        "managed": {
          "type": "boolean",
          "description": "If the channel is managed by HCP Packer (such as the latest channel)."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this channel's access is restricted to users with write permission\nin the HCP Packer registry."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ChannelAssignment": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Version",
          "description": "The assigned version."
        },
        "author_id": {
          "type": "string",
          "description": "The user who assigned this version."
        },
        "assigned_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the version assignment happened."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ChannelVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The currently assigned version's ULID."
        },
        "name": {
          "type": "string",
          "description": "The currently assigned version's name."
        },
        "fingerprint": {
          "type": "string",
          "description": "The currently assigned version's build fingerprint."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.Child": {
      "type": "object",
      "properties": {
        "bucket_name": {
          "type": "string",
          "description": "The child bucket's name."
        },
        "version_name": {
          "type": "string",
          "description": "The child version name."
        },
        "version_id": {
          "type": "string",
          "description": "The child version ULID."
        },
        "version_fingerprint": {
          "type": "string",
          "description": "The child version build fingerprint."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.CreateBucketBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable name for the bucket."
        },
        "description": {
          "type": "string",
          "description": "A short description of what this bucket's artifacts are for."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your bucket."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.CreateBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Bucket"
        }
      },
      "title": "=== BUCKET ==="
    },
    "hashicorp.cloud.packer_20230101.CreateBuildBody": {
      "type": "object",
      "properties": {
        "component_type": {
          "type": "string",
          "title": "Internal Packer name for the builder or post-processor component used to\nbuild this. For example, \"amazon-ebs\" or \"azure-arm\""
        },
        "packer_run_uuid": {
          "type": "string",
          "description": "The UUID specific to this call to Packer build. If you use the manifest\npost-processor, this UUID will match the UUID present there."
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ArtifactCreateBody"
          },
          "description": "List of artifacts associated with this build."
        },
        "platform": {
          "type": "string",
          "description": "The platform that this build produced artifacts for.\nFor example, AWS, GCP, or Azure."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.BuildStatus",
          "description": "Status of the build. The status can be RUNNING, DONE, CANCELLED, FAILED,\nor UNSET."
        },
        "source_external_identifier": {
          "type": "string",
          "description": "The ID or URL of the remote cloud source artifact. Used for tracking artifact\ndependencies for build pipelines."
        },
        "parent_version_id": {
          "type": "string",
          "description": "The ID of the parent version associated with the `source_external_identifier`."
        },
        "parent_channel_id": {
          "type": "string",
          "description": "The ID of the channel that was used to fetch the parent_version_id.\nWhen the parent_channel_id is set, parent_version_id should also be set."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your build."
        }
      },
      "description": "This message is used for build/create calls; it removes elements from the\nBuild message that the user cannot set."
    },
    "hashicorp.cloud.packer_20230101.CreateBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Build"
        }
      },
      "title": "=== BUILD \u0026 ARTIFACT ==="
    },
    "hashicorp.cloud.packer_20230101.CreateChannelBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable name for the channel."
        },
        "version_fingerprint": {
          "type": "string",
          "description": "Fingerprint of the version. The fingerprint is set by Packer when you\ncall `packer build`."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this channel's access is restricted to users with write permission in the HCP Packer registry."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.CreateChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Channel"
        }
      },
      "title": "=== CHANNEL ==="
    },
    "hashicorp.cloud.packer_20230101.CreateRegistryBody": {
      "type": "object",
      "properties": {
        "feature_tier": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RegistryConfig.Tier"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.CreateRegistryResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Registry"
        },
        "operation": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.CreateVersionBody": {
      "type": "object",
      "properties": {
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the version set by Packer when you call `packer build`.\nRefer to the Packer documentation for more information on how this value is set.\nThe fingerprint can be used as an identifier for the version.\nA valid fingerprint is 1-40 characters long, begins and ends with a letter or number,\nand contains only ASCII letters, numbers, hyphens, dots, and underscores."
        },
        "template_type": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.TemplateType",
          "description": "The type of Packer configuration template used to build this version."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.CreateVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Version"
        }
      },
      "title": "=== VERSION ==="
    },
    "hashicorp.cloud.packer_20230101.DeleteBucketResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer_20230101.DeleteBuildResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer_20230101.DeleteChannelResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer_20230101.DeleteRegistryResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Registry"
        },
        "operation": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.DeleteVersionResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer_20230101.ExternalArtifact": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ExternalArtifactBucket"
        },
        "version": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ExternalArtifactVersion"
        },
        "build": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Build"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ExternalArtifactBucket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier (ULID)."
        },
        "name": {
          "type": "string",
          "description": "Human-readable name for the bucket."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your bucket."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ExternalArtifactVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier (ULID)."
        },
        "name": {
          "type": "string",
          "description": "Human-readable name for the bucket that this version is associated with."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.VersionStatus",
          "description": "Current state of the version."
        },
        "author_id": {
          "type": "string",
          "description": "Name of the author who created this version."
        },
        "fingerprint": {
          "type": "string",
          "title": "Fingerprint of the version"
        },
        "revoke_at": {
          "type": "string",
          "format": "date-time",
          "description": "Datetime from when the version is revoked an no longer trusted to be secure."
        },
        "revocation_message": {
          "type": "string",
          "description": "Short explanation of why this version was revoked."
        },
        "revocation_author": {
          "type": "string",
          "description": "Who revoked this version. For human authors (e.g. HCP Portal) this will be\nan email address. For machine authors using service principals, this is\nthe customer-chosen name for this service principal."
        },
        "revocation_type": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RevocationType",
          "description": "Revocation type is 'manual' when the version is revoked directly or\n'inherited' when the version inherits a revocation from an upstream\nancestor."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.GetBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Bucket"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.GetBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Build"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.GetChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Channel"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.GetRegistryResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Registry"
        }
      },
      "title": "=== REGISTRY ==="
    },
    "hashicorp.cloud.packer_20230101.GetRegistryTFCRunTaskAPIResponse": {
      "type": "object",
      "properties": {
        "api_url": {
          "type": "string",
          "description": "URL of the API used by Terraform Cloud to run HCP Packer Run Tasks."
        },
        "hmac_key": {
          "type": "string",
          "description": "HMAC key used by Terraform Cloud to sign the requests to the HCP Packer run task API."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.GetSbomResponse": {
      "type": "object",
      "properties": {
        "download_url": {
          "type": "string",
          "description": "Short-lived presigned download URL to retrieve the SBOM."
        }
      },
      "title": "=== SBOMS \u0026 Packages ==="
    },
    "hashicorp.cloud.packer_20230101.GetVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Version"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ListBucketAncestryResponse": {
      "type": "object",
      "properties": {
        "relations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.BucketAncestry"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of ancestral relationships returned for the specified bucket. These can be parent or child artifacts."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ListBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Bucket"
          }
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "Pagination tokens for a subsequent request."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ListBuildsResponse": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location"
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "Pagination tokens for a subsequent request."
        },
        "builds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Build"
          }
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ListChannelAssignmentHistoryResponse": {
      "type": "object",
      "properties": {
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ChannelAssignment"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ListChannelsResponse": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Channel"
          }
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ListSbomsResponse": {
      "type": "object",
      "properties": {
        "sboms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Sbom"
          }
        }
      }
    },
    "hashicorp.cloud.packer_20230101.ListVersionsResponse": {
      "type": "object",
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Version"
          }
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.Parent": {
      "type": "object",
      "properties": {
        "bucket_name": {
          "type": "string",
          "description": "The parent bucket name."
        },
        "version_name": {
          "type": "string",
          "description": "The parent version name."
        },
        "version_id": {
          "type": "string",
          "description": "The parent version ULID."
        },
        "version_fingerprint": {
          "type": "string",
          "description": "The parent version fingerprint."
        },
        "channel_name": {
          "type": "string",
          "description": "The name of the channel associated with this relationship."
        },
        "channel_version": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ChannelVersion",
          "description": "The version currently assigned to the channel associated with the ancestry\nrelationship."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.RegenerateTFCRunTaskHmacKeyResponse": {
      "type": "object",
      "properties": {
        "hmac_key": {
          "type": "string",
          "description": "New HMAC key used by Terraform Cloud to sign the requests to the HCP Packer run task API."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.Registry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier (ULID)."
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location"
        },
        "config": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RegistryConfig"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Created datetime."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated datetime."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.RegistryBillingDeprovision": {
      "type": "object",
      "properties": {
        "at": {
          "type": "string",
          "format": "date-time",
          "description": "Datetime when the registry was deactivated of billing."
        },
        "reason": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RegistryBillingDeprovision.Reason",
          "description": "Reason for registry deactivation."
        },
        "message": {
          "type": "string",
          "description": "Message for registry deactivation."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.RegistryBillingDeprovision.Reason": {
      "type": "string",
      "enum": [
        "DELINQUENT_BILLING_ACCOUNT",
        "USER_REQUEST",
        "HASHI_ADMIN_REQUEST",
        "DEPROVISIONED_BILLING_ACCOUNT"
      ],
      "default": "DELINQUENT_BILLING_ACCOUNT"
    },
    "hashicorp.cloud.packer_20230101.RegistryConfig": {
      "type": "object",
      "properties": {
        "feature_tier": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RegistryConfig.Tier",
          "description": "Feature tier for the registry."
        },
        "activated": {
          "type": "boolean",
          "description": "Current state of the registry. A registry is activated when the system\ncorrectly starts billing for it."
        },
        "billing_deprovision": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RegistryBillingDeprovision",
          "description": "Information about the billing deactivation."
        },
        "tfc_run_task_config": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RegistryTFCRunTaskConfig",
          "description": "Required configuration to run TFC run tasks for validation against this\nregistry."
        }
      },
      "description": "The HCP Packer Registry configuration."
    },
    "hashicorp.cloud.packer_20230101.RegistryConfig.Tier": {
      "type": "string",
      "enum": [
        "UNSET",
        "STANDARD",
        "PLUS"
      ],
      "default": "UNSET"
    },
    "hashicorp.cloud.packer_20230101.RegistryTFCRunTaskConfig": {
      "type": "object",
      "properties": {
        "api_id": {
          "type": "string",
          "description": "Unique per registry API id for running HCP Packer run tasks."
        },
        "hmac_key": {
          "type": "string",
          "description": "Encrypted HMAC key used by Terraform Cloud to sign the requests to\nthe HCP Packer run task API."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.RevocationType": {
      "type": "string",
      "enum": [
        "REVOCATION_TYPE_UNSET",
        "MANUAL",
        "INHERITED"
      ],
      "default": "REVOCATION_TYPE_UNSET",
      "description": " - MANUAL: This version was revoked manually.\n - INHERITED: This version inherited a revocation from an upstream ancestor and was revoked automatically."
    },
    "hashicorp.cloud.packer_20230101.RevokedAncestor": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "The URL to get the revoked ancestor."
        },
        "bucket_name": {
          "type": "string",
          "description": "The revoked ancestor bucket name."
        },
        "version_name": {
          "type": "string",
          "description": "The revoked ancestor version name."
        },
        "version_id": {
          "type": "string",
          "description": "The revoked ancestor version ULID."
        },
        "version_fingerprint": {
          "type": "string",
          "description": "The revoked ancestor version fingerprint."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.Sbom": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier (ULID)."
        },
        "name": {
          "type": "string",
          "description": "Name of the SBOM, user-settable."
        },
        "format": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.SbomFormat",
          "description": "Format of the SBOM will either be CYCLONEDX or SPDX."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.SbomFormat": {
      "type": "string",
      "enum": [
        "CYCLONEDX",
        "SPDX"
      ],
      "default": "CYCLONEDX"
    },
    "hashicorp.cloud.packer_20230101.SearchExternalArtifactRequestBody": {
      "type": "object",
      "properties": {
        "external_identifier": {
          "type": "string",
          "description": "ID or URL of the external artifact. For example, ami-12345."
        },
        "platform": {
          "type": "string",
          "description": "Platform that this artifact is built for.\nFor example, AWS, GCP, or Azure."
        },
        "region": {
          "type": "string",
          "description": "External Region of the artifact. For example, \"ap-east-1\"."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.SearchExternalArtifactResponse": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ExternalArtifact"
          }
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.TFCArtifactValidationRunTaskResponse": {
      "type": "object",
      "title": "=== MISC ==="
    },
    "hashicorp.cloud.packer_20230101.TemplateType": {
      "type": "string",
      "enum": [
        "TEMPLATE_TYPE_UNSET",
        "HCL2",
        "JSON"
      ],
      "default": "TEMPLATE_TYPE_UNSET",
      "title": "- TEMPLATE_TYPE_UNSET: TEMPLATE_TYPE_UNSET is a sentinel zero value so that an uninitialized value can be\ndetected.\n - HCL2: HCL2 configuration template; either pkr.hcl or pkr.json\n - JSON: Legacy JSON configuration template"
    },
    "hashicorp.cloud.packer_20230101.UpdateBucketBody": {
      "type": "object",
      "properties": {
        "platforms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the cloud providers or other platforms that are included in the\nlatest completed version. e.g aws, gcp, or azure."
        },
        "description": {
          "type": "string",
          "description": "A short description of what this bucket's artifacts are for."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your bucket."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Bucket"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateBuildBody": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.BuildStatus",
          "description": "Status of the build. The status can be RUNNING, DONE, CANCELLED, FAILED,\nor UNSET."
        },
        "platform": {
          "type": "string",
          "description": "The platform that this build produced artifacts for.\nFor example, AWS, GCP, or Azure."
        },
        "packer_run_uuid": {
          "type": "string",
          "description": "The UUID specific to this call to Packer build. If you use the manifest\npost-processor, this UUID will match the UUID present there."
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.ArtifactCreateBody"
          },
          "description": "A list of artifacts to create and associate with this build."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your build."
        },
        "source_external_identifier": {
          "type": "string",
          "description": "The ID or URL of the remote cloud source artifact. Used for tracking artifact\ndependencies for build pipelines."
        },
        "parent_version_id": {
          "type": "string",
          "description": "The ID of the parent version associated with the `source_external_identifier`."
        },
        "parent_channel_id": {
          "type": "string",
          "description": "The ID of the channel that was used to fetch the parent_version_id.\nWhen the parent_channel_id is set, parent_version_id should also be set."
        },
        "metadata": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.BuildMetadata",
          "description": "Additional information set by Packer about a build, such as plugins used."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Build"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateChannelBody": {
      "type": "object",
      "properties": {
        "version_fingerprint": {
          "type": "string",
          "description": "Fingerprint of the version. The fingerprint is set by Packer when you\ncall `packer build`."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this channel's access is restricted to users with write permission in the HCP Packer registry."
        },
        "update_mask": {
          "type": "string",
          "description": "The required mask of fields to update. Fields name are converted lower-camel naming conventions.\n\nExample of usage:\n* \"versionFingerprint,restricted\" will update both assigned version and channel restriction.\n* \"versionFingerprint\" will only update the assigned version.\n* \"restricted\" will only update the channel restriction."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Channel"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateRegistryBody": {
      "type": "object",
      "properties": {
        "feature_tier": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RegistryConfig.Tier"
        },
        "activated": {
          "type": "boolean"
        },
        "update_mask": {
          "type": "string",
          "description": "To enable `Activated` field use `update_mask`. Send `[\"config.activated\",]` if you want to activate or deactivate the\nregistry. If given `[]`, we will ignore `activated` entirely."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateRegistryResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Registry"
        },
        "operation": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateVersionBody": {
      "type": "object",
      "properties": {
        "complete": {
          "type": "boolean",
          "description": "Set to \"true\" when all builds associated with this version have\nsuccessfully completed and uploaded metadata to the registry. When\n\"complete\" is true, this version is considered ready to use, and can\nhave channels assigned to it."
        },
        "revocation_message": {
          "type": "string",
          "description": "Optional field to provide the reason for why this version is being revoked."
        },
        "revoke_at": {
          "type": "string",
          "format": "date-time",
          "description": "revoke_at accepts strings in the [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)\nformat to represent the revocation timestamp. To instantly revoke the\nversion, provide the current timestamp.\nThe revoke_at timestamp will always be recorded in\nUTC (Coordinated Universal Time).\nThis option is equivalent to the 'revoke_in' option and therefore only\none of them should be set when updating the version."
        },
        "revoke_in": {
          "type": "string",
          "description": "revoke_in accepts a signed sequence of decimal numbers with a unit suffix\nto represent the duration to the revocation date, such as '30d' or '2h45m'.\nValid time units are 's', 'm', 'h', and 'd' as for seconds, minutes, hours,\nand days.\nTo instantly revoke the version, provide the duration of zero seconds\n(\"0s\").\nThe revoke_in duration will be used to calculate the version revocation\ntimestamp, which will be recorded as UTC (Coordinated Universal Time).\nThis option is equivalent to the 'revoke_at' option and therefore only one\nof them should be set when updating the version."
        },
        "restore": {
          "type": "boolean",
          "description": "When set to true, will make a previously revoked version valid again."
        },
        "skip_descendants_revocation": {
          "type": "boolean",
          "description": "When set to true, the version's descendants won't inherit its revocation\nstatus."
        },
        "disable_rollback_channels": {
          "type": "boolean",
          "description": "When set to true, any user created channels will not be rolled back to the\nlast valid version they were assigned to."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UpdateVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Version"
        },
        "operation": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UploadSbomBody": {
      "type": "object",
      "properties": {
        "compressed_sbom": {
          "type": "string",
          "format": "byte",
          "description": "The sbom bytes compressed in zstd and base 64 encoded. Only CycloneDX and SPDX SBOMs are supported, and they must be json files, XML is not supported currently."
        },
        "format": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.SbomFormat",
          "description": "Format of the SBOM, must either be CYCLONEDX or SPDX, values are case-sensitive."
        },
        "name": {
          "type": "string",
          "description": "Optional: user settable sbom name, 3-36 characters [A-Za-z0-9-]."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.UploadSbomResponse": {
      "type": "object",
      "properties": {
        "sbom": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Sbom"
        }
      }
    },
    "hashicorp.cloud.packer_20230101.Version": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier (ULID)."
        },
        "bucket_name": {
          "type": "string",
          "description": "Human-readable name for the bucket that this version is associated with."
        },
        "name": {
          "type": "string",
          "description": "Human-readable name of the version."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.VersionStatus",
          "description": "Current state of the version."
        },
        "author_id": {
          "type": "string",
          "description": "Name of the author who created this version."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Created datetime."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated datetime."
        },
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the version. The fingerprint is set by Packer when you\ncall `packer build`."
        },
        "builds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer_20230101.Build"
          },
          "description": "List of all the builds associated with this version."
        },
        "revoke_at": {
          "type": "string",
          "format": "date-time",
          "description": "Datetime from when the version is revoked an no longer trusted to be secure."
        },
        "revocation_message": {
          "type": "string",
          "description": "Short explanation of why this version was revoked."
        },
        "revocation_author": {
          "type": "string",
          "description": "Who revoked this version. For human authors (e.g. HCP Portal) this will be\nan email address. For machine authors using service principals, this is\nthe customer-chosen name for this service principal."
        },
        "revocation_type": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RevocationType",
          "description": "Revocation type is 'manual' when the version is revoked directly or\n'inherited' when the version inherits a revocation from an upstream\nancestor."
        },
        "revocation_inherited_from": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.RevokedAncestor",
          "description": "Ancestor version from whom this version inherited the revocation."
        },
        "has_descendants": {
          "type": "boolean",
          "description": "If true, this version has children versions. Knowing if a version has\ndescendants can help taking decisions such as persist revocation to all\nits descendants or not."
        },
        "template_type": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.TemplateType",
          "description": "The type of Packer configuration template used to build this version."
        },
        "parents": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.VersionParents",
          "description": "Information about this version's parents. Parents are the base artifact."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.VersionParents": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "The endpoint URL for the bucket's ancestry at this version."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer_20230101.AncestryStatus",
          "description": "The parents' overall status for the bucket's ancestry at this version.\nIf at least one parent is out of date, the overall status will be 'OUT_OF_DATE'."
        }
      }
    },
    "hashicorp.cloud.packer_20230101.VersionStatus": {
      "type": "string",
      "enum": [
        "VERSION_UNSET",
        "VERSION_RUNNING",
        "VERSION_CANCELLED",
        "VERSION_FAILED",
        "VERSION_REVOKED",
        "VERSION_REVOCATION_SCHEDULED",
        "VERSION_ACTIVE",
        "VERSION_INCOMPLETE"
      ],
      "default": "VERSION_UNSET",
      "description": " - VERSION_UNSET: UNSET is a sentinel zero value so that an uninitialized value can be\ndetected.\n - VERSION_RUNNING: Running means the `packer build` is currently running in the version.\n - VERSION_CANCELLED: Cancelled means the `packer build` was cancelled by a user.\n - VERSION_FAILED: Failed means the `packer build` failed and therefore artifact creation failed.\n - VERSION_REVOKED: Revoked means the version has been revoked.\n - VERSION_REVOCATION_SCHEDULED: Revocation scheduled means the version has been scheduled to be revoked.\n - VERSION_ACTIVE: Active means the version is valid and ready to be used.\n - VERSION_INCOMPLETE: Incomplete means the version has one or more builds that didn't run and the status is UNSET."
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
