{
  "swagger": "2.0",
  "info": {
    "title": "HashiCorp Cloud Platform Packer Artifact Registry",
    "description": "API for managing Packer images.",
    "version": "2021-04-30"
  },
  "tags": [
    {
      "name": "PackerService"
    }
  ],
  "host": "api.cloud.hashicorp.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/builds/{build_id}": {
      "get": {
        "summary": "Gets a build with its list of images.",
        "operationId": "PackerService_GetBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.GetBuildResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "description": "ULID of the build that should be retrieved.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deletes a build in the provided iteration.",
        "operationId": "PackerService_DeleteBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.DeleteBuildResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "description": "ULID of the build that should be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "Updates an image build. This may be most often used for modifying the status of a currently running build.",
        "operationId": "PackerService_UpdateBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.UpdateBuildResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "build_id",
            "description": "ULID of the build that should be updated.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "updates": {
                  "$ref": "#/definitions/hashicorp.cloud.packer.BuildUpdates",
                  "description": "Information about the build you are updating."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images": {
      "get": {
        "summary": "Lists every existing bucket in the HCP Packer registry and their last completed iteration.",
        "operationId": "PackerService_ListBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.ListBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.\n\nThe fields should be immutable, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.\n\nExample: order_by=name,created_at asc\nIn that case, 'name' will get the default 'ascending' order.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "put": {
        "summary": "Creates an image bucket in the HCP Packer registry.",
        "operationId": "PackerService_CreateBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.CreateBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "bucket_slug": {
                  "type": "string",
                  "description": "Human-readable name for the bucket."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of what this bucket's images are for."
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "A key:value map for custom, user-settable metadata about your bucket."
                },
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}": {
      "get": {
        "summary": "Gets a bucket with its latest completed iteration.",
        "operationId": "PackerService_GetBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.GetBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_id",
            "description": "ULID of the bucket.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deletes a bucket and all its information, such as iterations and builds.",
        "operationId": "PackerService_DeleteBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.DeleteBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "Updates a bucket's information.",
        "operationId": "PackerService_UpdateBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.UpdateBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of the cloud providers or other platforms that are included in the latest complete iteration. e.g aws, gcp, or azure."
                },
                "description": {
                  "type": "string",
                  "description": "A short description of what this bucket's images are for."
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "A key:value map for custom, user-settable metadata about your bucket."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/ancestry": {
      "get": {
        "summary": "Lists the ancestry relationships for an image bucket. This includes direct source images (parents) and downstream\nimages built directly from the image bucket (children).",
        "operationId": "PackerService_ListBucketAncestry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.ListBucketAncestryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket you want to list ancestry for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "The type of ancestry relations to list. Type 'parents' lists all the direct source images for this image bucket.\nType 'children' lists all of the child images built directly from this image bucket.\nIf not specified, defaults to listing both parent and child relationships for the image bucket.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "channel",
            "description": "An image channel in the image bucket associated with the request. This property filters the results to children whose parent iteration  was assigned to this channel when the children were built.\nIf not specified, the endpoint returns all children built from any iteration in this image bucket.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "incremental_version",
            "description": "The human-readable version number of an iteration that HCP Packer uses to list that iteration's parents.\nAll parents are the parent images Packer used to build this iteration. If not specified, the endpoint returns the parents of the image bucket's latest iteration.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "iteration_id",
            "description": "ULID of the iteration that HCP Packer uses to list that iteration's parents.\nAll parents are the parent images Packer used to build this iteration. If not specified, the endpoint returns the parents of the image bucket's latest iteration.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "description": "Fingerprint of an iteration that HCP Packer uses to list that iteration's parents.\nAll parents are the parent images Packer used to build this iteration. If not specified, the endpoint returns the parents of the image bucket's latest iteration.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/channels": {
      "get": {
        "summary": "Lists all channels of a given bucket.",
        "operationId": "PackerService_ListChannels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.ListChannelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket you want to list channels for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "post": {
        "summary": "Creates a channel either empty or assigned to an iteration.",
        "operationId": "PackerService_CreateChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.CreateChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket to associate the channel with.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "description": "Human-readable name for the channel."
                },
                "incremental_version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The human-readable version number assigned to this iteration."
                },
                "iteration_id": {
                  "type": "string",
                  "description": "ULID of the iteration."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of the iteration set by Packer when you call `packer build`.\nRefer to the Packer documentation for more information on how this value is set.\nThe fingerprint can be used as an identifier for the iteration."
                },
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "restriction": {
                  "$ref": "#/definitions/hashicorp.cloud.packer.CreateChannelRequest.Restriction",
                  "title": "When set, will set the channel access in HCP Packer registry. The channel is unrestricted by default;"
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/channels/{slug}": {
      "get": {
        "summary": "Gets a channel with the iteration that it is currently assigned if any.",
        "operationId": "PackerService_GetChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.GetChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket that the channel is associated with.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "description": "Human-readable name for the channel.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deletes a channel.",
        "operationId": "PackerService_DeleteChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.DeleteChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket that the channel is associated with.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "description": "Human-readable name for the channel.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "Updates a channel to clear or point to a new iteration.",
        "operationId": "PackerService_UpdateChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.UpdateChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket that the channel is associated with.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "description": "Human-readable name for the channel.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "incremental_version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The human-readable version number assigned to this iteration."
                },
                "iteration_id": {
                  "type": "string",
                  "description": "ULID of the iteration. This was created and set by the\nHCP Packer registry when the iteration was created."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of the iteration set by Packer when you call `packer build`.\nRefer to the Packer documentation for more information on how this value is set.\nThe fingerprint can be used as an identifier for the iteration."
                },
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "restriction": {
                  "$ref": "#/definitions/hashicorp.cloud.packer.UpdateChannelRequest.Restriction",
                  "title": "When set, will set the channel access in HCP Packer registry. The channel is unrestricted by default;"
                },
                "mask": {
                  "type": "string",
                  "description": "When set, the service will only update the channel with attributes listed in the mask.\nFor an empty mask list, all attributes will be updated according to their given value.\n\nOne or more of the iteration identifiers can be listed when updating the channel assignment. \nIn this case, if paths for multiple iteration identifiers are present in the mask, the \nvalues of the equivalent fields must belong to the same iteration. \nNOTE: This is different from the behavior without a mask or with an empty mask, where the \nfirst non-zero identifier (in the order iterationId, fingerprint, incrementalVersion) is the\nonly identifier used, and others are ignored.\n\nExamples of usage:\n* \"incrementalVersion,iterationId,fingerprint\"\n* \"restriction\"\n* \"restriction,iterationId\""
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/channels/{slug}/history": {
      "get": {
        "summary": "Lists a channel assignment history.",
        "operationId": "PackerService_ListChannelHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.ListChannelHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket that the channel is associated with.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "description": "Human-readable name for the channel.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iteration": {
      "get": {
        "summary": "Allows the user to get an iteration using one of the following identifiers:\n * iteration_id\n * incremental_version\n * fingerprint\nThese are supplied as a query parameter (e.g. `images/{bucket_slug}/iteration?fingerprint={fingerprint}`).",
        "operationId": "PackerService_GetIteration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.GetIterationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "incremental_version",
            "description": "The human-readable version number assigned to this iteration.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "iteration_id",
            "description": "ULID of the iteration.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "description": "Fingerprint of the iteration set by Packer when you call `packer build`.\nRefer to the Packer documentation for more information on how this value is set.\nThe fingerprint can be used as an identifier for the iteration.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iterations": {
      "get": {
        "summary": "Lists every existing iteration of a bucket.",
        "operationId": "PackerService_ListIterations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.ListIterationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.\n\nThe fields should be immutable, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.\n\nExample: order_by=name,created_at asc\nIn that case, 'name' will get the default 'ascending' order.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "post": {
        "summary": "Creates an empty iteration to be written to.\nThis API is called at the beginning of a new Packer build and does not create individual builds for the iteration.",
        "operationId": "PackerService_CreateIteration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.CreateIterationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of the iteration set by Packer when you call `packer build`.\nRefer to the Packer documentation for more information on how this value is set.\nThe fingerprint can be used as an identifier for the iteration.\nA valid fingerprint is 1-40 characters long and contains only ASCII letters, numbers, hyphens, dots, quotes,\nand underscores."
                },
                "template_type": {
                  "$ref": "#/definitions/hashicorp.cloud.packer.Iteration.TemplateType",
                  "description": "The type of Packer configuration template used to build this iteration."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iterations/{iteration_id}": {
      "post": {
        "summary": "Creates an image build in the provided image iteration. It is called once for each \"build source\" in a Packer build run.\nThe request will error if the build for a given cloud provider already exists.",
        "operationId": "PackerService_CreateBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.CreateBuildResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iteration_id",
            "description": "ULID of the iteration that this build should be associated with.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "build": {
                  "$ref": "#/definitions/hashicorp.cloud.packer.BuildCreateBody",
                  "description": "Information about the build to create."
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Fingerprint of the iteration set by Packer when you call `packer build`.\nRefer to the Packer documentation for more information on how this value is set.\nThe fingerprint can be used as an identifier for the iteration."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/images/{bucket_slug}/iterations/{iteration_id}/builds": {
      "get": {
        "summary": "Lists every existing build and its images for an iteration.",
        "operationId": "PackerService_ListBuilds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.ListBuildsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket to list builds for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iteration_id",
            "description": "ULID of the iteration to list builds for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_size",
            "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pagination.next_page_token",
            "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.previous_page_token",
            "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorting.order_by",
            "description": "Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.\n\nThe fields should be immutable, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.\n\nExample: order_by=name,created_at asc\nIn that case, 'name' will get the default 'ascending' order.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/iterations/{iteration_id}": {
      "delete": {
        "summary": "Deletes an iteration and all its information, such as its builds.",
        "operationId": "PackerService_DeleteIteration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.DeleteIterationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iteration_id",
            "description": "ULID of the iteration. This was created and set by the\nHCP Packer registry when the iteration was created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket_slug",
            "description": "Human-readable name for the bucket.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rollback_channels",
            "description": "When set to true, any user created channels will be rolled back to the last valid iteration they were assigned to.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "This API can be used to revoke, restore, or complete an iteration.\nRevoking can be done at any time to complete or incomplete iterations, immediately or in the future depending on the passing timestamp.\nWhen an iteration is revoked, all its descendants will automatically get revoked unless 'skip_descendants_revocation' is set.\nDescendants will get revoked asynchronously to the request.\nRevoked iterations cannot be updated unless restored. To make build-specific updates for builds within the iteration, use the Update Build endpoint.",
        "operationId": "PackerService_UpdateIteration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.UpdateIterationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iteration_id",
            "description": "ULID of the iteration.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "bucket_slug": {
                  "type": "string",
                  "description": "Human-readable name for the bucket."
                },
                "complete": {
                  "type": "boolean",
                  "description": "Set to \"true\" when all builds associated with this iteration have\nsuccessfully completed and uploaded metadata to the registry. When\n\"complete\" is true, this iteration is considered ready to use, and can\nhave channels assigned to it."
                },
                "revocation_message": {
                  "type": "string",
                  "description": "Optional field to provide the reason for why this iteration is being revoked."
                },
                "revoke_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "revoke_at accepts strings in the [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)\nformat to represent the revocation timestamp. To instantly revoke the iteration, provide the current timestamp.\nThe revoke_at timestamp will always be recorded in UTC (Coordinated Universal Time).\nThis option is equivalent to the 'revoke_in' option and therefore only one of them should be set when updating\nthe iteration."
                },
                "revoke_in": {
                  "type": "string",
                  "description": "revoke_in accepts a signed sequence of decimal numbers with a unit suffix to represent the duration\nto the revocation date, such as '30d' or '2h45m'.\nValid time units are 's', 'm', 'h', and 'd' as for seconds, minutes, hours, and days.\nTo instantly revoke the iteration, provide the duration of zero seconds (\"0s\").\nThe revoke_in duration will be used to calculate the iteration revocation timestamp,\nwhich will be recorded as UTC (Coordinated Universal Time).\nThis option is equivalent to the 'revoke_at' option and therefore only one of them should be set when updating\nthe iteration."
                },
                "restore": {
                  "type": "boolean",
                  "description": "When set to true, will make a previously revoked iteration valid again."
                },
                "skip_descendants_revocation": {
                  "type": "boolean",
                  "description": "When set to true, the iteration's descendants won't inherit its revocation status."
                },
                "rollback_channels": {
                  "type": "boolean",
                  "description": "When set to true, any user created channels will be rolled back to the last valid iteration they were assigned to."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/registry": {
      "get": {
        "summary": "Gets a HCP Packer registry.",
        "operationId": "PackerService_GetRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.GetRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "delete": {
        "summary": "Deactivates an active HCP packer registry. Deactivating a registry will stop any additional billing for the resource.\nSetting the `hard_delete` param to true will delete the registry and any associated resources from the database.",
        "operationId": "PackerService_DeleteRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.DeleteRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hard_delete",
            "description": "When set to true, the registry will be deleted from database\nand recovery will no longer be possible.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "put": {
        "summary": "Creates a HCP Packer registry and starts billing for it.",
        "operationId": "PackerService_CreateRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.CreateRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "feature_tier": {
                  "$ref": "#/definitions/hashicorp.cloud.packer.RegistryConfig.Tier",
                  "description": "Feature tier of the Registry."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      },
      "patch": {
        "summary": "Updates the feature tier of an HCP Packer registry.",
        "operationId": "PackerService_UpdateRegistry",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.UpdateRegistryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                },
                "feature_tier": {
                  "$ref": "#/definitions/hashicorp.cloud.packer.RegistryConfig.Tier",
                  "description": "Feature tier of the Registry.\nWhen trying to update a registry to the deprecated PRIVATE_BETA tier, HCP Packer will\nautomatically update to STANDARD."
                },
                "activate": {
                  "type": "boolean",
                  "description": "Activates a deactivated registry. A registry can only be activated\nif the organization billing account is valid (e.g. valid credits or payment method)."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/runtasks/hmac": {
      "patch": {
        "summary": "Regenerates the HMAC key used to sign requests from Terraform Cloud to HCP Packer run tasks.",
        "operationId": "PackerService_RegenerateTFCRunTaskHmacKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.RegenerateTFCRunTaskHmacKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "object",
                  "description": "Location represents a target for an operation in HCP."
                }
              }
            }
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    },
    "/packer/2021-04-30/organizations/{location.organization_id}/projects/{location.project_id}/runtasks/{task_type}": {
      "get": {
        "summary": "Gets the HCP Packer registry API URL and HMAC key to integrate with Terraform Cloud as a Run Task.",
        "operationId": "PackerService_GetRegistryTFCRunTaskAPI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hashicorp.cloud.packer.GetRegistryTFCRunTaskAPIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "location.organization_id",
            "description": "organization_id is the id of the organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location.project_id",
            "description": "project_id is the projects id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "task_type",
            "description": "The HCP Packer Terraform Cloud run task type.\nCurrently, the only existing type is `validation`.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PackerService"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "hashicorp.cloud.common.PaginationRequest": {
      "type": "object",
      "properties": {
        "page_size": {
          "type": "integer",
          "format": "int64",
          "description": "The max number of results per page that should be returned. If the number\nof available results is larger than `page_size`, a `next_page_token` is\nreturned which can be used to get the next page of results in subsequent\nrequests. A value of zero will cause `page_size` to be defaulted."
        },
        "next_page_token": {
          "type": "string",
          "description": "Specifies a page token to use to retrieve the next page. Set this to the\n`next_page_token` returned by previous list requests to get the next page of\nresults. If set, `previous_page_token` must not be set."
        },
        "previous_page_token": {
          "type": "string",
          "description": "Specifies a page token to use to retrieve the previous page. Set this to\nthe `previous_page_token` returned by previous list requests to get the\nprevious page of results. If set, `next_page_token` must not be set."
        }
      },
      "description": "PaginationRequest are the parameters for a paginated list request."
    },
    "hashicorp.cloud.common.PaginationResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "type": "string",
          "description": "This token allows you to get the next page of results for list requests.\nIf the number of results is larger than `page_size`, use the\n`next_page_token` as a value for the query parameter `next_page_token` in\nthe next request. The value will become empty when there are no more pages."
        },
        "previous_page_token": {
          "type": "string",
          "description": "This token allows you to get the previous page of results for list\nrequests. If the number of results is larger than `page_size`, use the\n`previous_page_token` as a value for the query parameter\n`previous_page_token` in the next request. The value will become empty when\nthere are no more pages."
        }
      },
      "description": "PaginationResponse is the response holding the page tokens for a paginated\nlist response."
    },
    "hashicorp.cloud.common.SortingRequest": {
      "type": "object",
      "properties": {
        "order_by": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the list of per field ordering that should be used for sorting.\nThe order matters as rows are sorted in order by fields and when the field\nmatches, the next field is used to tie break the ordering.\nThe per field default ordering is ascending.\n\nThe fields should be immutable, unique, and orderable. If the field is\nnot unique, more than one sort fields should be passed.\n\nExample: order_by=name,created_at asc\nIn that case, 'name' will get the default 'ascending' order."
        }
      },
      "description": "SortingRequest are the parameters for a sorted list request."
    },
    "hashicorp.cloud.location.Link": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "type is the unique type of the resource. Each service publishes a\nunique set of types. The type value is recommended to be formatted\nin \"\u003corg\u003e.\u003ctype\u003e\" such as \"hashicorp.hvn\". This is to prevent conflicts\nin the future, but any string value will work."
        },
        "id": {
          "type": "string",
          "description": "id is the identifier for this resource."
        },
        "uuid": {
          "type": "string",
          "description": "uuid is the unique UUID for this resource."
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location",
          "description": "location is the location where this resource is."
        },
        "description": {
          "type": "string",
          "description": "description is a human-friendly description for this link. This is\nused primarily for informational purposes such as error messages."
        }
      },
      "description": "Link is used to uniquely reference any resource within HashiCorp Cloud.\nThis can be conceptually considered a \"foreign key\"."
    },
    "hashicorp.cloud.location.Location": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string",
          "description": "organization_id is the id of the organization."
        },
        "project_id": {
          "type": "string",
          "description": "project_id is the projects id."
        }
      },
      "description": "Location represents a target for an operation in HCP."
    },
    "hashicorp.cloud.operation.Operation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the unique ID for this operation used in other RPC calls.\nThis ID is only guaranteed to be unique within the region that\nthe operation is running in."
        },
        "state": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation.State",
          "description": "state is the current state of the operation. This is a simple tri-state:\nPENDING means the operation is created but not yet started, RUNNING means\nthe operation is currently running (though it may be very long-running),\nand DONE means the operation is complete whether successfully or not."
        },
        "error": {
          "$ref": "#/definitions/google.rpc.Status",
          "description": "error is the error that occurred in the operation."
        },
        "response": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "response is the result of the operation. See the documentation for the API\ncall creating the operation to understand what the value of this is."
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location",
          "description": "Location is location of the resource that this operation belongs to."
        },
        "link": {
          "$ref": "#/definitions/hashicorp.cloud.location.Link",
          "description": "Link is the resource link the operation is associated with."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "CreatedAt is the timestamp of when the operation was first created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "UpdatedAt is the timestamp of when the operation was last updated."
        }
      },
      "description": "Operation represents a single operation."
    },
    "hashicorp.cloud.operation.Operation.State": {
      "type": "string",
      "enum": [
        "PENDING",
        "RUNNING",
        "DONE",
        "QUEUED"
      ],
      "default": "PENDING",
      "description": "State is one of the states that an Operation can be in.\n\nThe states are purposely coarse grained to make it easy to understand\nthe operation state machine: pending =\u003e running =\u003e done. Or pending =\u003e\nqueued =\u003e running =\u003e done. No other state transitions are possible.\nSuccess/failure can be determined based on the result oneof."
    },
    "hashicorp.cloud.packer.Bucket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) of the bucket."
        },
        "slug": {
          "type": "string",
          "description": "Human-readable name for the bucket."
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location"
        },
        "latest_iteration": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketLatestIteration",
          "description": "The bucket's most recent iteration. This iteration may be complete or not."
        },
        "latest_version": {
          "type": "integer",
          "format": "int32",
          "description": "The human-readable version of the most recent completed iteration in this bucket."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the bucket was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the bucket was last updated."
        },
        "platforms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the cloud providers or other platforms that are included in the latest complete iteration. e.g aws, gcp, or azure."
        },
        "description": {
          "type": "string",
          "description": "A short description of what this bucket's images are for."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your bucket."
        },
        "iteration_count": {
          "type": "string",
          "format": "int64",
          "description": "The total number of iterations in this bucket."
        },
        "parents": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketParents",
          "description": "Information about this image bucket's parents. Parents are the base images Packer used to build the latest complete iteration\nin this image bucket."
        },
        "children": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketChildren",
          "description": "Information about this image bucket's children. Children are image buckets that used any iteration of this bucket\nas the base image for their latest complete iteration."
        }
      }
    },
    "hashicorp.cloud.packer.BucketAncestry": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketAncestry.Status",
          "description": "The status of the relationship between the parent and child buckets."
        },
        "parent": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketAncestry.Parent",
          "description": "The parent image bucket and iteration that relates to the child image bucket's latest iteration."
        },
        "child": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketAncestry.Child",
          "description": "The child image bucket and the iteration in that image bucket that relates to the parent."
        }
      },
      "description": "The parent-child relationship between two image buckets."
    },
    "hashicorp.cloud.packer.BucketAncestry.Child": {
      "type": "object",
      "properties": {
        "bucket_slug": {
          "type": "string",
          "description": "The child image bucket's slug."
        },
        "iteration_id": {
          "type": "string",
          "description": "The child iteration's ULID."
        },
        "iteration_incremental_version": {
          "type": "integer",
          "format": "int32",
          "description": "The child iteration's incremental version."
        },
        "iteration_fingerprint": {
          "type": "string",
          "description": "The child iteration's build fingerprint."
        }
      }
    },
    "hashicorp.cloud.packer.BucketAncestry.Parent": {
      "type": "object",
      "properties": {
        "bucket_slug": {
          "type": "string",
          "description": "The parent bucket slug."
        },
        "iteration_id": {
          "type": "string",
          "description": "The parent iteration ULID."
        },
        "iteration_incremental_version": {
          "type": "integer",
          "format": "int32",
          "description": "The parent iteration incremental version."
        },
        "iteration_fingerprint": {
          "type": "string",
          "description": "The parent iteration fingerprint."
        },
        "channel": {
          "type": "string",
          "description": "The image channel associated with this relationship."
        },
        "channel_iteration": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketAncestry.Parent.ChannelIteration",
          "description": "The iteration currently assigned to the channel associated with the ancestry relationship."
        }
      }
    },
    "hashicorp.cloud.packer.BucketAncestry.Parent.ChannelIteration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The currently assigned iteration's ULID."
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32",
          "description": "The currently assigned iteration's incremental version."
        },
        "fingerprint": {
          "type": "string",
          "description": "The currently assigned iteration's build fingerprint."
        }
      }
    },
    "hashicorp.cloud.packer.BucketAncestry.Status": {
      "type": "string",
      "enum": [
        "UNDETERMINED",
        "UP_TO_DATE",
        "OUT_OF_DATE"
      ],
      "default": "UNDETERMINED",
      "description": " - UNDETERMINED: HCP Packer cannot determine whether the child image is out of date.\nThis status occurs when the parent iteration was not assigned to an image channel when Packer built the image,\nthe image channel no longer exists in the image bucket, or HCP Packer is not tracking the parent.\n - UP_TO_DATE: The child image is built from the iteration currently assigned to the image channel.\n - OUT_OF_DATE: The child image is built from a different iteration than the one currently assigned to the image channel."
    },
    "hashicorp.cloud.packer.BucketChildren": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "The URL to retrieve the list of ancestry relationships between this image bucket and its direct children."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketAncestry.Status",
          "description": "The overall ancestry status for all child iterations.\nIf at least one child is out of date, HCP Packer reports the overall status as 'OUT_OF_DATE'."
        }
      }
    },
    "hashicorp.cloud.packer.BucketLatestIteration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) of the iteration."
        },
        "bucket_slug": {
          "type": "string",
          "description": "Human-readable name for the bucket that this iteration is associated with."
        },
        "iteration_ancestor_id": {
          "type": "string",
          "description": "The unique identifier of the iteration that was used as a source\nfor this iteration, if this iteration was built on a base layer.\nDeprecated: refer to build specific source_build_ulid."
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32",
          "description": "The human-readable version number assigned to this iteration. This\nfield will only be set if the iteration is \"complete\"."
        },
        "complete": {
          "type": "boolean",
          "description": "If true, all builds associated with this iteration have successfully\ncompleted and uploaded metadata to the registry. When \"complete\" is true,\nThis iteration is considered ready to use, and can have channels assigned\nto it."
        },
        "author_id": {
          "type": "string",
          "description": "The name of the person who created this iteration."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the iteration was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the iteration was last updated."
        },
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the iteration. The fingerprint is set by Packer when you\ncall `packer build`."
        },
        "builds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.LatestIterationBuild"
          },
          "description": "A list of all the builds associated with this iteration."
        },
        "revoke_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp from when the iteration is revoked an no longer trusted to be secure."
        },
        "revocation_message": {
          "type": "string",
          "description": "A short explanation of why this iteration was revoked."
        },
        "revocation_author": {
          "type": "string",
          "description": "Who revoked this iteration. For human authors (e.g. HCP Portal) this will be an email address.\nFor machine authors using service principals, this is the customer-chosen name for this service principal."
        },
        "revocation_type": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration.RevocationType",
          "description": "Revocation type is 'manual' when self revoked or 'inherited' when inherited from a revoked ancestor."
        },
        "revocation_inherited_from": {
          "$ref": "#/definitions/hashicorp.cloud.packer.RevokedAncestor",
          "description": "The ancestor iteration from whom this iteration inherited the revocation state."
        }
      },
      "description": "A simplified Iteration used in Bucket to represent a bucket's latest iteration.\nThis iteration representation does not contain ancestry information to avoid repetition."
    },
    "hashicorp.cloud.packer.BucketParents": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "The URL to retrieve the list of ancestry relationships between this image bucket and its direct source images (parents)."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketAncestry.Status",
          "description": "The overall status for all parent iterations.\nIf at least one parent is out of date, HCP Packer reports the  overall status as 'OUT_OF_DATE'."
        }
      }
    },
    "hashicorp.cloud.packer.Build": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) of the build."
        },
        "iteration_id": {
          "type": "string",
          "description": "Unique identifier of the iteration associated with this build; this was\ncreated and set by the HCP Packer registry when the iteration was created."
        },
        "component_type": {
          "type": "string",
          "description": "Internal Packer name for the builder or post-processor component used to\nbuild this. For example, \"amazon-ebs\" or \"azure-arm\"."
        },
        "packer_run_uuid": {
          "type": "string",
          "description": "The UUID specific to this call to Packer build. If you use the manifest\npost-processor, this UUID will match the UUID present there."
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.Image"
          },
          "description": "List of images associated with this build."
        },
        "cloud_provider": {
          "type": "string",
          "description": "The cloud provider that this build produced artifacts for.\nFor example, AWS, GCP, or Azure."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BuildStatus",
          "description": "Status of the build. The status can be RUNNING, DONE, CANCELLED, FAILED,\nor UNSET."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the build was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the build was most recently updated."
        },
        "source_image_id": {
          "type": "string",
          "description": "The ID or URL of the remote cloud source image that HCP Packer uses to track image dependencies for build pipelines."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your build."
        },
        "source_build_ulid": {
          "type": "string",
          "description": "Unique identifier of the HCP Packer registry build that Packer uses  as the source\nfor this build. HCP Packer uses this to track dependencies for build pipelines."
        }
      }
    },
    "hashicorp.cloud.packer.BuildCreateBody": {
      "type": "object",
      "properties": {
        "component_type": {
          "type": "string",
          "title": "Internal Packer name for the builder or post-processor component used to\nbuild this. For example, \"amazon-ebs\" or \"azure-arm\""
        },
        "packer_run_uuid": {
          "type": "string",
          "description": "The UUID specific to this call to Packer build. If you use the manifest\npost-processor, this UUID will match the UUID present there."
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.ImageCreateBody"
          },
          "description": "List of images associated with this build."
        },
        "cloud_provider": {
          "type": "string",
          "description": "The cloud provider that this build produced artifacts for.\nFor example, AWS, GCP, or Azure."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BuildStatus",
          "description": "Status of the build. The status can be RUNNING, DONE, CANCELLED, FAILED,\nor UNSET."
        },
        "source_image_id": {
          "type": "string",
          "description": "The ID or URL of the remote cloud source image. Used for tracking image\ndependencies for build pipelines."
        },
        "source_iteration_id": {
          "type": "string",
          "description": "The ID of the parent iteration associated with the `source_image_id`.\nWhen the source iteration ID is set, the source image ID should also be set."
        },
        "source_channel_id": {
          "type": "string",
          "description": "The ID of the channel that it was used to fetch the source_iteration_id.\nWhen the source channel ID is set, the source iteration ID should also be set."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your build."
        }
      },
      "description": "This message is used for build/create calls; it removes elements from the\nBuild message that the user cannot set."
    },
    "hashicorp.cloud.packer.BuildStatus": {
      "type": "string",
      "enum": [
        "UNSET",
        "RUNNING",
        "DONE",
        "CANCELLED",
        "FAILED"
      ],
      "default": "UNSET",
      "description": " - UNSET: UNSET is a sentinel zero value so that an uninitialized value can be\ndetected.\n - RUNNING: Running means the `packer build` is currently running.\n - DONE: Done means the `packer build` has finished successfully.\n - CANCELLED: Cancelled means the `packer build` was cancelled by a user.\n - FAILED: Failed means the `packer build` failed and therefore image creation failed."
    },
    "hashicorp.cloud.packer.BuildUpdates": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BuildStatus",
          "description": "Status of the build. The status can be RUNNING, DONE, CANCELLED, FAILED,\nor UNSET."
        },
        "cloud_provider": {
          "type": "string",
          "description": "The cloud provider that this build produced artifacts for.\nFor example, AWS, GCP, or Azure."
        },
        "packer_run_uuid": {
          "type": "string",
          "description": "The UUID specific to this call to Packer build. If you use the manifest\npost-processor, this UUID will match the UUID present there."
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.ImageCreateBody"
          },
          "description": "A list of images to create and associate with this build."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your build."
        },
        "source_image_id": {
          "type": "string",
          "description": "The ID or URL of the remote cloud source image. Used for tracking image\ndependencies for build pipelines."
        },
        "source_iteration_id": {
          "type": "string",
          "description": "The ID of the parent iteration associated with the `source_image_id`.\nWhen the source iteration ID is set, the source image ID should also be set."
        },
        "source_channel_id": {
          "type": "string",
          "description": "The ID of the channel that it was used to fetch the source_iteration_id.\nWhen the source channel ID is set, the source iteration ID should also be set."
        }
      },
      "description": "BuildUpdates is used to group the elements of a Build that are\nallowed to be updated after the build has been created. It is part of the\nUpdateBuildRequest."
    },
    "hashicorp.cloud.packer.Channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) of the channel."
        },
        "slug": {
          "type": "string",
          "description": "Human-readable name for the channel."
        },
        "bucket_slug": {
          "type": "string",
          "description": "Human-readable name for the bucket this channel is associated with."
        },
        "author_id": {
          "type": "string",
          "description": "The user who last updated the channel."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the channel was created."
        },
        "pointer": {
          "$ref": "#/definitions/hashicorp.cloud.packer.ChannelIterationPointer",
          "description": "A pointer to the iteration currently associated with this channel.\nDeprecated: look at the Channel.iteration instead."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the channel was last updated."
        },
        "iteration": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration",
          "description": "The iteration the channel is pointing to."
        },
        "managed": {
          "type": "boolean",
          "description": "If the channel is managed by HCP Packer (such as the latest channel)."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this channel's access is restricted to users of the organization with permission to create and manage resources."
        }
      }
    },
    "hashicorp.cloud.packer.ChannelAssignment": {
      "type": "object",
      "properties": {
        "iteration": {
          "$ref": "#/definitions/hashicorp.cloud.packer.ChannelAssignment.Iteration",
          "description": "The assigned iteration."
        },
        "author_id": {
          "type": "string",
          "description": "The user who assigned this iteration."
        },
        "promoted_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the iteration assigment happened."
        }
      },
      "description": "A channel assignment history entry. It contains information about when an iteration was assigned to a channel, and the user who did the assignment."
    },
    "hashicorp.cloud.packer.ChannelAssignment.Iteration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) of the iteration."
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32",
          "description": "The human-readable version number assigned to this iteration. This\nfield will only be set if the iteration is \"complete\"."
        },
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the iteration. The fingerprint is set by Packer when you\ncall `packer build`."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.IterationExternalStatus",
          "description": "The current state of the iteration."
        },
        "parents": {
          "$ref": "#/definitions/hashicorp.cloud.packer.IterationParents",
          "description": "Information about this iteration's parents. Parents are the base images\nPacker used to build this iteration."
        }
      }
    },
    "hashicorp.cloud.packer.ChannelIterationPointer": {
      "type": "object",
      "properties": {
        "iteration": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration",
          "description": "The iteration the channel is pointing to."
        },
        "author_id": {
          "type": "string",
          "description": "The user who pointed the channel to the iteration."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the channel pointer was created."
        }
      },
      "description": "A Channel Pointer is a special object that tracks channel\nhistory by storing both which iteration the channel points to and also when\nthe channel was updated to point at said iteration.\nDeprecated: The iteration object is directly embed to Channel."
    },
    "hashicorp.cloud.packer.CreateBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Bucket",
          "description": "Information about the bucket that was created."
        }
      }
    },
    "hashicorp.cloud.packer.CreateBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Build",
          "description": "Information about the build that was created."
        }
      }
    },
    "hashicorp.cloud.packer.CreateChannelRequest.Restriction": {
      "type": "string",
      "enum": [
        "RESTRICTION_UNSET",
        "RESTRICTED",
        "UNRESTRICTED"
      ],
      "default": "RESTRICTION_UNSET",
      "description": " - RESTRICTED: Make the channel only visible to users with permission to create and manage.\n - UNRESTRICTED: Make the channel visible to every member of this organization."
    },
    "hashicorp.cloud.packer.CreateChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Channel",
          "description": "Information about the channel that was created."
        }
      }
    },
    "hashicorp.cloud.packer.CreateIterationResponse": {
      "type": "object",
      "properties": {
        "iteration": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration"
        }
      }
    },
    "hashicorp.cloud.packer.CreateRegistryResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Registry"
        },
        "operation": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation"
        }
      }
    },
    "hashicorp.cloud.packer.DeleteBucketResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.DeleteBuildResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.DeleteChannelResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.DeleteIterationResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.DeleteRegistryResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Registry"
        },
        "operation": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation"
        }
      }
    },
    "hashicorp.cloud.packer.GetBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Bucket",
          "description": "The requested information about the bucket."
        }
      }
    },
    "hashicorp.cloud.packer.GetBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Build",
          "description": "The requested build."
        }
      }
    },
    "hashicorp.cloud.packer.GetChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Channel",
          "description": "The requested channel information."
        }
      }
    },
    "hashicorp.cloud.packer.GetIterationResponse": {
      "type": "object",
      "properties": {
        "iteration": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration",
          "description": "The requested iteration."
        }
      }
    },
    "hashicorp.cloud.packer.GetRegistryResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Registry"
        }
      }
    },
    "hashicorp.cloud.packer.GetRegistryTFCRunTaskAPIResponse": {
      "type": "object",
      "properties": {
        "api_url": {
          "type": "string",
          "description": "URL of the API used by Terraform Cloud to run HCP Packer Run Tasks."
        },
        "hmac_key": {
          "type": "string",
          "description": "HMAC key used by Terraform Cloud to sign the requests to the HCP Packer run task API."
        }
      }
    },
    "hashicorp.cloud.packer.Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) for the image."
        },
        "image_id": {
          "type": "string",
          "description": "ID or URL of the remote cloud image as given by a build. For example, ami-12345."
        },
        "region": {
          "type": "string",
          "description": "Cloud-specific region as provided by `packer build`. For example, \"ap-east-1\"."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp at which this image was created."
        }
      },
      "description": "Represents the actual region:image_id mapping for a single image, in a\nsingle build."
    },
    "hashicorp.cloud.packer.ImageCreateBody": {
      "type": "object",
      "properties": {
        "image_id": {
          "type": "string",
          "description": "ID or URL of the remote cloud image as given by a build."
        },
        "region": {
          "type": "string",
          "description": "Cloud-specific region as provided by `packer build`. For example, \"ap-east-1\"."
        }
      },
      "description": "This message is used for build/create calls; it removes elements from the\nImage message that the user cannot set."
    },
    "hashicorp.cloud.packer.Iteration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) of the iteration."
        },
        "bucket_slug": {
          "type": "string",
          "description": "Human-readable name for the bucket that this iteration is associated with."
        },
        "iteration_ancestor_id": {
          "type": "string",
          "description": "The unique identifier of the iteration that was used as a source\nfor this iteration, if this iteration was built on a base layer.\nDeprecated: refer to build specific source_build_ulid."
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32",
          "description": "The human-readable version number assigned to this iteration. This\nfield will only be set if the iteration is \"complete\"."
        },
        "complete": {
          "type": "boolean",
          "description": "If true, all builds associated with this iteration have successfully\ncompleted and uploaded metadata to the registry. When \"complete\" is true,\nThis iteration is considered ready to use, and can have channels assigned\nto it."
        },
        "author_id": {
          "type": "string",
          "description": "The name of the person who created this iteration."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the iteration was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the iteration was last updated."
        },
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the iteration. The fingerprint is set by Packer when you\ncall `packer build`."
        },
        "builds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.Build"
          },
          "description": "A list of all the builds associated with this iteration."
        },
        "revoke_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp from when the iteration is revoked an no longer trusted to be secure."
        },
        "revocation_message": {
          "type": "string",
          "description": "A short explanation of why this iteration was revoked."
        },
        "revocation_author": {
          "type": "string",
          "description": "Who revoked this iteration. For human authors (e.g. HCP Portal) this will be an email address.\nFor machine authors using service principals, this is the customer-chosen name for this service principal."
        },
        "revocation_type": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration.RevocationType",
          "description": "Revocation type is 'manual' when the iteration is revoked directly  or 'inherited' when the iteration inherits\na revocation from an upstream ancestor."
        },
        "revocation_inherited_from": {
          "$ref": "#/definitions/hashicorp.cloud.packer.RevokedAncestor",
          "description": "The ancestor iteration from whom this iteration inherited the revocation."
        },
        "has_descendants": {
          "type": "boolean",
          "description": "If true, this iteration has children iterations. Knowing if an iteration has descendants can help\ntaking decisions such as persist revocation to all its descendants or not."
        },
        "template_type": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration.TemplateType",
          "description": "The type of Packer configuration template used to build this iteration."
        }
      }
    },
    "hashicorp.cloud.packer.Iteration.RevocationType": {
      "type": "string",
      "enum": [
        "UNSET",
        "MANUAL",
        "INHERITED"
      ],
      "default": "UNSET",
      "description": " - MANUAL: This iteration was revoked manually.\n - INHERITED: This iteration inherited a revocation from an upstream ancestor and was revoked automatically."
    },
    "hashicorp.cloud.packer.Iteration.TemplateType": {
      "type": "string",
      "enum": [
        "TEMPLATE_TYPE_UNSET",
        "HCL2",
        "JSON"
      ],
      "default": "TEMPLATE_TYPE_UNSET",
      "title": "- TEMPLATE_TYPE_UNSET: TEMPLATE_TYPE_UNSET is a sentinel zero value so that an uninitialized value can be\ndetected.\n - HCL2: HCL2 configuration template; either pkr.hcl or pkr.json\n - JSON: Legacy JSON configuration template"
    },
    "hashicorp.cloud.packer.IterationExternalStatus": {
      "type": "string",
      "enum": [
        "ITERATION_UNSET",
        "ITERATION_RUNNING",
        "ITERATION_CANCELLED",
        "ITERATION_FAILED",
        "ITERATION_REVOKED",
        "ITERATION_REVOCATION_SCHEDULED",
        "ITERATION_ACTIVE"
      ],
      "default": "ITERATION_UNSET",
      "description": " - ITERATION_UNSET: UNSET is a sentinel zero value so that an uninitialized value can be\ndetected.\n - ITERATION_RUNNING: Running means the `packer build` is currently running in the iteration.\n - ITERATION_CANCELLED: Cancelled means the `packer build` was cancelled by a user.\n - ITERATION_FAILED: Failed means the `packer build` failed and therefore image creation failed.\n - ITERATION_REVOKED: Revoked means the iteration has been revoked.\n - ITERATION_REVOCATION_SCHEDULED: Revocation scheduled means the iteration has been scheduled to be revoked.\n - ITERATION_ACTIVE: Active means the iteration is valid and ready to be used."
    },
    "hashicorp.cloud.packer.IterationParents": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "The endpoint URL for the bucket's ancestry at this iteration."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BucketAncestry.Status",
          "description": "The parents' overall status for the bucket's ancestry at this iteration.\nIf at least one parent is out of date, the overall status will be 'OUT_OF_DATE'."
        }
      }
    },
    "hashicorp.cloud.packer.IterationforList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) of the iteration."
        },
        "bucket_slug": {
          "type": "string",
          "description": "Human-readable name for the bucket."
        },
        "iteration_ancestor_id": {
          "type": "string",
          "description": "The unique identifier of the iteration that was used as a source\nfor this iteration, if this iteration was built on a base layer.\nDeprecated: Deprecated: refer to build specific source_build_ulid."
        },
        "incremental_version": {
          "type": "integer",
          "format": "int32",
          "description": "The human-readable version number assigned to this iteration. This\nfield will only be set if the iteration is \"complete\"."
        },
        "complete": {
          "type": "boolean",
          "description": "If true, all builds associated with this iteration have successfully\ncompleted and uploaded metadata to the registry. When \"complete\" is true,\nThis iteration is considered ready to use, and can have channels assigned\nto it."
        },
        "author_id": {
          "type": "string",
          "description": "Who created the iteration."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the iteration was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the iteration was most recently updated."
        },
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the iteration. The fingerprint is set by Packer when you\ncall `packer build`."
        },
        "build_statuses": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Maps the build component type to its status enum, for displaying build\nstatus in the iterations view."
        },
        "revoke_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp from when the iteration is revoked an no longer trusted to be secure."
        },
        "revocation_message": {
          "type": "string",
          "description": "A short explanation of why this iteration was revoked."
        },
        "revocation_author": {
          "type": "string",
          "description": "Who revoked this iteration. For human authors (e.g. HCP Portal) this will be an email address.\nFor machine authors using service principals, this is the customer-chosen name for this service principal."
        },
        "revocation_type": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration.RevocationType",
          "description": "Revocation type is 'manual' when self revoked or 'inherited' when inherited from a revoked ancestor."
        },
        "revocation_inherited_from": {
          "$ref": "#/definitions/hashicorp.cloud.packer.RevokedAncestor",
          "description": "The ancestor iteration from whom this iteration inherited the revocation state."
        },
        "has_descendants": {
          "type": "boolean",
          "description": "If true, this iteration has children iterations. Knowing if an iteration has descendants can help\ntaking decisions such as persist revocation to all its descendants or not."
        }
      },
      "description": "The list endpoint does not return build information."
    },
    "hashicorp.cloud.packer.LatestIterationBuild": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Universally Unique Lexicographically Sortable Identifier (ULID) of the build."
        },
        "iteration_id": {
          "type": "string",
          "description": "Unique identifier of the iteration associated with this build; this was\ncreated and set by the HCP Packer registry when the iteration was created."
        },
        "component_type": {
          "type": "string",
          "description": "Internal Packer name for the builder or post-processor component used to\nbuild this. For example, \"amazon-ebs\" or \"azure-arm\"."
        },
        "packer_run_uuid": {
          "type": "string",
          "description": "The UUID specific to this call to Packer build. If you use the manifest\npost-processor, this UUID will match the UUID present there."
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.Image"
          },
          "description": "List of images associated with this build."
        },
        "cloud_provider": {
          "type": "string",
          "description": "The cloud provider that this build produced artifacts for.\nFor example, AWS, GCP, or Azure."
        },
        "status": {
          "$ref": "#/definitions/hashicorp.cloud.packer.BuildStatus",
          "description": "Status of the build. The status can be RUNNING, DONE, CANCELLED, FAILED,\nor UNSET."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the build was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the build was most recently updated."
        },
        "source_image_id": {
          "type": "string",
          "description": "The ID or URL of the remote cloud source image. Used for tracking image\ndependencies for build pipelines."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A key:value map for custom, user-settable metadata about your build."
        },
        "source_build_ulid": {
          "type": "string",
          "description": "Unique identifier of the HCP Packer registry build used as the source\nfor this build. Used for tracking dependencies for build pipelines."
        }
      },
      "description": "A simplified Build used in BucketLatestIteration to represent the builds of a bucket's latest iteration.\nThis build representation does not contain ancestry information to avoid repetition."
    },
    "hashicorp.cloud.packer.ListBucketAncestryResponse": {
      "type": "object",
      "properties": {
        "relations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.BucketAncestry"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of ancestral relationships returned for the specified image bucket. These can be parent or child images."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse"
        }
      }
    },
    "hashicorp.cloud.packer.ListBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.Bucket"
          },
          "description": "List of buckets."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "Pagination tokens for a subsequent request."
        }
      }
    },
    "hashicorp.cloud.packer.ListBuildsResponse": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location"
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse",
          "description": "Pagination tokens for a subsequent request."
        },
        "builds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.Build"
          },
          "description": "The requested list of builds."
        }
      }
    },
    "hashicorp.cloud.packer.ListChannelHistoryResponse": {
      "type": "object",
      "properties": {
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.ChannelAssignment"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "The total amount of channel assignments that are listed"
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse"
        }
      }
    },
    "hashicorp.cloud.packer.ListChannelsResponse": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.Channel"
          }
        }
      }
    },
    "hashicorp.cloud.packer.ListIterationsResponse": {
      "type": "object",
      "properties": {
        "iterations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hashicorp.cloud.packer.IterationforList"
          },
          "description": "The requested list of iterations."
        },
        "pagination": {
          "$ref": "#/definitions/hashicorp.cloud.common.PaginationResponse"
        }
      }
    },
    "hashicorp.cloud.packer.RegenerateTFCRunTaskHmacKeyResponse": {
      "type": "object",
      "properties": {
        "hmac_key": {
          "type": "string",
          "description": "New HMAC key used by Terraform Cloud to sign the requests to the HCP Packer run task API."
        }
      }
    },
    "hashicorp.cloud.packer.Registry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ULID of the registry."
        },
        "location": {
          "$ref": "#/definitions/hashicorp.cloud.location.Location"
        },
        "config": {
          "$ref": "#/definitions/hashicorp.cloud.packer.RegistryConfig"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the registry was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the registry was last updated."
        }
      }
    },
    "hashicorp.cloud.packer.RegistryBillingDeprovision": {
      "type": "object",
      "properties": {
        "at": {
          "type": "string",
          "format": "date-time",
          "description": "The time the registry was deactivated of billing."
        },
        "reason": {
          "$ref": "#/definitions/hashicorp.cloud.packer.RegistryBillingDeprovision.Reason",
          "description": "Reason of why the registry was deactivated."
        }
      }
    },
    "hashicorp.cloud.packer.RegistryBillingDeprovision.Reason": {
      "type": "string",
      "enum": [
        "DELINQUENT_BILLING_ACCOUNT",
        "USER_REQUEST",
        "HASHI_ADMIN_REQUEST",
        "DEPROVISIONED_BILLING_ACCOUNT"
      ],
      "default": "DELINQUENT_BILLING_ACCOUNT"
    },
    "hashicorp.cloud.packer.RegistryConfig": {
      "type": "object",
      "properties": {
        "feature_tier": {
          "$ref": "#/definitions/hashicorp.cloud.packer.RegistryConfig.Tier",
          "description": "The feature tier for the registry."
        },
        "activated": {
          "type": "boolean",
          "description": "A registry is activated when the system correctly starts billing for it."
        },
        "billing_deprovision": {
          "$ref": "#/definitions/hashicorp.cloud.packer.RegistryBillingDeprovision",
          "description": "The information about the billing deactivation."
        },
        "tfc_run_task_config": {
          "$ref": "#/definitions/hashicorp.cloud.packer.RegistryTFCRunTaskConfig",
          "description": "Required configuration to run TFC run tasks for validation against this registry."
        }
      },
      "title": "The HCP Packer Registry configuration"
    },
    "hashicorp.cloud.packer.RegistryConfig.Tier": {
      "type": "string",
      "enum": [
        "UNSET",
        "PRIVATE_BETA",
        "STANDARD",
        "PLUS"
      ],
      "default": "UNSET",
      "title": "- PRIVATE_BETA: Deprecated"
    },
    "hashicorp.cloud.packer.RegistryTFCRunTaskConfig": {
      "type": "object",
      "properties": {
        "api_id": {
          "type": "string",
          "description": "Unique per registry API id for running HCP Packer run tasks."
        },
        "hmac_key": {
          "type": "string",
          "description": "Encrypted HMAC key used by Terraform Cloud to sign the requests to the HCP Packer run task API."
        }
      }
    },
    "hashicorp.cloud.packer.RevokedAncestor": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "The URL to get the revoked ancestor."
        },
        "bucket_slug": {
          "type": "string",
          "description": "The revoked ancestor bucket slug."
        },
        "iteration_incremental_version": {
          "type": "integer",
          "format": "int32",
          "description": "The revoked ancestor iteration incremental version."
        },
        "iteration_id": {
          "type": "string",
          "description": "The revoked ancestor iteration ULID."
        },
        "iteration_fingerprint": {
          "type": "string",
          "description": "The revoked ancestor iteration fingerprint."
        }
      }
    },
    "hashicorp.cloud.packer.TFCImageValidationRunTaskResponse": {
      "type": "object"
    },
    "hashicorp.cloud.packer.UpdateBucketResponse": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Bucket",
          "description": "Information about the bucket that was updated."
        }
      }
    },
    "hashicorp.cloud.packer.UpdateBuildResponse": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Build",
          "description": "Information about the build you updated."
        }
      }
    },
    "hashicorp.cloud.packer.UpdateChannelRequest.Restriction": {
      "type": "string",
      "enum": [
        "RESTRICTION_UNSET",
        "RESTRICTED",
        "UNRESTRICTED"
      ],
      "default": "RESTRICTION_UNSET",
      "description": " - RESTRICTED: Make the channel only visible to users with permission to create and manage.\n - UNRESTRICTED: Make the channel visible to every member of this organization."
    },
    "hashicorp.cloud.packer.UpdateChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Channel"
        }
      }
    },
    "hashicorp.cloud.packer.UpdateIterationResponse": {
      "type": "object",
      "properties": {
        "iteration": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Iteration",
          "description": "Information about the updated iteration."
        },
        "operation": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation",
          "description": "When revoking, use this operation to follow the asynchronous process of revoking\nall the iteration's descendants."
        }
      }
    },
    "hashicorp.cloud.packer.UpdateRegistryResponse": {
      "type": "object",
      "properties": {
        "registry": {
          "$ref": "#/definitions/hashicorp.cloud.packer.Registry"
        },
        "operation": {
          "$ref": "#/definitions/hashicorp.cloud.operation.Operation"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
