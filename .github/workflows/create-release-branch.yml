name: Create release branch
run-name: ${{ github.actor }} is creating a ${{ env.product }} release branch üöÄ

on: 
  workflow_dispatch:
    branches: [main]
    inputs:
      product:
        required: true
        description: >-
          Product slug (e.g., vault, hcp)
      branchName:
        required: true
        description: >-
          Release branch name. Monthly release branches use YYYYMM notation.
          Major release branches use the corresponding content version

permissions: 
  contents: write

env:
  monthly-release-branch: ${{ }}
  rc-release-branch: Monday

jobs:
  Sync-Vault-Release-Branch:
    runs-on: ubuntu-latest
    steps:
      - name: Get monthly release branch
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
      - name: Debugging data
        run: |
          echo "üöß ${{ github.repository }} - Syncing Vault release branch with main"
          echo "    - Trigger event: ${{ github.event_name }}"
          echo "    - Branch:        ${{ github.ref }}"
          echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Status update
        run: |
          echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
          echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Setup Git User
        run: |
          git config user.name "GitHub Action"
          git config user.email "<EMAIL>"
      - name: Update vault/ Branch
        run: |
          git checkout main
          git fetch origin
          git checkout test
          git pull
          git merge origin/main
          git push origin test
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: "Wrap-up"
        run: echo "üçè This job's status is ${{ job.status }}."
