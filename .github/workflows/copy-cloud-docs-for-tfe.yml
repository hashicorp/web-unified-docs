name: Copy Cloud Docs For TFE

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Ex: docs-tfe-releases/v123456-1; ptfe-releases/v123456-1'
        required: true

env:
  release_branch: ${{ inputs.branch }}

jobs:
  copy-docs:
    name: Copy Docs
    runs-on: ubuntu-latest
    steps:
      # TODO: `exit 1` here short circuits the whole workflow, which we want, but results in
      # an unnecessary `failure` status, which we don't want.
      - name: Validate branch name
        # ✅ docs-tfe-releases/v000011-1
        # ✅ ptfe-releases/v000011-1
        # ❌ ptfe-releases/v000011-2
        # ❌ ptfe-releases/v000011-
        # ❌ ptfe-releases/v000011
        run: |
          if [[ ${{ env.release_branch }} =~ ^(docs-tfe-releases|ptfe-releases)/v[0-9]{6}-1$ ]]
          then
            echo "::notice::Branch is valid — ${{ env.release_branch }}"
          else
            echo "::warning::Branch is invalid — ${{ env.release_branch }}"
            exit 1
          fi

      - name: Set workspace & ref_name on env
        run: |
          echo "workspace=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "ref_name=$GITHUB_REF_NAME"   >> $GITHUB_ENV

      - name: Get series (YYYYMM) number from branch name
        run: |
          series=$(echo ${{ env.release_branch }} \
            | awk -F '/' '{print $2}' \
            | awk -F '-' '{print $1} {print $2}' \
            | head -n 1)
          echo "SERIES=$series" >> $GITHUB_ENV
      - name: Get release (X) number from branch name
        run: |
          release=$(echo ${{ env.release_branch }} \
            | awk -F '/' '{print $2}' \
            | awk -F '-' '{print $1} {print $2}' \
            | tail -n 1)
          echo "RELEASE=$release" >> $GITHUB_ENV

      - name: Series/Release Summary
        run: |
          echo "# Summary"                                                                            >> $GITHUB_STEP_SUMMARY
          echo "**Workflow ref**: ${{env.ref_name}}"                                                  >> $GITHUB_STEP_SUMMARY
          echo ""                                                                                     >> $GITHUB_STEP_SUMMARY
          echo "Triggered by branch creation (or manual workflow):"                                   >> $GITHUB_STEP_SUMMARY
          echo "- ${{github.server_url}}/hashicorp/${{env.target_repo}}/tree/${{env.release_branch}}" >> $GITHUB_STEP_SUMMARY
          echo ""                                                                                     >> $GITHUB_STEP_SUMMARY
          echo "**Series**: ${{env.SERIES}}"                                                          >> $GITHUB_STEP_SUMMARY
          echo "**Release**: ${{env.RELEASE}}"                                                        >> $GITHUB_STEP_SUMMARY
          echo ""                                                                                     >> $GITHUB_STEP_SUMMARY
          echo "---"                                                                                  >> $GITHUB_STEP_SUMMARY

      - name: Checkout new release branch
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{env.release_branch}}
          path: "${{github.workspace}}/release"

      - name: Checkout main for new docs version ACTUAL PR
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          path: "${{github.workspace}}/new-docs-pr"

      - name: Checkout main for new docs version DIFF PR
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          path: "${{github.workspace}}/new-docs-diff-pr"

      - name: Generate version-metadata for workflow
        working-directory: "${{github.workspace}}/workflow"
        run: |
          npm i
          npm run prebuild-only-version-metadata

      # MAKING THE DIFF PR
      - name: Copy files for new docs version DIFF PR
        uses: ./workflow/.github/actions/copy-cloud-docs-for-tfe
        with:
          source_path: "${{github.workspace}}/release"
          target_path: "${{github.workspace}}/new-docs-diff-pr"

      - name: Open new docs docs version DIFF PR
        working-directory: "${{github.workspace}}/new-docs-diff-pr"
        env:
          branch_name: docs-diff/${{env.SERIES}}-${{env.RELEASE}}
          pr_body: |
            # Automated Docs DIFF PR for TFE ${{env.SERIES}}-${{env.RELEASE}}

            **❗ DO NOT MERGE THIS PR, IT IS FOR DIFFS ONLY ❗**

            **TFE Series**: ${{ env.SERIES }}
            **TFE Release**: ${{ env.RELEASE }}

            This copies over `cloud-docs` from:
            - ${{github.server_url}}/${{github.repository}}/tree/${{env.release_branch}}

            This PR was created via:
            - ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}

            Triggered by creation of branch:
            - ${{github.server_url}}/${{github.repository}}/tree/${{env.release_branch}}

        # secrets.WORKFLOW_TESTING_TOKEN requires permissions read:org, repo, workflow
        run: |
          echo ${{ secrets.WORKFLOW_TESTING_TOKEN }} | gh auth login --with-token
          git config --global user.email "team-rel-eng@hashicorp.com"
          git config --global user.name "tfe-release-bot"

          if [ "$(git ls-remote --heads origin ${{env.branch_name}})" != "" ]; then
            echo "❌ branch name ${{env.branch_name}} already exists, please delete it from remote/origin and try again. (i.e. git push origin --delete ${{env.branch_name}})"

            echo "❌ branch name ${{env.branch_name}} already exists, please delete it from remote/origin and try again. (i.e. git push origin --delete ${{env.branch_name}})" >> $GITHUB_STEP_SUMMARY

            exit 1
          fi

          git checkout -b ${{env.branch_name}}
          git add .

          git commit -m "Automated Docs DIFF PR" --no-verify
          git push origin HEAD

          gh pr create \
            --body="${{env.pr_body}}" \
            --title="Automated Docs DIFF PR for TFE ${{env.SERIES}}-${{env.RELEASE}}" \
            --draft \
            --head ${{env.branch_name}} \
            --base main

          diff_pr_url=$(gh pr view --json url --jq '.url')
          echo "DIFF_PR_URL=${diff_pr_url}" >> $GITHUB_ENV
          echo "**Automated DIFF PR URL**: ${diff_pr_url}" >> $GITHUB_STEP_SUMMARY

          echo "(Closed DIFF PR at ${diff_pr_url} in order to prevent an accidental merge)" >> $GITHUB_STEP_SUMMARY
          gh pr close "${diff_pr_url}"


      # MAKING THE ACTUAL PR
      - name: Copy files for new docs version ACTUAL PR
        uses: ./workflow/.github/actions/copy-cloud-docs-for-tfe
        with:
          source_path: "${{github.workspace}}/release"
          target_path: "${{github.workspace}}/new-docs-pr"
          new_TFE_version: ${{env.SERIES}}-${{env.RELEASE}}

      - name: Open new docs version ACTUAL PR
        working-directory: "${{github.workspace}}/new-docs-pr"
        env:
          branch_name: docs/${{env.SERIES}}-${{env.RELEASE}}
          pr_body: |
            # Automated Docs PR for TFE ${{env.SERIES}}-${{env.RELEASE}}

            **TFE Series**: ${{ env.SERIES }}
            **TFE Release**: ${{ env.RELEASE }}

            This copies over `cloud-docs` from:
            - ${{github.server_url}}/${{github.repository}}/tree/${{env.release_branch}}

            This PR was created via:
            - ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}

            Triggered by creation of branch:
            - ${{github.server_url}}/${{github.repository}}/tree/${{env.release_branch}}

            Changes against the current TFE docs:
            - ${{ env.DIFF_PR_URL }}

            ### Reviewers

            > **Note**: The `digital-content-events` GH App currently does not have permissions to request PR reviews from teams.

            - [ ] @hashicorp/ptfe-review
            - [ ] @hashicorp/web-platform

        # secrets.WORKFLOW_TESTING_TOKEN requires permissions read:org, repo, workflow
        run: |
          echo ${{ secrets.WORKFLOW_TESTING_TOKEN }} | gh auth login --with-token
          git config --global user.email "team-rel-eng@hashicorp.com"
          git config --global user.name "tfe-release-bot"

          if [ "$(git ls-remote --heads origin ${{env.branch_name}})" != "" ]; then
            echo "❌ branch name ${{env.branch_name}} already exists, please delete it from remote/origin and try again. (i.e. git push origin --delete ${{env.branch_name}})"

            echo "❌ branch name ${{env.branch_name}} already exists, please delete it from remote/origin and try again. (i.e. git push origin --delete ${{env.branch_name}})" >> $GITHUB_STEP_SUMMARY

            exit 1
          fi

          git checkout -b ${{env.branch_name}}
          git add .

          git commit -m "Automated Docs PR" --no-verify
          git push origin HEAD

          gh pr create \
            --body="${{env.pr_body}}" \
            --title="Automated Docs PR for TFE ${{env.SERIES}}-${{env.RELEASE}}" \
            --draft \
            --head ${{env.branch_name}} \
            --base main

          pr_url=$(gh pr view --json url --jq '.url')
          echo "PR_URL=${pr_url}" >> $GITHUB_ENV
          echo "**Automated ACTUAL PR URL**: ${pr_url}" >> $GITHUB_STEP_SUMMARY
