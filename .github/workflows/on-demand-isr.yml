name: On Demand ISR

on:
  workflow_dispatch:
    inputs:
      base_sha:
        description: 'Base SHA for changed files comparison'
        required: true
        type: string
      head_sha:
        description: 'Head SHA for changed files comparison'
        required: true
        type: string

jobs:
  get-changed-files: 
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps: 
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Get changed files in the content/ subdirectories
        id: changed-files
        uses: tj-actions/changed-files@dcc7a0cba800f454d79fff4b993e8c3555bcc0a8 # v45.0.7
        with:
          files: |
            content/**/*.mdx
          base_sha: ${{ inputs.base_sha }}
          sha: ${{ inputs.head_sha }}

      - name: Print changed files
        run: |
          echo "Changed files:"
          echo ${{ steps.changed-files.outputs.all_changed_files }}

  map-files-to-urls:
    runs-on: ubuntu-latest
    needs: [get-changed-files]
    if: needs.get-changed-files.outputs.changed_files != ''
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install dependencies
        run: npm install

      - name: Run prebuild script
        run: npm run prebuild

      - name: Map files to URLs
        id: map-files
        run: |
          FILES_URLS=$(node ./scripts/map-files-to-urls.mjs ${{ needs.get-changed-files.outputs.changed_files }})
          echo "FILES_URLS<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES_URLS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # - name: Print urls
      #   run: echo ${{ steps.map-files.outputs.FILES_URLS }}
       
      - name: Revalidate paths
        id: revalidate-paths
        env:
          url: 'https://developer.hashicorp.com/api/revalidate/paths'
          auth: 'Authorization: Bearer ${{ secrets.REVALIDATE_TOKEN }}'
        run: |
          curl -X POST "${{ env.url }}" \
            -H "${{ env.auth }}" \
            -H "Content-Type: application/json" \
            -d "{\"paths\": \"${{ steps.map-files.outputs.FILES_URLS }}\" }" | jq .