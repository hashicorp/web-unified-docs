name: Create TFE Release Notes
run-name: Create changelog PR for TFE ${{ inputs.version }} ${{ inputs.dev-mode && 'in dev mode' || '' }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The TFE version for the upcoming TFE release, format is either vYYYYMM-# or MAJOR.MINOR.PATCH (without a "v" prefix).'
        required: true
      release-branch:
        description: 'The release branch for the upcoming TFE release, format is either tfe-releases/vYYYYMM or release/MAJOR.MINOR.x (without a "v" prefix).'
        required: true
      last-release-tag:
        description: 'The Github Tag for the TFE release to generate a changelog from, format is either vYYYYMM-# or vMAJOR.MINOR.PATCH (with a "v" prefix).'
        required: true
      dev-mode:
        description: 'Whether to run in dev mode, a flag for creating the release notes changelog PR'
        type: boolean
        required: false
        default: false
      notify:
        description: 'Whether to send a Slack notification for the changelog PR'
        type: boolean
        required: false
        default: true

env:
  GITHUB_TOKEN: ${{ secrets.TFE_GITHUB_TOKEN_010623 }}
  GITHUB_USER: team-rel-eng@hashicorp.com
  DEV: ${{ inputs.dev-mode }}
  NOTIFY: ${{ inputs.notify }}
  VERSION: ${{ inputs.version }}
  RELEASE_BRANCH: ${{ inputs.release-branch }}
  LAST_RELEASE_TAG: ${{ inputs.last-release-tag }}

jobs:
    copy-docs:
      uses: ./.github/workflows/copy-cloud-docs-for-tfe.yml
      with:
        version: ${{ inputs.version }}
      secrets: inherit
    release-notes:
      needs: copy-docs
      runs-on: ubuntu-latest
      steps:
        - name: Print outputs from copy-docs
          run: |
            echo "release_branch_name: ${{ needs.copy-docs.outputs.release_branch_name }}"
            echo "diff_branch_pr_url: ${{ needs.copy-docs.outputs.diff_branch_pr_url }}"
            echo "release_branch_pr_url: ${{ needs.copy-docs.outputs.release_branch_pr_url }}"

        - name: Only run in hashicorp/web-unified-docs-internal
          run: |
            if [ "${{ github.repository }}" != "hashicorp/web-unified-docs-internal" ]; then
              echo "This workflow workflow will only work in hashicorp/web-unified-docs-internal" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi

        - name: Checkout web-unified-docs repository
          uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
          with:
            ref: '${{ needs.copy-docs.outputs.release_branch_name }}'

        - name: Install and cache Ruby gems at root
          uses: ruby/setup-ruby@52753b7da854d5c07df37391a986c76ab4615999 # v1.191.0
          with:
            bundler-cache: true

        - name: Clone Services Repos for Changelog Script
          run: scripts/tfe-releases/ci/clone-service-repos.sh

        - name: Run execute-changelog-script.sh
          run: scripts/tfe-releases/ci/execute-changelog-script.sh

        - name: Turn branch into PR
          run: |
            export RELEASE_BRANCH_NAME="${{ needs.copy-docs.outputs.release_branch_name }}"
            RELEASE_NOTES_PR_URL=$(scripts/tfe-releases/ci/create-pull-request.sh)
            echo "RELEASE_NOTES_PR_URL=$RELEASE_NOTES_PR_URL" >> $GITHUB_ENV

        - name: Create PR URL
          if: ${{ env.DEV == 'false' }}
          run: |
            echo "[TFE release notes PR for ${{ env.VERSION }}](${{ env.RELEASE_NOTES_PR_URL }})" >> $GITHUB_STEP_SUMMARY

        - name: Slack notification
          id: slack
          if: ${{ env.DEV == 'false' }} && ${{ env.NOTIFY == 'true' }}
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TFE_WEBHOOK_URL }}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          uses: slackapi/slack-github-action@70cd7be8e40a46e8b0eced40b0de447bdb42f68e # v1.26.0
          with:
            payload: |
              {
                "text": "A new release notes PR has been created",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": " :memo: *A new release PR is out!* :memo:"
                    }
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "Please Review the PR - ${{ env.RELEASE_NOTES_PR_URL }}"
                    }
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": " :question: Questions? Please ask here for help! :question:"
                    }
                  }
                ]
              }

        - name: Update RELEASE PR with DIFF PR URL
          env:
            docs_pr_body: |
              # TFE Release ${{env.VERSION}}

              This PR was created via:
              - ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}

              Changes since last release, diff PR:
              - ${{ needs.copy-docs.outputs.diff_branch_pr_url }}

              Release Notes PR:
              - ${{ needs.copy-docs.outputs.release_branch_pr_url }}


              ❗ This is the Release PR that will be merged into main, once the release notes and diff PR are merged into it. ❗

              ### Reviewers
              - [ ] @hashicorp/ptfe-review
              - [ ] @hashicorp/web-platform
          run: |
            git config --global user.email "team-rel-eng@hashicorp.com"
            git config --global user.name "tfe-release-bot"

            gh pr edit ${{ needs.copy-docs.outputs.release_branch_pr_url }} \
              --body="${{env.docs_pr_body}}"
